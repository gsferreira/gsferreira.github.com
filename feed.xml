<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">Guilherme Ferreira blog</title><subtitle type="text">Guilherme Ferreira blog</subtitle><id>http://gsferreira.com/</id><updated>2019-07-16T18:23:43+01:00</updated><author><name>Guilherme Ferreira</name><uri>http://gsferreira.com</uri><email>me@gsferreira.com</email></author><generator>Sandra.Snow Atom Generator</generator><link rel="alternate" href="http://gsferreira.com/feed.xml" /><link rel="self" type="text/html" title="Guilherme Ferreira blog" href="http://gsferreira.com/feed.xml" /><entry><id>http://gsferreira.com/archive/2019/07/leading-improvement-through-honest-feedback/</id><title type="text">Leading Improvement through Honest Feedback</title><summary type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/leading-improvement-through-honest-feedback-head.png" alt="if it hurts, do it more often" /&gt;&lt;/p&gt;

&lt;p&gt;When was the last time that a waitress asked about your meal and you were really honest?&lt;/p&gt;

&lt;p&gt;Don‚Äôt feel ashamed. I‚Äôve definitively been there. Saying that the meal was good when It was dry or too salty for your taste, is more common than we can think.&lt;/p&gt;

&lt;p&gt;Unfortunately, being honest when something is wrong isn‚Äôt something that we humans tend to feel comfortable about.&lt;/p&gt;

&lt;p&gt;Probably you are asking: why the hell should I be honest and risk to advancing into a difficult conversion?! &lt;/p&gt;

&lt;p&gt;Because &lt;strong&gt;the worst kind of feedback is fake feedback&lt;/strong&gt;.&lt;/p&gt;

</summary><published>2019-07-15T23:00:00Z</published><updated>2019-07-15T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2019/07/leading-improvement-through-honest-feedback/" /><content type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/leading-improvement-through-honest-feedback-head.png" alt="if it hurts, do it more often" /&gt;&lt;/p&gt;

&lt;p&gt;When was the last time that a waitress asked about your meal and you were really honest?&lt;/p&gt;

&lt;p&gt;Don‚Äôt feel ashamed. I‚Äôve definitively been there. Saying that the meal was good when It was dry or too salty for your taste, is more common than we can think.&lt;/p&gt;

&lt;p&gt;Unfortunately, being honest when something is wrong isn‚Äôt something that we humans tend to feel comfortable about.&lt;/p&gt;

&lt;p&gt;Probably you are asking: why the hell should I be honest and risk to advancing into a difficult conversion?! &lt;/p&gt;

&lt;p&gt;Because &lt;strong&gt;the worst kind of feedback is fake feedback&lt;/strong&gt;.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Leading improvement&lt;/h2&gt;

&lt;p&gt;Have you ever thought that the restaurant could have done something to improve if you have been sincere? Wouldn‚Äôt you love to have customers telling you what you should do, to delight them?&lt;/p&gt;

&lt;p&gt;The reality is that &lt;strong&gt;without the truth, we can‚Äôt improve.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Empty criticism and snark does no one any good. But genuine, useful, insightful feedback is a priceless gift.&lt;/p&gt;
  
  &lt;p&gt;Seth Godin&lt;/p&gt;
  
  &lt;p&gt;&lt;a href="https://seths.blog/2014/01/the-feedback-youve-been-waiting-for/"&gt;https://seths.blog/2014/01/the-feedback-youve-been-waiting-for/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Promote feedback&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;When you give good feedback, you are showing kindness&lt;/strong&gt;, even when it‚Äôs not positive feedback. They should see you as a Consultant that doesn‚Äôt send a bill. Next time that you aren‚Äôt sure if you should speak up, remember that in the end, they should thank you for the consideration.&lt;/p&gt;

&lt;p&gt;Obviously that in a few cases you will find fences. Some people prefer to ignore and to resist, but in those cases, just move on. They won‚Äôt be in the business for too long for sure.&lt;/p&gt;

&lt;p&gt;To empower mutual constructive feedback, make sure you &lt;strong&gt;respond to honest feedback with a ‚ÄúThank you‚Äù&lt;/strong&gt;.&lt;br /&gt;
If you don‚Äôt assume a defensive posture and you really look grateful, you will be encouraging the behavior.&lt;/p&gt;

&lt;h2&gt;It can be difficult&lt;/h2&gt;

&lt;p&gt;The DevOps community has a mantra with which I agree: ‚Äúif it hurts, do it more often‚Äù. I believe that this applies to feedback also. 
It may be uncomfortable to start asking for honest feedback or even more to start giving feedback, especially when isn‚Äôt that good. But, if you do it over and over again, you will see that it will become natural and you will stop overthinking about it.&lt;/p&gt;

&lt;p&gt;It‚Äôs really important not to be ashamed for pointing out negative things, because when you always give ‚ÄúOK answers‚Äù, your honest positive comments will not have an impact.
If you are known as the guy who speaks honestly, you will be taken into consideration.&lt;/p&gt;

&lt;h2&gt;Make it easy&lt;/h2&gt;

&lt;p&gt;Since feedback is so valuable, why do we tend to make so difficult for others to give us feedback?&lt;/p&gt;

&lt;p&gt;Probably I want to tell you how I feel when I‚Äôm using your product, but at the moment when I understand that I need to create a user in a website and fill a 20 field long bug report, you can be sure that I will move on the next time I have an improvement idea.&lt;/p&gt;

&lt;p&gt;So, &lt;strong&gt;please bring to your systems a simple way to collect feedback&lt;/strong&gt;. Anyone should be able to leave you a note in 40 seconds and feel selfless, instead of 5 minutes of swearing and disappointment. 
If you are concerned that 40 seconds won‚Äôt be enough to capture all you need to know from the user, I bet that the user will be happier to answer an email with your questions afterward than upfront. At least they know that you have listened. No one wants to speak with a database, specially if nobody cares about it.&lt;/p&gt;

&lt;p&gt;Remember that &lt;strong&gt;a good idea can arise anywhere at any time&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;How to give honest feedback&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Being honest doesn‚Äôt mean being rudely honest.&lt;/strong&gt; No one wants to feel like being part of a Kitchen Nightmares episode, with Chef Gordon Ramsay yelling how incompetent we must be. That‚Äôs not fun. &lt;/p&gt;

&lt;p&gt;There are better ways to deliver feedback. I‚Äôve 5 tips that you can start with:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Be humble.&lt;/li&gt;
&lt;li&gt;Express your feedback as an opinion. For example, saying that the food is ‚ÄúFull of salt‚Äù is different than saying ‚ÄúIs too salty for my taste‚Äù.&lt;/li&gt;
&lt;li&gt;Expose only your top 3 ideas. Don‚Äôt be too nitpicking. Having a ‚Äúshopping list‚Äù of stuff won‚Äôt help.&lt;/li&gt;
&lt;li&gt;Balance positive feedback with negative feedback. When we have something bad to say, we can easily forget to say good things.&lt;/li&gt;
&lt;li&gt;If you have an idea on how to improve, say it!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://randomcrab.com/valuable-feedback/"&gt;&lt;img src="http://gsferreira.com/images/leading-improvement-through-honest-feedback-valuable-feedback.jpg" alt="Valuable Feedback" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Wrapping up&lt;/h2&gt;

&lt;p&gt;We live in a society that seeks approval in social networks, and that thinks that a ‚ÄúLike‚Äù is a good kind of feedback. This causes an illusion about the impact we have on society. So, next time you see that a given person, service or product has a positive impact on you, don‚Äôt limit yourself to follow them on Facebook or Instagram. Go ahead and send them a message telling how was your experience.&lt;/p&gt;

&lt;p&gt;And if you are providing a service or selling a product, make sure you make it easy to receive feedback and encourage your customer to do it.&lt;/p&gt;

&lt;p&gt;Are you ready to give it a try? I have a challenge for you. In the next 24 hours, make sure you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Send a message to one of your favorite services, telling them one thing that they can do that would improve your experience. Don‚Äôt forget to tell them to keep up with the good work. üòâ&lt;/li&gt;
&lt;li&gt;Say thanks to someone that positively impacted your life and you know that you never told them.&lt;/li&gt;
&lt;li&gt;Leave your honest feedback to this post bellow üòä&lt;/li&gt;
&lt;/ol&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2019/04/logging-grpc-requests-using-serilog/</id><title type="text">Logging gRPC requests using Serilog</title><summary type="html">&lt;p&gt;Using a Middleware to log Api Requests in ASP.NET Core is a no brainer.&lt;/p&gt;

&lt;p&gt;If you have given a try to &lt;a href="https://grpc.io/"&gt;gRPC&lt;/a&gt;, probably you want to follow the same technique and you will wish that the experience was the same.&lt;/p&gt;

&lt;p&gt;I've faced this challenge, in order to log the requests to my RPC services and I've been looking for a solution where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I can use &lt;a href="https://serilog.net/"&gt;Serilog&lt;/a&gt; to log the requests&lt;/li&gt;
&lt;li&gt;I know all the requests made to my services&lt;/li&gt;
&lt;li&gt;I know how long each request takes to respond&lt;/li&gt;
&lt;li&gt;I know the response status&lt;/li&gt;
&lt;li&gt;I can correlate each log entry using a Correlation ID&lt;/li&gt;
&lt;/ul&gt;

</summary><published>2019-04-09T23:00:00Z</published><updated>2019-04-09T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2019/04/logging-grpc-requests-using-serilog/" /><content type="html">&lt;p&gt;Using a Middleware to log Api Requests in ASP.NET Core is a no brainer.&lt;/p&gt;

&lt;p&gt;If you have given a try to &lt;a href="https://grpc.io/"&gt;gRPC&lt;/a&gt;, probably you want to follow the same technique and you will wish that the experience was the same.&lt;/p&gt;

&lt;p&gt;I've faced this challenge, in order to log the requests to my RPC services and I've been looking for a solution where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I can use &lt;a href="https://serilog.net/"&gt;Serilog&lt;/a&gt; to log the requests&lt;/li&gt;
&lt;li&gt;I know all the requests made to my services&lt;/li&gt;
&lt;li&gt;I know how long each request takes to respond&lt;/li&gt;
&lt;li&gt;I know the response status&lt;/li&gt;
&lt;li&gt;I can correlate each log entry using a Correlation ID&lt;/li&gt;
&lt;/ul&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;To accomplish that in gRPC, I took advantage of an &lt;strong&gt;Interceptor&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Using an interceptor, you can intercept the invocation of GRPC methods and intercept Unary calls (Request/Response) or Streaming communication. &lt;/p&gt;

&lt;p&gt;In this example, we will be using a &lt;strong&gt;Unary Interceptor&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This example has been done on top of gRPC HelloWorld sample in version 1.19.0&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Step 1: Install Serilog&lt;/h2&gt;

&lt;p&gt;Start by download the Sample code from gRPC. You can find the instructions &lt;a href="https://grpc.io/docs/quickstart/csharp.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Install in the GreeterServer the serilog package &lt;code&gt;Install-Package Serilog.Sinks.Console -Version 3.1.1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I'm using the Console Sink for demonstration proposes. You can easily find tons of sinks like File, Seq, Application Insights, Datadog, etc.&lt;/p&gt;

&lt;p&gt;To enable Serilog, create the logger at the beginning of the GreeterServer &lt;em&gt;Main&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public static void Main(string[] args)
    {
      Log.Logger = new LoggerConfiguration()
        .WriteTo.Console()
        .CreateLogger();
      (...)
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Step 2: Create the Interceptor&lt;/h2&gt;

&lt;p&gt;In the GreeterServer project create the &lt;em&gt;RequestLoggerInterceptor&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using Grpc.Core;
using Grpc.Core.Interceptors;
using Serilog;
using System.Diagnostics;
using System.Threading.Tasks;

namespace GreeterServer
{
  public class RequestLoggerInterceptor : Interceptor
  {
    private const string MessageTemplate =
      "{RequestMethod} responded {StatusCode} in {Elapsed:0.0000} ms";

    public override async Task&amp;lt;TResponse&amp;gt; UnaryServerHandler&amp;lt;TRequest, TResponse&amp;gt;(TRequest request, ServerCallContext context, UnaryServerMethod&amp;lt;TRequest, TResponse&amp;gt; continuation)
    {
      var sw = Stopwatch.StartNew();

      var response = await base.UnaryServerHandler(request, context, continuation);

      sw.Stop();
      Log.Logger.Information(MessageTemplate,
        context.Method,
        context.Status.StatusCode,
        sw.Elapsed.TotalMilliseconds);

      return response;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This interceptor is just logging the Status Code for each request and the time used to complete the execution.&lt;/p&gt;

&lt;h2&gt;Step 3: Apply interceptor to the service&lt;/h2&gt;

&lt;p&gt;To take effect, you need to bind the interceptor to the Service you want. To do that, go to the &lt;em&gt;Program.cs&lt;/em&gt; and configure the Server service binding to use the interceptor for the Greeter service.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using Grpc.Core.Interceptors;
(...)
Server server = new Server
{
  Services = { Greeter.BindService(new GreeterImpl()).Intercept(new RequestLoggerInterceptor()) },
    Ports = { new ServerPort("localhost", Port, ServerCredentials.Insecure) }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Intercept method is an extension method, so don't forget to use &lt;em&gt;Grpc.Core.Interceptors&lt;/em&gt; namespace.&lt;/p&gt;

&lt;p&gt;If you run the samples now, you will see this as a result.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/logging-grpc-requests-using-serilog-simple-log-line.png" alt="Log entry" /&gt;&lt;/p&gt;

&lt;h2&gt;Step 4: Add Correlation ID&lt;/h2&gt;

&lt;p&gt;If you have multiple services being part of the execution of a particular request, most probably you would take advantage of having a Correlation ID to track the execution of a given request in every service. If you don't have one, I highly recommend you to do it.&lt;/p&gt;

&lt;p&gt;In this example, we will be sending the Correlation ID as an gRPC request header and change the Interceptor to add it to every log line.&lt;/p&gt;

&lt;p&gt;Let's start by add the Correlation ID header to the RPC request done by &lt;em&gt;GreeterClient&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reply = client.SayHello(new HelloRequest { Name = user }, new Metadata()
{
  new Metadata.Entry("X-Correlation-Id", Guid.NewGuid().ToString())
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;In this example, I'm generating a Guid just for demo purposes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the interceptor, access to the Correlation ID and push it to Serilog as a property. In this way, every single log entry on that context will have the Correlation Id property available.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using Grpc.Core;
using Grpc.Core.Interceptors;
using Serilog;
using System;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;

namespace GreeterServer
{
  public class RequestLoggerInterceptor : Interceptor
  {
    private const string MessageTemplate =
      "{RequestMethod} responded {StatusCode} in {Elapsed:0.0000} ms";

    public override async Task&amp;lt;TResponse&amp;gt; UnaryServerHandler&amp;lt;TRequest, TResponse&amp;gt;(TRequest request,
      ServerCallContext context, UnaryServerMethod&amp;lt;TRequest, TResponse&amp;gt; continuation)
    {
      var sw = Stopwatch.StartNew();

      var correlationId = context.RequestHeaders
        .FirstOrDefault(h =&amp;gt; h.Key.Equals("X-Correlation-Id", StringComparison.OrdinalIgnoreCase))?.Value;
      using (Serilog.Context.LogContext.PushProperty("CorrelationID", correlationId))
      {
        var response = await base.UnaryServerHandler(request, context, continuation);

        sw.Stop();
        Log.Logger.Information(MessageTemplate,
          context.Method,
          context.Status.StatusCode,
          sw.Elapsed.TotalMilliseconds);

        return response;
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To complete the work, we need to configure Serilog to use the Properties pushed to the context.&lt;/p&gt;

&lt;p&gt;Go back to the &lt;em&gt;GreeterServer Program&lt;/em&gt; and change the logger configuration to have a template where you use the Correlation ID and configure the log enrichment with the context properties.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Log.Logger = new LoggerConfiguration()
        .Enrich.FromLogContext()
        .WriteTo.Console(outputTemplate: "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level}] [{CorrelationID}] {Message}{NewLine}{Exception}")
        .CreateLogger();
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Step 5: Profit!&lt;/h2&gt;

&lt;p&gt;In this tutorial, we created a simple gRPC interceptor. Now you have a request log with status codes and timings.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/logging-grpc-requests-using-serilog-simple-log-line-with-correlation-id.png" alt="Log entry with Correlation ID" /&gt;&lt;/p&gt;

&lt;p&gt;Go ahead and give it a try.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2018/06/versioning-net-core-applications-using-cake/</id><title type="text">Versioning .net Core applications using Cake</title><summary type="html">&lt;p&gt;If you are moving to .net Core and you want to implement a versioning strategy in your application, now you have an awesome alternative to the good old fellow "AssemblyInfo". &lt;/p&gt;

&lt;p&gt;The alternative is the &lt;a href="https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build"&gt;&lt;em&gt;Directory.build.props&lt;/em&gt;&lt;/a&gt; file. If you place these file in the root folder that contains your source code, when MSBuild runs will add to every project the properties defined in the &lt;em&gt;Directory.build.props&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In this post, we will see how to quickly setup a solution with multiple projects and use &lt;em&gt;Directory.build.props&lt;/em&gt; with &lt;a href="http://cakebuild.net"&gt;Cake&lt;/a&gt; to build and increment the version number.&lt;/p&gt;

</summary><published>2018-06-26T23:00:00Z</published><updated>2018-06-26T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2018/06/versioning-net-core-applications-using-cake/" /><content type="html">&lt;p&gt;If you are moving to .net Core and you want to implement a versioning strategy in your application, now you have an awesome alternative to the good old fellow "AssemblyInfo". &lt;/p&gt;

&lt;p&gt;The alternative is the &lt;a href="https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build"&gt;&lt;em&gt;Directory.build.props&lt;/em&gt;&lt;/a&gt; file. If you place these file in the root folder that contains your source code, when MSBuild runs will add to every project the properties defined in the &lt;em&gt;Directory.build.props&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In this post, we will see how to quickly setup a solution with multiple projects and use &lt;em&gt;Directory.build.props&lt;/em&gt; with &lt;a href="http://cakebuild.net"&gt;Cake&lt;/a&gt; to build and increment the version number.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/versioning-a-net-core-applications-using-cake-directory-build-props.png" alt="Directory.build.props" /&gt;&lt;/p&gt;

&lt;h2&gt;Setup your project&lt;/h2&gt;

&lt;p&gt;Let's use the &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/?tabs=netcore2x"&gt;.net Core CLI&lt;/a&gt; to quickly accomplish this task.&lt;/p&gt;

&lt;p&gt;Start by creating a folder in your computer and then open the command line and go to the directory that you just created. Then execute the following commands.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a Solution: &lt;code&gt;dotnet new sln --name DotNetCoreVersioning&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a console application and place it in the &lt;em&gt;src&lt;/em&gt; folder: &lt;code&gt;dotnet new console --name Application --output src\Application&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a class library and place it in the &lt;em&gt;src&lt;/em&gt; folder: &lt;code&gt;dotnet new classlib --name Library --output src\Library&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add the console application to the solution: &lt;code&gt;dotnet sln add .\src\Application\Application.csproj&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add the class library to the solution: &lt;code&gt;dotnet sln add .\src\Library\Library.csproj&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Build it: &lt;code&gt;dotnet build&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you go to the folder you will see a solution file that you can open in Visual Studio.&lt;/p&gt;

&lt;h2&gt;Adding the &lt;em&gt;Directory.build.props&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Now it's time to add the file that will do the magic. &lt;/p&gt;

&lt;p&gt;You just need to create a file with the name &lt;em&gt;Directory.build.props&lt;/em&gt; inside the &lt;em&gt;src&lt;/em&gt; folder.&lt;/p&gt;

&lt;p&gt;Add it and then copy the following snippet into it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Project&amp;gt;
&amp;lt;PropertyGroup&amp;gt;
    &amp;lt;Company&amp;gt;Empire&amp;lt;/Company&amp;gt;
    &amp;lt;Version&amp;gt;1.0.1&amp;lt;/Version&amp;gt;
    &amp;lt;AssemblyTitle&amp;gt;Death Star - Superlaser&amp;lt;/AssemblyTitle&amp;gt;
&amp;lt;/PropertyGroup&amp;gt;
&amp;lt;/Project&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you run the &lt;code&gt;dotnet build&lt;/code&gt; command and go to the bin folder, of the console application or the class library, you can see in the DLL details that now the version is 1.0.1.&lt;/p&gt;

&lt;h2&gt;Incrementing the version number.&lt;/h2&gt;

&lt;p&gt;In this example, I will use a simple Cake script to increment the version number. &lt;/p&gt;

&lt;h3&gt;Setup your build script&lt;/h3&gt;

&lt;p&gt;I will explain how to do that manually, but if you are a &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; user I highly recommend that you install the cake extension and use the tools provided by the extension.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install the Cake bootstrapper. You can find &lt;a href="https://cakebuild.net/docs/tutorials/setting-up-a-new-project"&gt;here&lt;/a&gt; how to do that. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a &lt;em&gt;build.cake&lt;/em&gt; file next to the bootstrapper.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add the following snippet to the build.cake.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;///////////////////////////////////////////////////////////////////////////////
// ARGUMENTS
///////////////////////////////////////////////////////////////////////////////

var target = Argument("target", "Default");
var configuration = Argument("configuration", "Release");

///////////////////////////////////////////////////////////////////////////////
// TASKS
///////////////////////////////////////////////////////////////////////////////

Task("Version")
    .Does(() =&amp;gt; {

});

Task("Build")
    .IsDependentOn("Version")
    .Does(() =&amp;gt; {
        DotNetCoreBuild("./DotNetCoreVersioning.sln");
});

Task("Default")
    .IsDependentOn("Build");

RunTarget(target);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your build has now two steps and is building your solution using &lt;em&gt;DotNetCoreBuild&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;Increment the version number&lt;/h3&gt;

&lt;p&gt;To increment the version number we need to update the &lt;em&gt;Directory.build.props&lt;/em&gt; file. &lt;/p&gt;

&lt;p&gt;Since the &lt;em&gt;props&lt;/em&gt; file is an XML we can use the Cake &lt;a href="https://cakebuild.net/dsl/xml/"&gt;XML aliases&lt;/a&gt; like XmlPeek and XmlPoke to read and update the version number.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;I recommend you to use the Build Number of your build server to calculate the new version number. In this case, we will read the current version from the file content.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Go ahead and copy the following snippet into the &lt;em&gt;Version&lt;/em&gt; task in your &lt;em&gt;build.cake&lt;/em&gt; file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var propsFile = "./Directory.build.props";
var readedVersion = XmlPeek(propsFile, "//Version");
var currentVersion = new Version(readedVersion);

var semVersion = new Version(currentVersion.Major, currentVersion.Minor, currentVersion.Build + 1);
var version = semVersion.ToString();

XmlPoke(propsFile, "//Version", version);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, we are reading the version property, incrementing the build number and then updating the &lt;em&gt;props&lt;/em&gt; file again.&lt;/p&gt;

&lt;h3&gt;The result&lt;/h3&gt;

&lt;p&gt;Now that our build script is completed, go ahead and run your Cake bootstrapper (&lt;em&gt;build.ps1&lt;/em&gt; or &lt;em&gt;build.sh&lt;/em&gt;) and you will see that the compiled DLLs from all the projects have the version incremented.&lt;/p&gt;

&lt;p&gt;You can use the &lt;em&gt;Directory.build.props&lt;/em&gt; to customize other project properties, not only for versioning.&lt;/p&gt;

&lt;p&gt;Go ahead and give it a try.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2018/03/exploring-the-docker-container-metaphor/</id><title type="text">Exploring the Docker Container metaphor</title><summary type="html">&lt;p&gt;&lt;em&gt;This post is my interpretation of the Container metaphor and how I use it to understand the concepts and explain containers to others.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Containers is one of the hot topics in the Software Development world and Docker is the technology that everyone wants to play with.&lt;/p&gt;

&lt;p&gt;Thanks to this hype, everyone has at least a brief idea of what a container is. The problem is that we can easily be confused about what containers really are and the advantages of it.&lt;/p&gt;

&lt;p&gt;I faced the same problem and, in my case, explore the container metaphor helped me to understand it.&lt;/p&gt;

&lt;h2&gt;So, why containers?&lt;/h2&gt;

</summary><published>2018-03-05T00:00:00Z</published><updated>2018-03-05T00:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2018/03/exploring-the-docker-container-metaphor/" /><content type="html">&lt;p&gt;&lt;em&gt;This post is my interpretation of the Container metaphor and how I use it to understand the concepts and explain containers to others.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Containers is one of the hot topics in the Software Development world and Docker is the technology that everyone wants to play with.&lt;/p&gt;

&lt;p&gt;Thanks to this hype, everyone has at least a brief idea of what a container is. The problem is that we can easily be confused about what containers really are and the advantages of it.&lt;/p&gt;

&lt;p&gt;I faced the same problem and, in my case, explore the container metaphor helped me to understand it.&lt;/p&gt;

&lt;h2&gt;So, why containers?&lt;/h2&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;As you know, the Docker logo is a blue whale fully loaded with shipping containers, remembering us of a ship. The ship is a key part in this story.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docker.com/"&gt;&lt;img src="http://gsferreira.com/images/exploring-the-docker-container-metaphor-docker.png" alt="Docker" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Imagine that you have a company in Europe and you want to transport your products to China by sea. So, you can find a ship with the adequate size and load the Ship with your cargo.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Metaphor: In the software world, the ship is your Server.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In a local trading association you find out that other companies are also sending products to China and you all can use a bigger Ship and send your products together to save some money.&lt;/p&gt;

&lt;p&gt;The question is: Should that big Ship carry the smaller boats?&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/exploring-the-docker-container-metaphor-ship-of-ships.png" alt="Ship of Ships" /&gt;&lt;/p&gt;

&lt;p&gt;Obviously not! No one would do that!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Metaphor: Here, the big Ship is your server and the smaller ships are virtual machines. In this case, we have multiple Ships with all the capabilities to travel to China, but they are all constrained to the capacity and limitations of the big ship.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If we have a big ship we load the ship with the cargo of every company.&lt;/p&gt;

&lt;p&gt;But, you have to face a few challenges:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to be sure that the Cargo of a Port Wine company won't damage or contaminate the Cargo of other company?&lt;/li&gt;
&lt;li&gt;How to isolate the cargo?&lt;/li&gt;
&lt;li&gt;How to be sure that the cargo is inviolated?&lt;/li&gt;
&lt;li&gt;How to make sure that the cargo is being transported in the best conditions (correct temperature for instance)?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Well, you can put the cargo into containers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Metaphor: In software, you are now loading the Server with containers. Containers will guarantee you that the software is isolated, protected and that a Container will take care what it needs, not the ship. Other benefit is that Containers are immutable so you can be pretty sure that your container won't be violated.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Obviously you are now in a better situation then having a big Ship carry over small ships. But, &lt;strong&gt;don't forget that even an empty Container is pretty heavy&lt;/strong&gt;. Heavier then a few boxes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Metaphor: This is a common misconception. The idea that a container is extremely lightweight is dangerous unless you are comparing it to Virtual Machines. In other case you are taking the risk of the other person think that containers are even lighter then running in the bare metal.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A cool thing about Shipping Containers is that they are pretty standard and modular. You can assume that when the ship arrives in China, there will be a Truck that can transport it and that the container can return in a different ship. &lt;strong&gt;Shipping containers are ship agnostic.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Metaphor: That's another advantage of a container. Containers are pretty standard and without additional effort they can run in any Cloud or Server and be sure that they are self-sufficient.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://unsplash.com/photos/uBe2mknURG4"&gt;&lt;img src="http://gsferreira.com/images/exploring-the-docker-container-metaphor-containers.jpg" alt="Containers" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Composing&lt;/h2&gt;

&lt;p&gt;How could you be sure that you have two ships loaded in the same way? How to be able to say that they are "equal" in terms of cargo?&lt;/p&gt;

&lt;p&gt;Well, since we can't 3D print a ship capable of transport this (at least in 2018), you will need to document the process. You need to explain how the ship is setup with all containers, explaining the position of each container, what is the cargo and how the multiple containers are interconnected.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Metaphor: In Docker you use the Docker Compose to accomplish that. Compose is a command that uses a configuration file to know how to build multiple images and how they relate with each other.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;The Economic side&lt;/h2&gt;

&lt;p&gt;What is more expensive?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sending a big ship carrying small ships or containers?
&lt;em&gt;Metaphor: A Server with Virtual Machines or Docker Containers?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Is it better to load the cargo in a repeatable way, right? &lt;em&gt;Metaphor: Docker file and Docker compose are important tools to remove the uncertainty of new deployments.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Wouldn't be nice to don't contaminate the cargo of one company because of a problem in other company products? &lt;em&gt;Metaphor: Isolation give you the confidence that your containers are protected. Containers are self-sufficient.&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There's any concept that I'm missing in this interpertation? If so, go ahead and leave a comment!&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2018/01/json-patch-builder-online/</id><title type="text">JSON Patch Builder Online</title><summary type="html">&lt;p&gt;Do you know the JSON Patch format? The &lt;a href="https://tools.ietf.org/html/rfc6902"&gt;RFC6902&lt;/a&gt; defines the structure to express a list of operations to apply over a JSON Document.
This format is designed to be the payload of an HTTP PATCH method.&lt;/p&gt;

&lt;p&gt;The format isn't difficult, you can easily understand the rules and build it manually. But, I confess that sometimes I struggle with it, specially when I'm testing a PATCH to a complex object. 
So... &lt;strong&gt;&lt;a href="https://json-patch-builder-online.github.io/"&gt;I built a Tool to help me.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</summary><published>2018-01-08T00:00:00Z</published><updated>2018-01-08T00:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2018/01/json-patch-builder-online/" /><content type="html">&lt;p&gt;Do you know the JSON Patch format? The &lt;a href="https://tools.ietf.org/html/rfc6902"&gt;RFC6902&lt;/a&gt; defines the structure to express a list of operations to apply over a JSON Document.
This format is designed to be the payload of an HTTP PATCH method.&lt;/p&gt;

&lt;p&gt;The format isn't difficult, you can easily understand the rules and build it manually. But, I confess that sometimes I struggle with it, specially when I'm testing a PATCH to a complex object. 
So... &lt;strong&gt;&lt;a href="https://json-patch-builder-online.github.io/"&gt;I built a Tool to help me.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/json-patch-builder-online.png" alt="JSON Patch Builder Online" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://json-patch-builder-online.github.io/"&gt;JSON Patch Builder Online&lt;/a&gt;&lt;/strong&gt; is a simple and Open Source tool that you can use to calculate the JSON Patch needed to transform a resource/entity in the resource that you want. &lt;/p&gt;

&lt;p&gt;To accomplish that, I used &lt;a href="https://github.com/Starcounter-Jack/JSON-Patch"&gt;JSON-Patch&lt;/a&gt;, a Javascript library, to calculate the Patch and &lt;a href="https://bulma.io/"&gt;BULMA CSS&lt;/a&gt; to have a good looking tool. 
I recommend that you go check them.&lt;/p&gt;

&lt;p&gt;If you have something that you want to see in the &lt;strong&gt;&lt;a href="https://json-patch-builder-online.github.io/"&gt;JSON Patch Builder Online&lt;/a&gt;&lt;/strong&gt;, feel free to open an &lt;a href="https://github.com/json-patch-builder-online/json-patch-builder-online.github.io/issues"&gt;Issue&lt;/a&gt; or &lt;a href="https://github.com/json-patch-builder-online/json-patch-builder-online.github.io/"&gt;Contribute&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/json-patch-builder-online/json-patch-builder-online.github.io/"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://json-patch-builder-online.github.io/"&gt;JSON Patch Builder Online&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope that this helps you.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2017/11/implementing-the-http-prefer-header-with-an-aspnet-core-filter/</id><title type="text">Implementing the HTTP Prefer Header with an ASP.NET Core Filter</title><summary type="html">&lt;p&gt;Have you heard about &lt;strong&gt;Prefer Header for HTTP&lt;/strong&gt;? The &lt;a href="https://tools.ietf.org/html/rfc7240"&gt;RFC-7240&lt;/a&gt; defines how this header can be used by a client, in order to request that certain behaviors be employed by a server while processing a request.&lt;/p&gt;

&lt;p&gt;Why does it matter? You probably have consumed API's where you use the HTTP POST or PUT method to modify a resource and the server returns a complete representation of the resource. In other cases the API only returns the Identifier of the resource created, for example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What if you want to defer to the client to specify which optional behavior is preferred?&lt;/strong&gt;
That's why you need to know about the HTTP Prefer Header.&lt;/p&gt;

</summary><published>2017-11-15T00:00:00Z</published><updated>2017-11-15T00:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2017/11/implementing-the-http-prefer-header-with-an-aspnet-core-filter/" /><content type="html">&lt;p&gt;Have you heard about &lt;strong&gt;Prefer Header for HTTP&lt;/strong&gt;? The &lt;a href="https://tools.ietf.org/html/rfc7240"&gt;RFC-7240&lt;/a&gt; defines how this header can be used by a client, in order to request that certain behaviors be employed by a server while processing a request.&lt;/p&gt;

&lt;p&gt;Why does it matter? You probably have consumed API's where you use the HTTP POST or PUT method to modify a resource and the server returns a complete representation of the resource. In other cases the API only returns the Identifier of the resource created, for example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What if you want to defer to the client to specify which optional behavior is preferred?&lt;/strong&gt;
That's why you need to know about the HTTP Prefer Header.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;The RFC specifies a group of Preference Definitions like a preference to indicate that the client prefers the server to respond asynchronously to a response for example, but this post will be focused on the "return=representation" and "return=minimal" preferences.&lt;/p&gt;

&lt;h2&gt;"return=representation"&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;The "return=representation" preference indicates that the client
  prefers that the server include an entity representing the current
  state of the resource in the response to a successful request.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;"return=minimal"&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;The "return=minimal" preference, on the other hand, indicates that
  the client wishes the server to return only a minimal response to a
  successful request. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This preference is really useful when dealing with replies to a POST, PUT or PATCH request.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The selection of which type of response to return to client have impact on what a client must do after receiving the response.&lt;/strong&gt; Example: by returning a representation of the resource in the response the client won't need to do an additional GET request.&lt;/p&gt;

&lt;h1&gt;How to implement in ASP.NET Core?&lt;/h1&gt;

&lt;p&gt;One of the first questions that I faced when trying to implement the prefer header was &lt;em&gt;"how to implement it in ASP.NET Core?"&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The easy answer would be: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do it in your Controller Action. Easy peasy, right?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not so sure my friend! &lt;/p&gt;

&lt;p&gt;Following that approach will be difficult to manage when you face yourself with dozens of Controllers each one with a POST and a PUT. Now you see it... the beauty of the duplicated code :)&lt;/p&gt;

&lt;p&gt;So, what if we write an ASP.NET Core filter?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you don't know what is a Filter I recommend you to go read &lt;a href="https://docs.microsoft.com/en-us/aspnet/mvc/overview/older-versions-1/controllers-and-routing/understanding-action-filters-cs"&gt;here&lt;/a&gt;.&lt;/p&gt;
  
  &lt;p&gt;If you find yourself wondering why don't create a Middleware, please see this &lt;a href="https://channel9.msdn.com/Series/aspnetmonsters/ASPNET-Monsters-91-Middleware-vs-Filters"&gt;awesome video&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Setup&lt;/h2&gt;

&lt;p&gt;In my implementation, I defined that DTOs that can be controlled by the "return=minimal" preference should implement an interface &lt;em&gt;"IIdentifiable"&lt;/em&gt;. That interface specifies the properties that I need to return in the "minimal" version (an Id for instance).&lt;/p&gt;

&lt;p&gt;So, go ahead and create an &lt;em&gt;IIdentifiable&lt;/em&gt; interface and add it to your DTO.&lt;/p&gt;

&lt;h2&gt;The filter&lt;/h2&gt;

&lt;p&gt;I implemented an Action Filter that will only return the full object when the client sends the &lt;em&gt;"return=representation"&lt;/em&gt; preference.&lt;/p&gt;

&lt;p&gt;So the flow is something like:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;POST a new Resource&lt;/li&gt;
&lt;li&gt;Handle the request&lt;/li&gt;
&lt;li&gt;Return an Action Result with a DTO in it&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Catch the response in a filter&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The Request doesn't have the Prefer header?&lt;/li&gt;
&lt;li&gt;The Request has the Prefer header without the value "return=representation"?&lt;/li&gt;
&lt;li&gt;If the answer to any of the previous questions is "Yes", I update the result to a new object with the minimal information.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The filter:&lt;/p&gt;

&lt;script src="https://gist.github.com/gsferreira/80aa93d12633c0df271a08f6dc2e52ca.js?file=HttpPreferReturnHeaderFilterAttribute.cs"&gt;&lt;/script&gt;

&lt;p&gt;&lt;em&gt;As you can see I am creating a new IdentifiableDto. That class is just a simple implementation of the IIdentifiable interface. If you prefer, you can just return a dynamic object.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now you can use it in your Controllers like this:&lt;/p&gt;

&lt;script src="https://gist.github.com/gsferreira/80aa93d12633c0df271a08f6dc2e52ca.js?file=Controller.cs"&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/strong&gt; If you need to do an extra effort to load the resource from the database, probably the Filter approach isn't the best fit for you.&lt;/em&gt;&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2017/09/please-don-t-name-it-utils/</id><title type="text">Please don't name it "Utils"!</title><summary type="html">&lt;p&gt;Imagine that you are working on a code base that you are really proud of. Everything is building up together with great quality and you reach the moment where you need to send a mail. Simple task to you for sure.&lt;/p&gt;

&lt;p&gt;You know that eventually you will need to send emails in other points of your application and because you master the DRY principle you decide to write an &lt;em&gt;"Utils"&lt;/em&gt; class.&lt;/p&gt;

&lt;p&gt;Good idea, isn't it? &lt;strong&gt;NO!!!! Absolutely no!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Why not? What's wrong with an &lt;em&gt;"Utils"&lt;/em&gt; folder or an Utility class?&lt;/p&gt;

</summary><published>2017-09-11T23:00:00Z</published><updated>2017-09-11T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2017/09/please-don-t-name-it-utils/" /><content type="html">&lt;p&gt;Imagine that you are working on a code base that you are really proud of. Everything is building up together with great quality and you reach the moment where you need to send a mail. Simple task to you for sure.&lt;/p&gt;

&lt;p&gt;You know that eventually you will need to send emails in other points of your application and because you master the DRY principle you decide to write an &lt;em&gt;"Utils"&lt;/em&gt; class.&lt;/p&gt;

&lt;p&gt;Good idea, isn't it? &lt;strong&gt;NO!!!! Absolutely no!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Why not? What's wrong with an &lt;em&gt;"Utils"&lt;/em&gt; folder or an Utility class?&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Segregate responsibilities is an important thing, but naming is also important. Readability and discoverability are often underrated.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/please-don-t-name-it-utils-code-sample.png" alt="Utils code sample" /&gt;&lt;/p&gt;

&lt;p&gt;When you create an &lt;em&gt;"Utils"&lt;/em&gt; class you are creating a collection of random stuff. A place where anything can fit and that someone who doesn't know your project won't know what can be found inside the &lt;em&gt;"Utils"&lt;/em&gt;. For them, your &lt;em&gt;"Utils"&lt;/em&gt; it's a kind of magical place where treasures and dragons can be hidden.&lt;/p&gt;

&lt;p&gt;Please don't feel ashamed by doing that, I have done it in the past. 
Phil Karlton once said: &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There are only two hard things in Computer Science: cache invalidation and &lt;strong&gt;naming things&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I prefer a name that doesn't sounds catchy than a name that doesn't make sense.&lt;/p&gt;

&lt;p&gt;So if you are typing  &lt;em&gt;"Utils"&lt;/em&gt;, please stop and think what the hell will this code do? Then, name it according to that.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write to a Log file? Name it &lt;em&gt;"Logger"&lt;/em&gt;. &lt;/li&gt;
&lt;li&gt;Send a mail? Name it &lt;em&gt;"MailSender"&lt;/em&gt;. &lt;/li&gt;
&lt;li&gt;Generate a random message? Name it &lt;em&gt;"MessageGenerator"&lt;/em&gt;. &lt;/li&gt;
&lt;li&gt;Provide string extensions? Name it &lt;em&gt;"StringExtensions"&lt;/em&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get it.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2017/07/rebuilding-sql-database-indexes-using-azure-function/</id><title type="text">Rebuilding SQL Database indexes using Azure Function</title><summary type="html">&lt;p&gt;Do you know that index management is under your responsibility and you need to pay attention to how fragmented they are? If you are reading this post, probably you know that (I hope that you didn't find it in the hard way).&lt;/p&gt;

&lt;p&gt;Azure SQL Database takes care of a lot of maintenance tasks, but keeping your Indexes healthy isn't one of them. &lt;/p&gt;

&lt;p&gt;Indexes get fragmented and fragmented indexes is a performance killer. The good news is that I can help you dealing with that.&lt;/p&gt;

</summary><published>2017-07-19T23:00:00Z</published><updated>2017-07-19T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2017/07/rebuilding-sql-database-indexes-using-azure-function/" /><content type="html">&lt;p&gt;Do you know that index management is under your responsibility and you need to pay attention to how fragmented they are? If you are reading this post, probably you know that (I hope that you didn't find it in the hard way).&lt;/p&gt;

&lt;p&gt;Azure SQL Database takes care of a lot of maintenance tasks, but keeping your Indexes healthy isn't one of them. &lt;/p&gt;

&lt;p&gt;Indexes get fragmented and fragmented indexes is a performance killer. The good news is that I can help you dealing with that.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Do I have a problem?&lt;/h2&gt;

&lt;p&gt;First let's analyze your database. Read &lt;a href="https://blog.sqlauthority.com/2010/01/12/sql-server-fragmentation-detect-fragmentation-and-eliminate-fragmentation/"&gt;this article&lt;/a&gt; to undestand the fragmentation indexs and then execute the following query in your database.&lt;/p&gt;

&lt;script src="https://gist.github.com/gsferreira/fbb3419a367730f53922f0809991d264.js"&gt;&lt;/script&gt;

&lt;p&gt;Scared with the results? If so, keep reading. &lt;/p&gt;

&lt;h2&gt;Azure Function&lt;/h2&gt;

&lt;p&gt;You can find &lt;a href="https://github.com/gsferreira/AzureFunctionSQLDefrag"&gt;here&lt;/a&gt; the code of an Azure Function to automate the index maintenance of multiple databases.&lt;/p&gt;

&lt;p&gt;The function will run and execute a REBUILD and REORGANIZE for Database Indexs, with a given Threshold.&lt;/p&gt;

&lt;p&gt;By default, the Function is configured to Rebuild indexs with more than 30% of fragmentation and reorganize indexs with more than 3% but you can adjust those limits. &lt;/p&gt;

&lt;p&gt;You can add a Connection String to multiple databases at the Application Settings where the name has the prefix "Defrag.".&lt;/p&gt;

&lt;p&gt;You can find information of how to configure it in the project readme file.&lt;/p&gt;

&lt;h3&gt;Important Note!!!&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;The default timeout for functions on a Consumption plan is 5 minutes. The value can be increased to 10 minutes max.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you have a big database, the function can stop running during the index maintenance and don't finish the job.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In that case, you probably want to move to an App Service plan or decompose the function splitting the work by multiple functions. If you want some tips of how to accomplish that, please leave a comment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.sqlauthority.com/2010/01/12/sql-server-fragmentation-detect-fragmentation-and-eliminate-fragmentation/"&gt;https://blog.sqlauthority.com/2010/01/12/sql-server-fragmentation-detect-fragmentation-and-eliminate-fragmentation/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://geeks.ms/davidjrh/2015/10/08/rebuilding-sql-database-indexes-using-azure-automation/"&gt;https://geeks.ms/davidjrh/2015/10/08/rebuilding-sql-database-indexes-using-azure-automation/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexandrebrisebois.wordpress.com/2013/02/06/dont-forget-about-index-maintenance-on-windows-azure-sql-database/"&gt;https://alexandrebrisebois.wordpress.com/2013/02/06/dont-forget-about-index-maintenance-on-windows-azure-sql-database/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.red-gate.com/simple-talk/cloud/cloud-data/azure-sql-database-maintenance/"&gt;https://www.red-gate.com/simple-talk/cloud/cloud-data/azure-sql-database-maintenance/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2017/06/5-reasons-to-convince-your-boss-to-adopt-cake-csharp-make/</id><title type="text">5 reasons to convince your boss to adopt Cake (C# Make)</title><summary type="html">&lt;p&gt;Have you taken a look into &lt;a href="http://cakebuild.net/"&gt;Cake Build&lt;/a&gt;?! It's awesome, isn't it?&lt;/p&gt;

&lt;p&gt;Probably you are already convinced, but you are having trouble convincing your boss that it's worth to give him a chance.&lt;/p&gt;

&lt;p&gt;To help you I give you here five compelling reasons they can't argue with.&lt;/p&gt;

</summary><published>2017-06-25T23:00:00Z</published><updated>2017-06-25T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2017/06/5-reasons-to-convince-your-boss-to-adopt-cake-csharp-make/" /><content type="html">&lt;p&gt;Have you taken a look into &lt;a href="http://cakebuild.net/"&gt;Cake Build&lt;/a&gt;?! It's awesome, isn't it?&lt;/p&gt;

&lt;p&gt;Probably you are already convinced, but you are having trouble convincing your boss that it's worth to give him a chance.&lt;/p&gt;

&lt;p&gt;To help you I give you here five compelling reasons they can't argue with.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/cake-build-logo.png" alt="Cake Build" /&gt;&lt;/p&gt;

&lt;h1&gt;1. It's C# &amp;#10084;&lt;/h1&gt;

&lt;p&gt;If you are working in a .NET shop where C# is the common language, you already have the tools to do the Job and probably isn't a good idea to adopt a new language. &lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Bus_factor"&gt;BUS Factor&lt;/a&gt;&lt;/strong&gt; is a good metric to illustrate the risk of adopting a new language for a build system.&lt;/p&gt;

&lt;p&gt;Cake scripts are written in C# and you can use all the knowledge that you already have.&lt;/p&gt;

&lt;h1&gt;2. Living form of documentation&lt;/h1&gt;

&lt;p&gt;What is the best way to describe your system? With coded tests. So &lt;strong&gt;what is the best way to describe your build? With code&lt;/strong&gt; for sure!&lt;/p&gt;

&lt;p&gt;As we all know, keeping a word document up-to-date is a painful task that one day someone will forget to update it. So, if you know how to read C#, you can read a script that documents it.&lt;/p&gt;

&lt;p&gt;You also have the bonus of having a &lt;strong&gt;versioned build script&lt;/strong&gt; if you add it to your source control.&lt;/p&gt;

&lt;p&gt;Isn't powerful to know that in the future you can go back and see how your software was built in the past week?&lt;/p&gt;

&lt;p&gt;Nevertheless, doing this kind of tasks manually shouldn't be a manual process. &lt;strong&gt;‚ÄúFor loops‚Äù are for computers&lt;/strong&gt; and as programmers we know how to teach them to do it.&lt;/p&gt;

&lt;h1&gt;3. Cross platform&lt;/h1&gt;

&lt;p&gt;With Cake, you can start &lt;strong&gt;building&lt;/strong&gt; your software &lt;strong&gt;in multiple platforms&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If in your team, there are elements working with different operating systems, with Cake &lt;strong&gt;everyone can be working in the same build script&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;4. Agnostic from Build Server&lt;/h1&gt;

&lt;p&gt;With Cake you can easily &lt;strong&gt;move your scripts from one Build system to another&lt;/strong&gt;, without need to completely reconfigure the complete Build.&lt;/p&gt;

&lt;p&gt;The best proof of this: Cake is building Cake with Cake in multiple build servers (&lt;a href="https://github.com/cake-build/cake"&gt;see it in the Continuous integration section&lt;/a&gt;).&lt;/p&gt;

&lt;h1&gt;5. Healthy community&lt;/h1&gt;

&lt;p&gt;The Cake community is really active.&lt;/p&gt;

&lt;p&gt;Cake has a huge list of Addins delivered and maintained by the community.&lt;/p&gt;

&lt;p&gt;Also, since 2016 Cake is part of the .NET Foundation.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;I hope that this helps you (and convinced your boss).&lt;/em&gt;&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2017/05/tugait-build-automation-its-a-piece-of-cake/</id><title type="text">Tuga IT - Build Automation? It's a piece of Cake</title><summary type="html">&lt;p&gt;It was a huge privilege to share my experience with &lt;a href="http://cakebuild.net"&gt;Cake Build&lt;/a&gt; at &lt;a href="http://tugait.pt/2017/"&gt;Tuga IT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can find here the slides and demos that have been used, as well as some references related to the theme.&lt;/p&gt;

</summary><published>2017-05-22T23:00:00Z</published><updated>2017-05-22T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2017/05/tugait-build-automation-its-a-piece-of-cake/" /><content type="html">&lt;p&gt;It was a huge privilege to share my experience with &lt;a href="http://cakebuild.net"&gt;Cake Build&lt;/a&gt; at &lt;a href="http://tugait.pt/2017/"&gt;Tuga IT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can find here the slides and demos that have been used, as well as some references related to the theme.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;If you have any doubt please leave a comment below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Slides: &lt;a href="https://docs.com/gsferreira/7912/build-automation-its-a-piece-of-cake"&gt;docs.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Demos: &lt;a href="https://github.com/gsferreira/cakedemo"&gt;GitHub - CakeDemo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tugait.pt/2017/sessions/build-automation-its-a-piece-of-cake/"&gt;Session description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cakebuild.net/"&gt;Cake Build website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cake-build/cake"&gt;Cake Build Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hanselminutes.com/548/cake-build-a-c-make-cross-platform-build-automation-system-with-patrik-svensson"&gt;Hanselminutes Poadcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://radiotfs.com/Show/126/CakeByDevsForDevs"&gt;Radio TFS Poadcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dotnetrocks.com/?show=1321"&gt;.NET Rocks Poadcast - Understanding Cake with Gary Ewan Park&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cake-build/frosting"&gt;Cake Frosting Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry></feed>