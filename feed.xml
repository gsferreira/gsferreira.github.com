<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">Guilherme Ferreira blog</title><subtitle type="text">Guilherme Ferreira blog</subtitle><id>http://gsferreira.com/</id><updated>2020-05-15T06:30:23+01:00</updated><author><name>Guilherme Ferreira</name><uri>http://gsferreira.com</uri><email>me@gsferreira.com</email></author><generator>Sandra.Snow Atom Generator</generator><link rel="alternate" href="http://gsferreira.com/feed.xml" /><link rel="self" type="text/html" title="Guilherme Ferreira blog" href="http://gsferreira.com/feed.xml" /><entry><id>http://gsferreira.com/archive/2020/05/manage-your-code-as-a-successful-restaurant/</id><title type="text">Manage your code as a successful restaurant</title><summary type="html">&lt;p&gt;Have you ever noticed that a successful restaurant has a shorter menu? Especially when compared to those who are struggling.&lt;/p&gt;

&lt;p&gt;Why?! &lt;strong&gt;Simplicity!&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;When you keep things simple, you focus on fewer things. You give your best and you can focus your effort. You can try to improve and perfect all details.&lt;/p&gt;

&lt;p&gt;But, when life doesn't work as we expect, we start throwing new dishes into the menu. Expecting to please everyone. &lt;/p&gt;

</summary><published>2020-05-14T23:00:00Z</published><updated>2020-05-14T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2020/05/manage-your-code-as-a-successful-restaurant/" /><content type="html">&lt;p&gt;Have you ever noticed that a successful restaurant has a shorter menu? Especially when compared to those who are struggling.&lt;/p&gt;

&lt;p&gt;Why?! &lt;strong&gt;Simplicity!&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;When you keep things simple, you focus on fewer things. You give your best and you can focus your effort. You can try to improve and perfect all details.&lt;/p&gt;

&lt;p&gt;But, when life doesn't work as we expect, we start throwing new dishes into the menu. Expecting to please everyone. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/manage-your-code-as-a-successful-restaurant-complex-menu.jpeg" alt="Complex menu" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Spoiler alert: When you build something to everyone, you build it to nobody.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This isn't just the restaurants' reality. We see that in software too. When trying to convince new customers, throwing features into a product is usually the way to go. And it's hard to find a Product Owner who doesn't fight to have the team focused on new features.&lt;/p&gt;

&lt;p&gt;What we should all be doing is to &lt;strong&gt;focus on what we have and what customers love.&lt;/strong&gt; Those features have a margin to improve. &lt;strong&gt;Don't bring a new feature into the product just because a customer needs it. Bring it because is inevitable.&lt;/strong&gt; Because it's obvious that your software will be so much better. Because you believe that you are in an especial condition and nobody can do it better than you. And don't forget to throw away stuff that doesn't "spark joy". &lt;/p&gt;

&lt;iframe src="https://giphy.com/embed/hvRoo3YcAPUheF3MxY" width="480" height="480" frameBorder="0" class="giphy-embed" allowFullScreen&gt;&lt;/iframe&gt;

&lt;p&gt;We can expand this concept to multiple software parts. High level, to a low level. Decompose the code in smaller objects or functions. Create focused "restaurants" specialized in one task. If you want Mexican food, you don't look for an Italian restaurant.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Treat your code as a garden, which deserves care and dedication.&lt;/strong&gt; Don't write it and ignore it until a bug arises. &lt;/p&gt;

&lt;p&gt;A chef who creates new dishes every single night will create a few stunning dishes for sure. But also, a vast number of massive failures.&lt;/p&gt;

&lt;p&gt;Having a continuous improvement mindset is what makes us better than the rest.&lt;/p&gt;

&lt;!--excerpt--&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2020/05/a-simple-way-to-build-your-javascript-tests-data/</id><title type="text">A simple way to build your JavaScript tests data</title><summary type="html">&lt;p&gt;When writing Unit Tests, you will need to create test data objects for sure. Usually, those objects have tiny differences between different test cases.&lt;/p&gt;

&lt;p&gt;There's a pattern that I especially like when I'm doing this is C#. &lt;a href="https://ardalis.com/improve-tests-with-the-builder-pattern-for-test-data"&gt;The Builder Pattern&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The builder pattern is an elegant solution to the problem and I really like it. But, is it a simple solution for JavaScript?&lt;/p&gt;

</summary><published>2020-05-06T23:00:00Z</published><updated>2020-05-06T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2020/05/a-simple-way-to-build-your-javascript-tests-data/" /><content type="html">&lt;p&gt;When writing Unit Tests, you will need to create test data objects for sure. Usually, those objects have tiny differences between different test cases.&lt;/p&gt;

&lt;p&gt;There's a pattern that I especially like when I'm doing this is C#. &lt;a href="https://ardalis.com/improve-tests-with-the-builder-pattern-for-test-data"&gt;The Builder Pattern&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The builder pattern is an elegant solution to the problem and I really like it. But, is it a simple solution for JavaScript?&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Let's see how it would look like using the builder pattern in JS:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/a-simple-way-to-build-your-javascript-tests-data-builder.png" alt="Builder pattern" /&gt;&lt;/p&gt;

&lt;p&gt;As you can see, there's a lot of code needed to implement it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How can we do it more simply?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The basic idea is to &lt;strong&gt;use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"&gt;Spread Operator&lt;/a&gt; to customize a default object&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's see how:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/a-simple-way-to-build-your-javascript-tests-data-spread.png" alt="Spread Operator" /&gt;&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2020/05/dont-declare-your-variables-at-the-top/</id><title type="text">Don't declare your Variables at the top</title><summary type="html">&lt;p&gt;When I start learning to code, I was taught to declare variables at the top of the code. I followed it for a long time before start questioning that absolute truth.&lt;/p&gt;

&lt;p&gt;We are writing code for others to read. So, we shouldn't present our characters too early in the story. &lt;a href="https://www.livescience.com/2493-mind-limit-4.html"&gt;Our working memory handle a strict number of things at a given time&lt;/a&gt;. &lt;/p&gt;

</summary><published>2020-05-04T23:00:00Z</published><updated>2020-05-04T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2020/05/dont-declare-your-variables-at-the-top/" /><content type="html">&lt;p&gt;When I start learning to code, I was taught to declare variables at the top of the code. I followed it for a long time before start questioning that absolute truth.&lt;/p&gt;

&lt;p&gt;We are writing code for others to read. So, we shouldn't present our characters too early in the story. &lt;a href="https://www.livescience.com/2493-mind-limit-4.html"&gt;Our working memory handle a strict number of things at a given time&lt;/a&gt;. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/dont-declare-your-variables-at-the-top-memory-overflow.png" alt="Working memory overflow" /&gt;&lt;/p&gt;

&lt;p&gt;Keeping related concepts closer, we are reducing the cognitive load. This will lead us to clean and simple code.&lt;/p&gt;

&lt;p&gt;You can find evidence of that, in Design Principles. By using the &lt;a href="https://www.interaction-design.org/literature/article/laws-of-proximity-uniform-connectedness-and-continuation-gestalt-principles-2"&gt;Proximity principle&lt;/a&gt;, we form groups by keeping things closer.&lt;/p&gt;

&lt;p&gt;This is one of the reasons why &lt;strong&gt;I run away from global variables.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Besides the cognitive load reduction, there's a positive side effect from following this. &lt;strong&gt;I use this as a warning sign to extract a function. Whenever you can't keep the variables close to where they are used and to the top, extract it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, instead of doing this:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/dont-declare-your-variables-at-the-top-example1.png" alt="Example 1" /&gt;&lt;/p&gt;

&lt;p&gt;You can do this:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/dont-declare-your-variables-at-the-top-example2.png" alt="Example 2" /&gt;&lt;/p&gt;

&lt;p&gt;And then refactor to this:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/dont-declare-your-variables-at-the-top-example3.png" alt="Example 3" /&gt;&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2020/04/windbg-a-net-core-31-app-memory-leak/</id><title type="text">windbg a .net core 3.1 app memory leak</title><summary type="html">&lt;p&gt;I've spent the past few days trying to fix a memory leak. I was having problems to figure out what was leaking, so I used windbg wishing that it would help me.&lt;/p&gt;

&lt;p&gt;I confess that I'm not an experienced user of windbg, so I google how to catch memory issues using windbg. There's a ton of information out there. The problem is that I didn't found a guide on how to do it with a .net core application.&lt;/p&gt;

</summary><published>2020-04-14T23:00:00Z</published><updated>2020-04-14T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2020/04/windbg-a-net-core-31-app-memory-leak/" /><content type="html">&lt;p&gt;I've spent the past few days trying to fix a memory leak. I was having problems to figure out what was leaking, so I used windbg wishing that it would help me.&lt;/p&gt;

&lt;p&gt;I confess that I'm not an experienced user of windbg, so I google how to catch memory issues using windbg. There's a ton of information out there. The problem is that I didn't found a guide on how to do it with a .net core application.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;So, I'm sharing here how I've done it:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install windbg (&lt;a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-download-tools"&gt;see here&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Add windbg.exe (x64 version) to your environment path.&lt;/li&gt;
&lt;li&gt;Install SOS (&lt;a href="https://github.com/dotnet/diagnostics#installing-sos"&gt;see here&lt;/a&gt;): &lt;code&gt;dotnet tool install -g dotnet-sos&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Set breakpoint(s) using &lt;code&gt;System.Diagnostics.Debugger.Break()&lt;/code&gt; in your source code.&lt;/li&gt;
&lt;li&gt;Update your project (*.csproj file) to Load Symbols: &lt;code&gt;&amp;lt;DebugSymbols&amp;gt;true&amp;lt;/DebugSymbols&amp;gt;&amp;lt;DebugType&amp;gt;pdbonly&amp;lt;/DebugType&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Build your project using Release configuration: &lt;code&gt;dotnet build -c Release&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Launch with WinDbg attached to your project: &lt;code&gt;windbg dotnet [YOUR DLL PATH].dll&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bret.codes/net-core-and-windbg/#loadsos"&gt;Load SOS&lt;/a&gt; using &lt;code&gt;.load C:\Users\[USERNAME]\.dotnet\sos\sos.dll .&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/windbg-a-net-core-31-app-memory-leak-load-sos.png" alt="windbg - load sos" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enter &lt;code&gt;g&lt;/code&gt; to go to the first breakpoint.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;!gchandles&lt;/code&gt; to see garbage collector handles.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!DumpHeap /d -mt [MT]&lt;/code&gt; using the memory type id from the result list of the previous command. Example: &lt;code&gt;!DumpHeap /d -mt 00007ffb4c85ca98&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!gcroot -all [ADDRESS]&lt;/code&gt; using the memory address form the result list of the previous command. Example: &lt;code&gt;!gcroot -all 0x0000023cd2e71510&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Following this guide, you should have a clue of what is still in memory and where the object is in use.&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2020/02/optimizing-react-render-3-things-that-i-wish-to-know-before/</id><title type="text">Optimizing React Render - 3 things that I wish to know before</title><summary type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/optimizing-react-render-3-things-that-i-wish-to-know-before.png" alt="Optimizing React Render - 3 things that I wish to know before" /&gt;&lt;/p&gt;

&lt;p&gt;My experience with &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; has been awesome so far. My feeling is that I just needed to understand the basic concepts to be productive with React. The problem is that there are a few advanced concepts that I was missing.&lt;/p&gt;

&lt;p&gt;Recently, the lack of knowledge manifested itself as performance issues. To fix them I needed to learn in the hard way. So, I'm sharing this here because if I can prevent you from suffering from it, I would be glad.&lt;/p&gt;

&lt;p&gt;I observed that the components of my application were rendering too many times, even when I did not need them to re-render. The following 3 recommendations are the main reasons for that to happen.&lt;/p&gt;

</summary><published>2020-02-26T00:00:00Z</published><updated>2020-02-26T00:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2020/02/optimizing-react-render-3-things-that-i-wish-to-know-before/" /><content type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/optimizing-react-render-3-things-that-i-wish-to-know-before.png" alt="Optimizing React Render - 3 things that I wish to know before" /&gt;&lt;/p&gt;

&lt;p&gt;My experience with &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; has been awesome so far. My feeling is that I just needed to understand the basic concepts to be productive with React. The problem is that there are a few advanced concepts that I was missing.&lt;/p&gt;

&lt;p&gt;Recently, the lack of knowledge manifested itself as performance issues. To fix them I needed to learn in the hard way. So, I'm sharing this here because if I can prevent you from suffering from it, I would be glad.&lt;/p&gt;

&lt;p&gt;I observed that the components of my application were rendering too many times, even when I did not need them to re-render. The following 3 recommendations are the main reasons for that to happen.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;hr /&gt;

&lt;h2&gt;💡 1. Don't pass props with an object by reference&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;If you invoke a component and set a prop with a given object, the object will be passing by reference.&lt;/strong&gt; This can cause all kind of problems. I was facing two distinct problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Despite I was lifting the state up, the child components have access to the same instance of the state.&lt;/li&gt;
&lt;li&gt;When passing props by reference, you can receive the same object in the prevProps and nextProps for a componentShouldUpdate event. That will cause you problems. You want to compare those props to know what has been changed, but you are looking at the exact same object.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;✅ What to do?&lt;/h3&gt;

&lt;p&gt;Use the spread operator. If you have a complex data structure, with multi-level deepness, use a tool like &lt;a href="https://lodash.com/docs/#cloneDeep"&gt;Lodash cloneDeep&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;💡 2. Only pass properties needed to the component&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Make sure that you don't provide information that isn't needed to the child components. Try to only pass simple props with primitive types or functions.&lt;/strong&gt; If you pass a complex object and the child object only needs part of it, React will need to re-render the component. React will re-render every time that the props or the state change.&lt;/p&gt;

&lt;h3&gt;✅ What to do?&lt;/h3&gt;

&lt;p&gt;Review your components and question all those props where the prop type is Object or Any.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;💡 3. React Memo or Pure Components&lt;/h2&gt;

&lt;p&gt;Memo and Pure Components are an excellent way of improving performance. But, unless you are using them in the correct scenario you will not see the benefits. &lt;strong&gt;If you are providing a complex object&lt;/strong&gt; (like explained in recommendation 2) &lt;strong&gt;Memo and Pure Components will not work as you expect.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To understand that, you need to know that a Pure Component is different from a Component. Pure Components implement the &lt;em&gt;"shouldComponentUpdate"&lt;/em&gt; with a shallow prop and state comparison.&lt;/p&gt;

&lt;p&gt;React documentation (&lt;a href="https://reactjs.org/docs/react-api.html#reactpurecomponent"&gt;see here&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"&lt;code&gt;React.PureComponent’s&lt;/code&gt; &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; only shallowly compares the objects. If these contain complex data structures, it may produce false-negatives for deeper differences."&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;✅ What to do?&lt;/h3&gt;

&lt;p&gt;Try to follow the recommendation 2. If you need to have a complex data structure, use a Component and implement the &lt;em&gt;"shouldComponentUpdate"&lt;/em&gt; instead.&lt;/p&gt;

&lt;p&gt;You can also take a look into react-fast-compare to help you out comparing complex data.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;To conclude, try to use primitive data as Props and use Pure Components or Memo when you can.&lt;/p&gt;

&lt;p&gt;If you can't, be sure that you clone the data and implement the &lt;em&gt;"shouldComponentUpdate"&lt;/em&gt; by yourself.&lt;/p&gt;

&lt;p&gt;I hope that this helps you.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2020/02/one-on-ones-using-behavioural-science-to-maximize-the-impact/</id><title type="text">One-on-ones - Using behavioural science to maximize the impact</title><summary type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/one-on-ones-using-behavioural-science-to-maximize-the-impact.png" alt="One-on-ones - Using behavioural science to maximize the impact." /&gt;&lt;/p&gt;

&lt;p&gt;If you manage or mentor people, you should be doing one-on-one meetings. 
They are one of the most important tools that you have, so, it's important to maximize the result.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One-on-one meetings are an excellent moment for goal setting&lt;/strong&gt;. 
We tend to advise for improvement &lt;strong&gt;and it's a good practice to set a goal&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The problem is that those goals tend to have the same destiny of new year's eve goals and fail miserably (by the way, if your gym goal has made through January you are doing a good job!).&lt;/p&gt;

&lt;p&gt;When we do one-on-one meetings we hope to improve people's lives and the difficult part isn't to identify those goals, those improvement opportunities. 
&lt;strong&gt;The difficult part is to help the team to achieve those goals.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Usually, the intentions are good, and everyone is genuinely trying to do their best. 
I don't see these failures as people's fault, because we, as humans, are specialists in failing to achieve goals.&lt;/p&gt;

&lt;p&gt;If you have been in this situation, probably you have noticed that goals use to stay in the "To do" state for a long time. 
So the question is: &lt;strong&gt;What can we do to be more effective?&lt;/strong&gt;&lt;/p&gt;

</summary><published>2020-02-10T00:00:00Z</published><updated>2020-02-10T00:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2020/02/one-on-ones-using-behavioural-science-to-maximize-the-impact/" /><content type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/one-on-ones-using-behavioural-science-to-maximize-the-impact.png" alt="One-on-ones - Using behavioural science to maximize the impact." /&gt;&lt;/p&gt;

&lt;p&gt;If you manage or mentor people, you should be doing one-on-one meetings. 
They are one of the most important tools that you have, so, it's important to maximize the result.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One-on-one meetings are an excellent moment for goal setting&lt;/strong&gt;. 
We tend to advise for improvement &lt;strong&gt;and it's a good practice to set a goal&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The problem is that those goals tend to have the same destiny of new year's eve goals and fail miserably (by the way, if your gym goal has made through January you are doing a good job!).&lt;/p&gt;

&lt;p&gt;When we do one-on-one meetings we hope to improve people's lives and the difficult part isn't to identify those goals, those improvement opportunities. 
&lt;strong&gt;The difficult part is to help the team to achieve those goals.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Usually, the intentions are good, and everyone is genuinely trying to do their best. 
I don't see these failures as people's fault, because we, as humans, are specialists in failing to achieve goals.&lt;/p&gt;

&lt;p&gt;If you have been in this situation, probably you have noticed that goals use to stay in the "To do" state for a long time. 
So the question is: &lt;strong&gt;What can we do to be more effective?&lt;/strong&gt;&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;And the answer is in &lt;strong&gt;Behavioural Science&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Multiple studies already present how we should approach Goal Setting and what to do to achieve our goals. So, based on Behavioural Science, what do I recommend:&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Goals&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;🎯 Specific Goals with a specific deadline.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;💡 Suggestion: Propose goals that are specific and easy measure. Assign a deadline. 
Remember not to impose goals. You are advising, so your role is mentorship.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Plan&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;🎯 Create a simple plan with small steps.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;💡 Suggestion: Elaborate on the simplest plan possible. A complex plan is more likely to fail
Small steps are easy to measure and to see progress.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;🎯 Try to form a new habit.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;💡 Suggestion: Goals are an excellent opportunity to form new habits. 
Make sure that you plan for routine small steps. 
By associating those steps to routine, the habit will be more likely to stick.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Commit&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;🎯 Find someone that will act as a referee to enforce a penalty if he fails. If you don't find anyone, do it yourself.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;💡 Suggestion: Work with your colleague to find a referee and a good career mentor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;🎯 Advice to make the goals public. This will raise the commitment level and help stick to it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;💡 Suggestion: Lead by example. Inform the team of your own goals. Write it down in a shared space (Slack, Whiteboard, Email, etc.). 
This way, everyone will feel safe to do the same.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Reward and Punish&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;🎯 Make commitments that put something meaningful at stake and impose a non-negotiable rule. This way we work harder to achieve our goals.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;💡 Suggestion: Recommend to assume a goal and commit to a task that no one likes in case of failure.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Feedback&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;🎯 Give feedback. Probably you are the reason for that goal, so you should give feedback on the progress or the lack of it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;💡 Suggestion: Keep frequent one-on-ones and always do a follow-up to the "active" goals.
Be honest and try to present data and examples to demonstrate your point of view.&lt;/p&gt;

&lt;p&gt;In your next one-on-one try to apply these. If you don't have one-on-ones, make that your first Goal.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2019/12/start-thinking-inside-the-box/</id><title type="text">Start thinking inside the box</title><summary type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/start-thinking-inside-the-box.png" alt="Don't you freeze when you are asked to be creative and think outside the box?" /&gt;&lt;/p&gt;

&lt;p&gt;Don't you freeze when you are asked to be creative and think outside the box?&lt;/p&gt;

&lt;p&gt;If so, you probably have been in the following places. Rumbling through ideas without consequences. Don't know where to start. Being repetitive. Procrastinating. Those are just a few consequences when we are facing a clean slate.&lt;/p&gt;

&lt;p&gt;These leads us to frustration, disappointment and lack of confidence in our creative skills.&lt;/p&gt;

&lt;p&gt;Probably you even think: &lt;em&gt;"How the hell could Steve Jobs be so creative? That guy was a genius! He could think outside the box for sure."&lt;/em&gt; Well... I don't think so. Let's see why.&lt;/p&gt;

</summary><published>2019-12-02T00:00:00Z</published><updated>2019-12-02T00:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2019/12/start-thinking-inside-the-box/" /><content type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/start-thinking-inside-the-box.png" alt="Don't you freeze when you are asked to be creative and think outside the box?" /&gt;&lt;/p&gt;

&lt;p&gt;Don't you freeze when you are asked to be creative and think outside the box?&lt;/p&gt;

&lt;p&gt;If so, you probably have been in the following places. Rumbling through ideas without consequences. Don't know where to start. Being repetitive. Procrastinating. Those are just a few consequences when we are facing a clean slate.&lt;/p&gt;

&lt;p&gt;These leads us to frustration, disappointment and lack of confidence in our creative skills.&lt;/p&gt;

&lt;p&gt;Probably you even think: &lt;em&gt;"How the hell could Steve Jobs be so creative? That guy was a genius! He could think outside the box for sure."&lt;/em&gt; Well... I don't think so. Let's see why.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;In 2007, Steve presented to the world the first iPhone. A device that began the revolution of our daily companion: The Smartphone.  Today we can't live without it, but in 2001, we weren't so dependent for sure.&lt;/p&gt;

&lt;p&gt;iPhone wasn't the first pocket computer that we carried. But, the iPhone was the first one to be really usable. A genius move of Steve Jobs was to understand the limitations of the current devices and drive the innovation to create delightful touch experience. Yes, kids, we used to need a keyboard or even a pen to work with our "smartphones".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pt.wikipedia.org/wiki/Stylus"&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/HTC_Touch2_used_with_a_stylus.jpg/1280px-HTC_Touch2_used_with_a_stylus.jpg" alt="Phone Stylus" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The constraints were there, since the first day. iPhone was built on the shoulders of giants but the difference was to put together in the same device a plot of technologies, a good touch screen and a whole new experience. &lt;/p&gt;

&lt;p&gt;As you can see, the &lt;strong&gt;constraints applied to the User Experience guided Steve to question what can be done to bring a better experience to life&lt;/strong&gt;. For sure, the fact of Steve being so obsessed with perfection was a constraint that forced the Apple team to find a new path, &lt;strong&gt;testing wild ideas&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If Apple had to start without constraints, they would need to forget the past, the Phone history.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Everything that has been accomplished in the &lt;strong&gt;past is for sure one of the most important guides in everything that we do.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Embrace the constraints and let them guide your creativity, because sometimes &lt;strong&gt;freedom, can be paralyzing.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Always remember, that when you were a little kid, you could bring to life an house, a car or even a plane with just two simple ingredients: A cardboard box and your imagination.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2019/10/a-simple-tip-to-improve-your-code-maintainability-decompose-if-statements-into-methods/</id><title type="text">A simple tip to improve your code maintainability - Decompose IF statements into methods</title><summary type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/a-simple-tip-to-improve-your-code-maintainability-decompose-if-statements-into-methods.png" alt="Extract method" /&gt;&lt;/p&gt;

&lt;p&gt;How many times have you been in a situation where you can’t understand a small piece of code?&lt;/p&gt;

&lt;p&gt;Readability has a huge impact on code maintenance because reading other’s people code (and sometimes even our code) can be challenging. &lt;/p&gt;

&lt;p&gt;As developers, &lt;strong&gt;we tend to ignore the UX (user experience) of our code&lt;/strong&gt;. Every single line of code that we do, will eventually be used by others. Is important to be sure that we do the best possible job for our teammates and to future self.&lt;/p&gt;

</summary><published>2019-10-23T23:00:00Z</published><updated>2019-10-23T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2019/10/a-simple-tip-to-improve-your-code-maintainability-decompose-if-statements-into-methods/" /><content type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/a-simple-tip-to-improve-your-code-maintainability-decompose-if-statements-into-methods.png" alt="Extract method" /&gt;&lt;/p&gt;

&lt;p&gt;How many times have you been in a situation where you can’t understand a small piece of code?&lt;/p&gt;

&lt;p&gt;Readability has a huge impact on code maintenance because reading other’s people code (and sometimes even our code) can be challenging. &lt;/p&gt;

&lt;p&gt;As developers, &lt;strong&gt;we tend to ignore the UX (user experience) of our code&lt;/strong&gt;. Every single line of code that we do, will eventually be used by others. Is important to be sure that we do the best possible job for our teammates and to future self.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;strong&gt;The worst code blocks in terms of UX are the ones that require a huge cognitive load.&lt;/strong&gt; It’s our job to ask our selves what we can do to reduce it and improve readability. &lt;/p&gt;

&lt;p&gt;Usually when I’m in a situation that requires high cognitive load to understand a piece of code, is because I face a huge and complex IF statement condition and I need to figure out what the hell it’s supposed to do. Do you know the feeling? Having to sketch a decision tree trying to figure out what is happening?&lt;/p&gt;

&lt;h2&gt;How to avoid it?&lt;/h2&gt;

&lt;p&gt;This is one of the most simple tricks that I do every day and I tend to advise everyone to do.&lt;/p&gt;

&lt;p&gt;My rule of thumb is simple: &lt;strong&gt;In case of a multi-part condition, extract it to a method and name it accordingly.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Let’s see it in practice.&lt;/p&gt;

&lt;p&gt;Imagine that you have the following expression, that wants to validate if the customer can pay the Order with Credit Card. To do that, the customer should have an active Credit Card.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if (order.PayWithCreditCard &amp;amp;&amp;amp; (order.Customer.CreditCard == null || order.Customer.CreditCard.ExpirationDate &amp;lt; DateTime.Today))
    throw new CreditCardPaymentException("Customer doesn't have a valid Credit Card");
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To improve it, you can extract the boolean logic related to the credit card validation to a static method, and name it with something easy to understand.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public static void ProcessOrder(Order order)
{
    if (order.PayWithCreditCard &amp;amp;&amp;amp; IsCustomerCreditCardInvalid(order.Customer))
        throw new CreditCardPaymentException("Customer doesn't have a valid Credit Card");

      (...)

}

private static bool IsCustomerCreditCardInvalid(Customer customer)
    =&amp;gt; customer.CreditCard == null || customer.CreditCard.ExpirationDate &amp;lt; DateTime.Today;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By doing this you are abstracting the reader’s mind from details. In case the reader needs to know the details, he can drill down to the details.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2019/09/you-should-start-working-remotely-once-a-week/</id><title type="text">You should start working remotely once a week</title><summary type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/you-should-start-working-remotely-once-a-week-head.png" alt="Ready to work from home?" /&gt;&lt;/p&gt;

&lt;p&gt;Do you know the benefits of remote working? Do you doubt that it would work for you? Would you like to give it a try? Don’t know how to convince your boss or even how to start?  &lt;/p&gt;

&lt;p&gt;If so, I have something for you.&lt;/p&gt;

</summary><published>2019-09-04T23:00:00Z</published><updated>2019-09-04T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2019/09/you-should-start-working-remotely-once-a-week/" /><content type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/you-should-start-working-remotely-once-a-week-head.png" alt="Ready to work from home?" /&gt;&lt;/p&gt;

&lt;p&gt;Do you know the benefits of remote working? Do you doubt that it would work for you? Would you like to give it a try? Don’t know how to convince your boss or even how to start?  &lt;/p&gt;

&lt;p&gt;If so, I have something for you.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;This article is based on my experience of having the complete&lt;/em&gt; &lt;a href="https://omnialowcode.com"&gt;&lt;em&gt;company&lt;/em&gt;&lt;/a&gt; &lt;em&gt;working remotely once a week for the past few months.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Remote working&lt;/strong&gt; has been growing in the past few years but for some organizations &lt;strong&gt;can be a change difficult to accept.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;If you are in an environment with resistance to Remote Working, the best way is to &lt;strong&gt;propose a small experiment.&lt;/strong&gt; The best way to prove a hypothesis is to test it following the scientific method.&lt;/p&gt;

&lt;p&gt;I suggest you present the case to the leadership presenting a few reasons (listed below) and proposing a small experience to prove them.&lt;/p&gt;

&lt;h2&gt;5 reasons:&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.inc.com/scott-mautz/a-2-year-stanford-study-shows-astonishing-productivity-boost-of-working-from-home.html"&gt;Studies report&lt;/a&gt; that working from home has a &lt;strong&gt;huge impact on productivity&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It’s a benefit the company gives which can &lt;strong&gt;help to hire people&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It &lt;strong&gt;reduces costs&lt;/strong&gt; both for the company and employee.&lt;/li&gt;
&lt;li&gt;Leads to an &lt;strong&gt;improvement of the team communication&lt;/strong&gt; skills.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Happiness&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;Studies report that people who worked remotely were &lt;strong&gt;less likely to leave the company&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Health improvements.&lt;/li&gt;
&lt;li&gt;Less time spent commuting.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;How to start&lt;/h2&gt;

&lt;p&gt;After presenting a few reasons supporting your case, the best thing to do is to propose an experiment to evaluate the results.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Start small.&lt;/strong&gt; I suggest starting with one day a week.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Set a period for the experiment.&lt;/strong&gt; I suggest to never do it for less than 3 months since in the first weeks everyone is still adapting.&lt;/li&gt;
&lt;li&gt;Try to &lt;strong&gt;block a day in the calendar.&lt;/strong&gt; For example, schedule a recurring “Remote Wednesday” meeting.&lt;/li&gt;
&lt;li&gt;Try to &lt;strong&gt;organize the work to leave remote days free of meetings.&lt;/strong&gt; If you have a creative job, this is a &lt;strong&gt;good day to focus&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Make sure that everyone has a &lt;strong&gt;good pair of headphones&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Make sure that the team has the &lt;strong&gt;right tools to facilitate the communication&lt;/strong&gt; (&lt;a href="https://slack.com"&gt;Slack&lt;/a&gt;, &lt;a href="https://teams.microsoft.com/start"&gt;Microsoft Teams&lt;/a&gt;, &lt;a href="https://www.skype.com/"&gt;Skype&lt;/a&gt;, &lt;a href="https://zoom.us/"&gt;Zoom&lt;/a&gt; or other).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t forget to &lt;strong&gt;define a few success metrics and define how you will evaluate them.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have other technique to start this journey, please share!&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2019/08/the-secret-to-know-yourself/</id><title type="text">The secret to know Yourself</title><summary type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/the-secret-to-know-yourself-head.png" alt="Have you ever heard a recording of your voice" /&gt;&lt;/p&gt;

&lt;p&gt;Have you ever heard a recording of your voice? You don’t sound like that, am I right?!&lt;/p&gt;

&lt;p&gt;Everyone has been in that situation, and that is strange, especially because we spend so much time with us. Even so, we sound like a poor imitation.&lt;/p&gt;

</summary><published>2019-08-26T23:00:00Z</published><updated>2019-08-26T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2019/08/the-secret-to-know-yourself/" /><content type="html">&lt;p&gt;&lt;img src="http://gsferreira.com/images/the-secret-to-know-yourself-head.png" alt="Have you ever heard a recording of your voice" /&gt;&lt;/p&gt;

&lt;p&gt;Have you ever heard a recording of your voice? You don’t sound like that, am I right?!&lt;/p&gt;

&lt;p&gt;Everyone has been in that situation, and that is strange, especially because we spend so much time with us. Even so, we sound like a poor imitation.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;It’s really common to listen to people that seem pretty sure that they know themself. We even find a lot of books about self-knowledge. The world seems to lead us to believe that we need to find ourselfs by meditation and introspection. &lt;/p&gt;

&lt;p&gt;Even if I think that taking the time to reflect is important, I don’t think that is enough. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The vision that we have about us tend to be highly influenced by our ideals and our dreams.&lt;/strong&gt; Our brain is a specialist in fooling us and uses our wishes to trick us.&lt;/p&gt;

&lt;p&gt;So, what can we do to escape that illusion? We need to see how we act as if we were in an out-of-body experience.&lt;/p&gt;

&lt;p&gt;We can use professional sports as an example. We see athletes recording their training as a performance analysis tool. This is a good tool that top performances use to perfect their craft. &lt;strong&gt;Seeing yourself performing in a given context, can be enlightening.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can follow the example of pro-athletes and record yourself while performing a given task to try to figure out what to improve.&lt;/p&gt;

&lt;p&gt;But, the reality is that when we know that we are &lt;strong&gt;being observed, we start acting differently than we normally do and influence the outcome.&lt;/strong&gt; Similar to the Observer Paradox from quantum mechanics.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Observer paradox: the observer's paradox refers to a situation in which the phenomenon being observed is unwittingly influenced by the presence of the observer/investigator.&lt;/p&gt;
  
  &lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Observer%27s_paradox"&gt;wikipedia.org&lt;/a&gt;&lt;/p&gt;
  
  &lt;p&gt;&lt;a href="http://factmyth.com/factoids/observing-a-phenomenon-affects-its-outcome/"&gt;factmyth.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you don’t know this paradox, I highly recommend the following video.&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DfPeprQ7oGc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;So, if recording yourself can be a good way to lie to yourself, what can you do!?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The secret is Feedback! Ask for feedback!&lt;/strong&gt; I’ve written an &lt;a href="http://gsferreira.com/archive/2019/07/leading-improvement-through-honest-feedback/"&gt;article that you can find here&lt;/a&gt; about the importance of feedback for improvement. Go ahead and read it. I will wait…&lt;/p&gt;

&lt;p&gt;Reaching out trust worth people that spend a lot of time with you is the easy path. When we are in our day-to-day life, lost in routines, we tend to express our true self and that has an impact on the people that surround us. So, if we do something positive or negative, if we have an annoying or peculiar characteristic, people tend to see it and label you with that specific trait.&lt;/p&gt;

&lt;p&gt;It can be uncomfortable, but, &lt;strong&gt;if you want to know who you are, you need to look inside, but you also need to look to the world and discover the impact that you have in others&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Before we end here, I want to challenge you to a quick challenge that can lead you into this self know journey. &lt;/p&gt;

&lt;p&gt;The challenge:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Write down 5 words that you think that describe yourself. 5 things that you think that reflects yourself and that other recall those words when thinking about you.&lt;/li&gt;
&lt;li&gt;Find 5 people and ask them to send you 3 words that describe you.&lt;/li&gt;
&lt;li&gt;Compare the results and see if something that you don’t expect to emerge from their feedback. Sometimes we have bad surprises, but I prefer to know and do something than keep doing the same.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Go to your email and send a mail to 5 people that you trust them to give honest feedback. If you're looking to know yourself in a given context try to target people that are part of that given context. If you want to know “who am I as a leader?” reach out to your team and old team members. If you want to know “who am I as a friend?” reach out a group of friends important to you. If you want to know you in multiple contexts, just multiply the challenge. &lt;/p&gt;

&lt;p&gt;If you learn something new about yourself, please share!&lt;/p&gt;

&lt;p&gt;Next time you are in a one-on-one meeting, in an interview or in another context where you can have valuable feedback, don't forget to ask for feedback.&lt;/p&gt;
</content></entry></feed>