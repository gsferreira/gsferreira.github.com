<rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Guilherme Ferreira blog</title><link>http://gsferreira.com/rss.xml</link><description>Guilherme Ferreira blog</description><item><guid isPermaLink="true">http://gsferreira.com/archive/2014/07/analyse-azure-log-tables-using-sql-queries/</guid><link>http://gsferreira.com/archive/2014/07/analyse-azure-log-tables-using-sql-queries/</link><title>Analyse Azure Log Tables using SQL Queries</title><description>&lt;p&gt;If you are using &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/cloud-services-dotnet-diagnostics/"&gt;Diagnostics&lt;/a&gt; in Microsoft Azure, probably you walked through the horrible experience of analyse that data, specially if you are looking for a specific TimeStamp in the middle of tons of records.&lt;/p&gt;

</description><pubDate>Mon, 14 Jul 2014 23:00:00 Z</pubDate><a10:updated>2014-07-14T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;If you are using &lt;a href="http://azure.microsoft.com/en-us/documentation/articles/cloud-services-dotnet-diagnostics/"&gt;Diagnostics&lt;/a&gt; in Microsoft Azure, probably you walked through the horrible experience of analyse that data, specially if you are looking for a specific TimeStamp in the middle of tons of records.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;This is so slow because the TimeStamp column, in Azure Table Storage, isn't indexed, but if you take a closer view, you will see that the partition key of WADLogTable is the date-time in ticks, and querying by the partition key is incredible fast.&lt;/p&gt;

&lt;p&gt;If you want to query your table manually you will need to convert your date into ticks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DateTime dt = new DateTime(2014, 07, 15, 0,0,0);
long tks = dt.Ticks;
Console.WriteLine(tks); 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This can be useful, but in some cases you will need to query over the "Message" column and that can be hard.&lt;/p&gt;

&lt;p&gt;To overtake this difficulty, recently I was looking for a way to run SQL queries over the WADLogsTable since the Azure Storage Explorer isn't a good help. So, I have found this great tool &lt;a href="https://github.com/SageLukeDean/AzureLogSpelunker"&gt;AzureLogSpelunker&lt;/a&gt; by &lt;a href="https://github.com/SageLukeDean"&gt;Luke Dean&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/analyse-azure-log-tables-using-sql-queries-azurelogspelunker.png" alt="AzureLogSpelunker" /&gt;&lt;/p&gt;

&lt;p&gt;AzureLogSpelunker can be used to request the logs for a specific period, then the tool will cache them locally in a SQLite database where you may run SQL queries. This tool is a must have if you are using the Microsoft Azure Platform.&lt;/p&gt;

&lt;p&gt;I hope this helps you.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://gsferreira.com/archive/2014/07/metro-bootstrap-with-improved-tiles/</guid><link>http://gsferreira.com/archive/2014/07/metro-bootstrap-with-improved-tiles/</link><title>metro-bootstrap with improved tiles</title><description>&lt;p&gt;Yesterday we released metro-bootstrap 3.1.1.2. The highlights of this release are based on improvements to tiles. We have been working to give you the flexibility to implement tiles where you want and as you want.&lt;/p&gt;

&lt;p&gt;In the previous version metro-bootstrap tiles were based on the Thumbnail component of bootstrap that will let you place them side by side easily. Now you will be able to place a tile in a "div" tag, for example, and set the positioning as you want.&lt;/p&gt;

</description><pubDate>Thu, 03 Jul 2014 23:00:00 Z</pubDate><a10:updated>2014-07-03T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Yesterday we released metro-bootstrap 3.1.1.2. The highlights of this release are based on improvements to tiles. We have been working to give you the flexibility to implement tiles where you want and as you want.&lt;/p&gt;

&lt;p&gt;In the previous version metro-bootstrap tiles were based on the Thumbnail component of bootstrap that will let you place them side by side easily. Now you will be able to place a tile in a "div" tag, for example, and set the positioning as you want.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h1&gt;What's new&lt;/h1&gt;

&lt;p&gt;Here's a look at tiles news.&lt;/p&gt;

&lt;h2&gt;New positioning - Remove Thumbnail dependency&lt;/h2&gt;

&lt;p&gt;In the last version was mandatory to use thumbnails, now don't. If you want, you can use them, but you aren't obligated anymore. For example, if you want to create a Tile board taking part of the Bootstrap grid system you can (&lt;a href="http://talkslab.github.io/metro-bootstrap/dashboardtemplate.html"&gt;you can find here an example of how you can accomplish this&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;New template&lt;/h2&gt;

&lt;p&gt;You can find &lt;a href="http://talkslab.github.io/metro-bootstrap/dashboardtemplate.html"&gt;here&lt;/a&gt; a template of a responsive dashboard based on tiles.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/metro-bootstrap-with-improved-tiles-dashboard-template.png" alt="metro-bootstrap dashboard template" /&gt;&lt;/p&gt;

&lt;h2&gt;New colors&lt;/h2&gt;

&lt;p&gt;Using the info, danger, warning and success colors already defined in bootstrap, you can add the following classes to your tiles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;tile-info&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tile-danger&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tile-warning&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tile-success&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;New default variables&lt;/h2&gt;

&lt;p&gt;In the &lt;em&gt;variables.less&lt;/em&gt; file you can find the following variables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;@tile-bg&lt;/em&gt; to define the default color for tiles&lt;/li&gt;
&lt;li&gt;&lt;em&gt;@tile-border&lt;/em&gt; to define the border size&lt;/li&gt;
&lt;li&gt;&lt;em&gt;@tile-border-bg&lt;/em&gt; to define the border color&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;New sizes&lt;/h2&gt;

&lt;p&gt;Following the &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/hh465403.aspx"&gt;Microsoft Guidelines&lt;/a&gt; were implemented new classes and now it's possible define the following sizes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Small (70x70). Add the css class &lt;em&gt;tile-small&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Medium (150x150). Add the css class &lt;em&gt;tile-medium&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Wide (310x150). Add the css class &lt;em&gt;tile-wide&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Large (310x310). Add the css class &lt;em&gt;tile-large&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Tile title&lt;/h2&gt;

&lt;p&gt;Place a tile title on the lower left corner.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span class="tile-label"&amp;gt;Tile 5&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;What's next&lt;/h2&gt;

&lt;p&gt;Well, since Bootstrap v3.2.0 has been released we'll be updating metro-bootstrap to be compatible with it soon.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://gsferreira.com/archive/2014/06/add-documentation-to-your-web-api-in-5-steps/</guid><link>http://gsferreira.com/archive/2014/06/add-documentation-to-your-web-api-in-5-steps/</link><title>Add documentation to your Web API in 5 steps</title><description>&lt;p&gt;APIs are created to expose the system to other developers, so we need to provide documentation that explain how to use our API.&lt;/p&gt;

&lt;p&gt;So far, so good, but maintain documents manually is a kind of boring. What about auto-generate it?&lt;/p&gt;

&lt;p&gt;Well, if you are using ASP.NET Web API this is a piece of cake.&lt;/p&gt;

</description><pubDate>Thu, 26 Jun 2014 23:00:00 Z</pubDate><a10:updated>2014-06-26T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;APIs are created to expose the system to other developers, so we need to provide documentation that explain how to use our API.&lt;/p&gt;

&lt;p&gt;So far, so good, but maintain documents manually is a kind of boring. What about auto-generate it?&lt;/p&gt;

&lt;p&gt;Well, if you are using ASP.NET Web API this is a piece of cake.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;How to add documentation to your ASP.NET Web API?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install "&lt;em&gt;Microsoft.AspNet.WebApi.HelpPage&lt;/em&gt;" package from nuget. (If you are using VB.NET install "&lt;em&gt;Microsoft.AspNet.WebApi.HelpPage.VB&lt;/em&gt;"). This package will create an Area called "Help" in the API project.&lt;/li&gt;
&lt;li&gt;Make sure that you have the following code in the "&lt;em&gt;Application_Start&lt;/em&gt;" method at your Global.asax file: &lt;em&gt;AreaRegistration.RegisterAllAreas();&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Documentation will be available in the &lt;em&gt;/Help&lt;/em&gt; URI. So, just add a link to it in your application.&lt;/li&gt;
&lt;li&gt;To enable the XML Documentation comments, open the file &lt;em&gt;Areas/HelpPage/App_Start/HelpPageConfig.cs&lt;/em&gt; and uncomment the line "&lt;em&gt;config.SetDocumentationProvider(new XmlDocumentationProvider(HttpContext.Current.Server.MapPath("~/App_Data/XmlDocument.xml")));&lt;/em&gt;"&lt;/li&gt;
&lt;li&gt;In Solution Explorer, right-click the project, select Properties, then go to the &lt;em&gt;Build&lt;/em&gt; page. In the &lt;em&gt;Output&lt;/em&gt; section check the &lt;em&gt;XML documentation file&lt;/em&gt; property and set the text box with the value "App_Data/XmlDocument.xml".&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you are able to start adding comments to your Web API methods, as you can see in the following example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/// &amp;lt;summary&amp;gt;
/// Get text by ID
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;param name="id"&amp;gt;ID used to get the result text.&amp;lt;/param&amp;gt;
public string Get(int id)
{
    return "value";
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Build your application and you are done! Now, if you want to do some advanced stuff, I recommend that you take a look into the following posts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/creating-web-apis/creating-api-help-pages"&gt;Creating Help Pages for ASP.NET Web API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blogs.msdn.com/b/yaohuang1/archive/2012/12/10/asp-net-web-api-help-page-part-3-advanced-help-page-customizations.aspx"&gt;Advanced Help Page customizations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blogs.msdn.com/b/yaohuang1/archive/2012/08/15/introducing-the-asp-net-web-api-help-page-preview.aspx"&gt;Introducing the ASP.NET Web API Help Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope this helps you.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://gsferreira.com/archive/2014/06/update-github-pages-using-a-project-subfolder/</guid><link>http://gsferreira.com/archive/2014/06/update-github-pages-using-a-project-subfolder/</link><title>Update GitHub Pages using a project subfolder</title><description>&lt;p&gt;Do you have a project in GitHub and you are tired of manage the &lt;em&gt;gh-pages&lt;/em&gt; branch manually?! If so, stay tuned because that can be pretty simple.&lt;/p&gt;

&lt;p&gt;I used to make a full copy of the master repository into the &lt;em&gt;gh-pages&lt;/em&gt; using the &lt;em&gt;rebase&lt;/em&gt; command, but this brings a lack of organization because it's difficult don't mix the source  code and the web pages files.&lt;/p&gt;

</description><pubDate>Fri, 20 Jun 2014 23:00:00 Z</pubDate><a10:updated>2014-06-20T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Do you have a project in GitHub and you are tired of manage the &lt;em&gt;gh-pages&lt;/em&gt; branch manually?! If so, stay tuned because that can be pretty simple.&lt;/p&gt;

&lt;p&gt;I used to make a full copy of the master repository into the &lt;em&gt;gh-pages&lt;/em&gt; using the &lt;em&gt;rebase&lt;/em&gt; command, but this brings a lack of organization because it's difficult don't mix the source  code and the web pages files.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;iframe src="//giphy.com/embed/upvM3uYBjh6ww/mp4" width="500" height="378" frameBorder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen&gt;&lt;/iframe&gt;

&lt;p&gt;This is the process that I used to update the full branch:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout gh-pages // go to the gh-pages branch
git rebase master // bring gh-pages up to date with master
git push origin gh-pages // commit the changes
git checkout master // return to the master branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recently I re-organize my repository to have a &lt;em&gt;docs&lt;/em&gt; subdirectory, on the master branch, where I put the files required for web pages and with the following command I did some magic:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git subtree push --prefix docs origin gh-pages // Replace 'docs' by your folder name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, the &lt;em&gt;docs&lt;/em&gt; folder is the root directory of gh-pages branch.&lt;/p&gt;

&lt;p&gt;This seems pretty simple, but in the process I found some troubled waters. So, I leave the details here, in case you get the same problem.&lt;/p&gt;

&lt;p&gt;In my first tries I got the following error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;! [rejected]        1835ac01fe63c030216c22d3d834366d5e2a854r -&amp;gt; gh-pages (non-f
ast-forward)
error: failed to push some refs to 'https://github.com/gsferreira/myrepository.
git'
hint: Updates were rejected because a pushed branch tip is behind its remote
hint: counterpart. Check out this branch and integrate the remote changes
hint: (e.g. 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to get rid of this error, I suggest that you delete your gh-pages branch and then recreate it before execute the &lt;em&gt;git subtree&lt;/em&gt; command.&lt;/p&gt;

&lt;p&gt;How to delete a branch? &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git push origin :gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I hope this helps you.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://gsferreira.com/archive/2014/06/geeks-can-cook-tuna-empanadas/</guid><link>http://gsferreira.com/archive/2014/06/geeks-can-cook-tuna-empanadas/</link><title>Geeks can cook: Tuna Empanadas</title><description>&lt;p&gt;This blog post is about one of my other passions, cook! I'm a foodie, not just about the eating part of it, but I also love to cook. So, I want to do some tasty posts and share with you some simple recipes.&lt;/p&gt;

&lt;p&gt;Being a programmer is not a healthy profession. We spend long hours sitting in front of a computer and this isn't helping our body. But we can change it by making some sport and putting the fast food aside and start cooking healthy and tasty food!&lt;/p&gt;

&lt;p&gt;You can start right now, so I wrote down a recipe that you can make in 15 minutes. I hope you like!&lt;/p&gt;

</description><pubDate>Thu, 12 Jun 2014 23:00:00 Z</pubDate><a10:updated>2014-06-12T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;This blog post is about one of my other passions, cook! I'm a foodie, not just about the eating part of it, but I also love to cook. So, I want to do some tasty posts and share with you some simple recipes.&lt;/p&gt;

&lt;p&gt;Being a programmer is not a healthy profession. We spend long hours sitting in front of a computer and this isn't helping our body. But we can change it by making some sport and putting the fast food aside and start cooking healthy and tasty food!&lt;/p&gt;

&lt;p&gt;You can start right now, so I wrote down a recipe that you can make in 15 minutes. I hope you like!&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h1&gt;Tuna Empanadas&lt;/h1&gt;

&lt;p&gt;Preparation time: 15 minutes&lt;/p&gt;

&lt;p&gt;Serves: 4&lt;/p&gt;

&lt;h2&gt;Ingredients:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;2 Shortcrust pastry packs&lt;/li&gt;
&lt;li&gt;3 Tuna cans&lt;/li&gt;
&lt;li&gt;1 Corn can&lt;/li&gt;
&lt;li&gt;2 Onions&lt;/li&gt;
&lt;li&gt;2 Garlic cloves&lt;/li&gt;
&lt;li&gt;1 Sugar spoon&lt;/li&gt;
&lt;li&gt;Oregano&lt;/li&gt;
&lt;li&gt;Salt and pepper&lt;/li&gt;
&lt;li&gt;Olive oil&lt;/li&gt;
&lt;li&gt;1 Egg&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/geeks-can-cook-tuna-empanadas-ingredients.jpg" alt="Tuna Empanada - Ingredients" /&gt;&lt;/p&gt;

&lt;h2&gt;Method:&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Heat a little oil in a frying pan. &lt;/li&gt;
&lt;li&gt;Saute onions and garlic minced for 5 minutes. &lt;/li&gt;
&lt;li&gt;Add the drained tuna and corn.&lt;/li&gt;
&lt;li&gt;Season it with sugar, salt, oregano and pepper.&lt;/li&gt;
&lt;li&gt;Open the 2 shortcrust pastry packs and make 4 rectangles. Add the tuna and corn filling to two of them. Cover it with the other 2 rectangles and close them with the help of a fork.&lt;/li&gt;
&lt;li&gt;Brush with the beaten egg.&lt;/li&gt;
&lt;li&gt;Place in the oven preheated to 200ºC for 7 minutes. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The final result.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/geeks-can-cook-tuna-empanadas-final-result.jpg" alt="Tuna Empanada" /&gt;&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://gsferreira.com/archive/2014/06/bringing-grunt-and-bower-to-metro-bootstrap/</guid><link>http://gsferreira.com/archive/2014/06/bringing-grunt-and-bower-to-metro-bootstrap/</link><title>Bringing Grunt and Bower to metro-bootstrap</title><description>&lt;p&gt;Since we publish &lt;a href="https://github.com/TalksLab/metro-bootstrap"&gt;metro-bootstrap&lt;/a&gt; we saw an incredible acceptance to the project and we are really happy to have decided to delivery it as an open source project. &lt;/p&gt;

&lt;p&gt;This project has grown up with a lack of structure in my opinion, so, this week I've been working to add Grunt and Bower to metro-bootstrap. To accomplish this task, I have the valuable help of &lt;a href="http://yeoman.io/"&gt;Yeoman&lt;/a&gt;. If you're like me, and &lt;a href="http://gruntjs.com/"&gt;Grunt&lt;/a&gt; or &lt;a href="http://bower.io/"&gt;Bower&lt;/a&gt; are crazy talk, you will find in Yeoman a great way to start.&lt;/p&gt;

</description><pubDate>Wed, 04 Jun 2014 23:00:00 Z</pubDate><a10:updated>2014-06-04T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Since we publish &lt;a href="https://github.com/TalksLab/metro-bootstrap"&gt;metro-bootstrap&lt;/a&gt; we saw an incredible acceptance to the project and we are really happy to have decided to delivery it as an open source project. &lt;/p&gt;

&lt;p&gt;This project has grown up with a lack of structure in my opinion, so, this week I've been working to add Grunt and Bower to metro-bootstrap. To accomplish this task, I have the valuable help of &lt;a href="http://yeoman.io/"&gt;Yeoman&lt;/a&gt;. If you're like me, and &lt;a href="http://gruntjs.com/"&gt;Grunt&lt;/a&gt; or &lt;a href="http://bower.io/"&gt;Bower&lt;/a&gt; are crazy talk, you will find in Yeoman a great way to start.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;a href="http://yeoman.io/"&gt;&lt;img src="http://gsferreira.com/images/bringing-grunt-and-bower-to-metro-bootstrap-yeoman.jpg" alt="Yeoman" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have adopted bower for dependency management, so we can manage the dependencies in a declarative way. Now you can know the current dependencies looking at the bower.json file.&lt;/p&gt;

&lt;p&gt;Since the metro-bootstrap release, we always work on .less files, but we also release the css file and a minified version of it. To do this, we used some tools like &lt;a href="http://wearekiss.com/simpless"&gt;SimpLESS&lt;/a&gt; or &lt;a href="http://winless.org/"&gt;WinLess&lt;/a&gt;. This is over, now we leave this responsibility to Grunt. Grunt is the tool to compile the less files, minify the css files and release our page for GitHub Pages.&lt;/p&gt;

&lt;p&gt;What have changed? Take a look.&lt;/p&gt;

&lt;h2&gt;Repository structure&lt;/h2&gt;

&lt;p&gt;In the repository you will find the following directories:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;app/
├── fonts/
│   └── (FontAwesome files)
└── less/
    └── (metro-bootstrap less files)
dist/
├── fonts/
│   └── font-awesome/
│   │   └── (FontAwesome files)
└── css/
    ├── metro-bootstrap.css
    └── metro-bootstrap.min.css
docs/
└── (metro-bootstrap GitHub Pages)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We provide compiled CSS (&lt;code&gt;metro-bootstrap.css&lt;/code&gt;) in the dist folder, as well as compiled and minified CSS (&lt;code&gt;metro-bootstrap.min.css&lt;/code&gt;). &lt;/p&gt;

&lt;h2&gt;Instaling Dependencies&lt;/h2&gt;

&lt;p&gt;We manage dependencies using Bower.
Run &lt;code&gt;bower install&lt;/code&gt; to download the required dependencies.&lt;/p&gt;

&lt;p&gt;If don't have Grunt installed, execute the following steps from the command line:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure you have node.js installed.&lt;/li&gt;
&lt;li&gt;Install bower with &lt;code&gt;npm install -g bower&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Compiling CSS&lt;/h2&gt;

&lt;p&gt;We compile metro-bootstrap using &lt;a href="http://gruntjs.com/"&gt;Grunt&lt;/a&gt;. 
Run &lt;code&gt;grunt build&lt;/code&gt; to compile the CSS into &lt;code&gt;/dist&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;If don't have Grunt installed, execute the following steps from the command line:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure you have node.js installed.&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;grunt-cli&lt;/code&gt; globally with &lt;code&gt;npm install -g grunt-cli&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go to the &lt;code&gt;metro-bootstrap&lt;/code&gt; directory, then run &lt;code&gt;npm install&lt;/code&gt;. npm will look at package.json and automatically install the necessary dependencies.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, go fork it!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://gsferreira.com/archive/2014/05/reasons-to-blogging-with-github-pages-and-sandra-snow/</guid><link>http://gsferreira.com/archive/2014/05/reasons-to-blogging-with-github-pages-and-sandra-snow/</link><title>Reasons to blogging with GitHub Pages and Sandra.Snow</title><description>&lt;p&gt;This is my second try to create a personal blog and the third blog where I'm writing. The first two experiences were in WordPress. &lt;/p&gt;

&lt;p&gt;In the past, my attempts failed by my fault, lack of commitment... But during the process, I learned how hard is to maintain a self hosted blog. &lt;/p&gt;

&lt;p&gt;Create content to a blog is really time-consuming, so I don't need more work to maintain it. Maybe this is my Developer side telling me to stay away from maintenance tasks, like update packages and be sure that I'm not hacked. &lt;/p&gt;

&lt;p&gt;let's be realistic, when we're a blogger &lt;strong&gt;the focus should be the content&lt;/strong&gt;, the other tasks are just a black hole for the precious free time.&lt;/p&gt;

</description><pubDate>Fri, 30 May 2014 23:00:00 Z</pubDate><a10:updated>2014-05-30T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;This is my second try to create a personal blog and the third blog where I'm writing. The first two experiences were in WordPress. &lt;/p&gt;

&lt;p&gt;In the past, my attempts failed by my fault, lack of commitment... But during the process, I learned how hard is to maintain a self hosted blog. &lt;/p&gt;

&lt;p&gt;Create content to a blog is really time-consuming, so I don't need more work to maintain it. Maybe this is my Developer side telling me to stay away from maintenance tasks, like update packages and be sure that I'm not hacked. &lt;/p&gt;

&lt;p&gt;let's be realistic, when we're a blogger &lt;strong&gt;the focus should be the content&lt;/strong&gt;, the other tasks are just a black hole for the precious free time.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/reasons-to-blogging-using-github-pages-and-sandra-snow-my-precious-time.jpg" alt="Gollum - My Precious Time" /&gt;&lt;/p&gt;

&lt;p&gt;So, what I was looking for when I started this page?!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Write using markdown&lt;/li&gt;
&lt;li&gt;Comments using Disqus&lt;/li&gt;
&lt;li&gt;Easy customization&lt;/li&gt;
&lt;li&gt;Reduce the infrastructure costs&lt;/li&gt;
&lt;li&gt;A lightweight blog&lt;/li&gt;
&lt;li&gt;No database&lt;/li&gt;
&lt;li&gt;Version control/Hitory&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Based on these requirements, I found &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; hosted over &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;. It fits perfectly and the number of users active can attest it. The downside?! I need ruby to use it. Since I'm a Windows guy and in my professional life I'm mostly connected to .NET Developement I don't want to install ruby on my machines. &lt;/p&gt;

&lt;p&gt;A friend of mine (&lt;a href="https://twitter.com/NelsonReis"&gt;@NelsonReis&lt;/a&gt;) suggested I look at &lt;a href="https://github.com/Sandra/Sandra.Snow"&gt;Sandra.Snow&lt;/a&gt;, a system inspired by Jekyll, which is &lt;strong&gt;written in .NET and &lt;a href="http://nancyfx.org/"&gt;Nancy&lt;/a&gt;&lt;/strong&gt;, by &lt;a href="https://twitter.com/philliphaydon"&gt;Phillip Haydon&lt;/a&gt; and &lt;a href="https://twitter.com/jchannon"&gt;Jonathan Channon&lt;/a&gt;. So, I picked it! Now my website is generated using Sandra.Snow and hosted on GitHub pages.&lt;/p&gt;

&lt;p&gt;During the process, I created &lt;a href="https://github.com/gsferreira/letsnow"&gt;&lt;em&gt;letsnow&lt;/em&gt;&lt;/a&gt;, a simple theme based on snowbyte theme. You can use it, fork it and contribute. I would love to hear your opinion.&lt;/p&gt;

&lt;p&gt;Well, I could describe here how I did it, but since there's already a lot of good articles of it, I leave you here some to guide you. You will see that it's a piece of cake.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.philliphaydon.com/2013/10/introducing-sandra-snow/"&gt;"Introducing Sandra.Snow"&lt;/a&gt; by Phillip Haydon&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.macsdickinson.com/SandraSnow/hello-sandra-snow/#.U4j33_ldXN1"&gt;"Hello Sandra Snow"&lt;/a&gt; by Macs Dickinson&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.jonathanchannon.com/2013/10/01/blogging-with-markdown-and-git/"&gt;"Blogging with Markdown &amp;amp; Deploying via Git - Introducing Sandra.Snow"&lt;/a&gt; by Jonathan Channon&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/reasons-to-blogging-using-github-pages-and-sandra-snow-feel-like-superhero.png" alt="Feel like a superhero" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What I hope to see in Sandra.Snow in a near future?!&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Generate RSS feeds for any category&lt;/li&gt;
&lt;li&gt;More configuration options, like Google Analytics ID or Disqus ID&lt;/li&gt;
&lt;li&gt;A "marketplace" for Sandra.Snow blog templates&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's too early to say that Sandra.Snow is perfect for me, but I hope that it was a wise decision!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://gsferreira.com/archive/2014/05/angularjs-smart-float-directive/</guid><link>http://gsferreira.com/archive/2014/05/angularjs-smart-float-directive/</link><title>AngularJS - Smart Float Directive</title><description>&lt;p&gt;Recently I started looking for an AngluarJS directive to validate numbers and I found the "smart-float" directive &lt;a href="https://docs.angularjs.org/guide/forms"&gt;here&lt;/a&gt;, in the AngularJS documentation. This amazing example solves the problem of convert my numbers that use a comma as decimal mark to a Javascript number.&lt;/p&gt;

&lt;p&gt;My problem is that this directive doesn't solve my two problems:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Display numbers with 2 fractional digits by default.&lt;/li&gt;
&lt;li&gt;Validate numbers with thousands separator.&lt;/li&gt;
&lt;/ol&gt;

</description><pubDate>Fri, 23 May 2014 23:00:00 Z</pubDate><a10:updated>2014-05-23T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Recently I started looking for an AngluarJS directive to validate numbers and I found the "smart-float" directive &lt;a href="https://docs.angularjs.org/guide/forms"&gt;here&lt;/a&gt;, in the AngularJS documentation. This amazing example solves the problem of convert my numbers that use a comma as decimal mark to a Javascript number.&lt;/p&gt;

&lt;p&gt;My problem is that this directive doesn't solve my two problems:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Display numbers with 2 fractional digits by default.&lt;/li&gt;
&lt;li&gt;Validate numbers with thousands separator.&lt;/li&gt;
&lt;/ol&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;So, this is an improved directive based on Angular's &lt;em&gt;smart-float&lt;/em&gt; directive.
First, add the following directive to your application:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;directive('smartFloat', function ($filter) {
    var FLOAT_REGEXP_1 = /^\$?\d+(.\d{3})*(\,\d*)?$/; //Numbers like: 1.123,56
    var FLOAT_REGEXP_2 = /^\$?\d+(,\d{3})*(\.\d*)?$/; //Numbers like: 1,123.56
    return {
        require: 'ngModel',
        link: function (scope, elm, attrs, ctrl) {
            ctrl.$parsers.unshift(function (viewValue) {
                if (FLOAT_REGEXP_1.test(viewValue)) {
                    ctrl.$setValidity('float', true);
                    return parseFloat(viewValue.replace('.', '').replace(',', '.'));
                } else if (FLOAT_REGEXP_2.test(viewValue)) {
                        ctrl.$setValidity('float', true);
                        return parseFloat(viewValue.replace(',', ''));
                } else {
                    ctrl.$setValidity('float', false);
                    return undefined;
                }
            });
            ctrl.$formatters.unshift(
               function (modelValue) {
                   return $filter('number')(parseFloat(modelValue) , 2);
               }
           );
        }
    };
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, add the &lt;em&gt;smart-float&lt;/em&gt; directive to your input:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;input type="text" id="inputAmount" name="inputAmount" 
placeholder="Amount" ng-model="amount" smart-float /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This gives you what you need. Now, you can improve it showing to your users that the value in the input is invalid. In the following example I used &lt;a href="http://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt; to demonstrate it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;form name="myForm" class="form-horizontal" role="form" novalidate&amp;gt;
    &amp;lt;div class="form-group" ng-class="{'has-error': myForm.inputAmount.$invalid}"&amp;gt;
        &amp;lt;label for="inputText3" class="col-sm-2 control-label"&amp;gt;Amount&amp;lt;/label&amp;gt;
        &amp;lt;div class="col-sm-10"&amp;gt;
            &amp;lt;input type="text" class="form-control" id="inputAmount" name="inputAmount" placeholder="Amount" ng-model="amount" smart-float /&amp;gt;
            &amp;lt;span class="help-block" ng-show="myForm.inputAmount.$error.float"&amp;gt;
                Invalid Amount!
            &amp;lt;/span&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see the working demo on &lt;a href="http://jsfiddle.net/gsferreira/SCr6X/8/"&gt;JSFiddle&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope that this helps you.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://gsferreira.com/archive/2014/05/pomodoro-technique-the-productivity-sauce/</guid><link>http://gsferreira.com/archive/2014/05/pomodoro-technique-the-productivity-sauce/</link><title>Pomodoro Technique, the productivity sauce</title><description>&lt;p&gt;You've probably heard about the &lt;a href="http://pomodorotechnique.com/"&gt;Pomodoro Technique&lt;/a&gt;. This is one of the most popular time management tools nowadays. This technique has been developed by &lt;em&gt;&lt;a href="http://francescocirillo.com/"&gt;Francesco Cirillo&lt;/a&gt;&lt;/em&gt; in the late 1980s. &lt;/p&gt;

&lt;p&gt;In the modern days we keep fighting against the clock, trying to accomplish all the assignments. But in the other hand we have a lot of distractions, as the Facebook messages, new tweets or our phones. The Pomodoro Technique wants to teach you to use the time as your friend, being productive, eliminating the procrastination, the pressure and get free time for yourself. Pomodoro Technique also can be a great complement for other methodology's. I used it in my &lt;a href="http://gettingthingsdone.com/"&gt;GTD (Getting Things Done)&lt;/a&gt; workflow for example.&lt;/p&gt;

</description><pubDate>Sun, 18 May 2014 23:00:00 Z</pubDate><a10:updated>2014-05-18T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;You've probably heard about the &lt;a href="http://pomodorotechnique.com/"&gt;Pomodoro Technique&lt;/a&gt;. This is one of the most popular time management tools nowadays. This technique has been developed by &lt;em&gt;&lt;a href="http://francescocirillo.com/"&gt;Francesco Cirillo&lt;/a&gt;&lt;/em&gt; in the late 1980s. &lt;/p&gt;

&lt;p&gt;In the modern days we keep fighting against the clock, trying to accomplish all the assignments. But in the other hand we have a lot of distractions, as the Facebook messages, new tweets or our phones. The Pomodoro Technique wants to teach you to use the time as your friend, being productive, eliminating the procrastination, the pressure and get free time for yourself. Pomodoro Technique also can be a great complement for other methodology's. I used it in my &lt;a href="http://gettingthingsdone.com/"&gt;GTD (Getting Things Done)&lt;/a&gt; workflow for example.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/pomodoro-technique-the-productivity-sauce-modern-family-decisions-under-pressure.jpg" alt="Modern Family - Decisions under pressure" /&gt;&lt;/p&gt;

&lt;p&gt;Pomodoro is the Italian word for tomato, and Francesco named it as pomodoro because he used a kitchen timer with a tomato shape as his personal timer.
The technique consists in for each 25 minute work period (this period is called a "Pomodoro") take a five minutes break. In this break &lt;strong&gt;you shouldn't go to your social networks&lt;/strong&gt;... beware of shiny objects. Instead, you should rest your eyes, grab a cup of coffee or go take a walk. Every four pomodoros you should take a longer break of 20 minutes. Frequent breaks keep your mind fresh and focused. Your brain will retrieve you the favor.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.flickr.com/photos/33593406@N03/7738254354/"&gt;&lt;img src="http://gsferreira.com/images/pomodoro-technique-the-productivity-sauce-pomodoro-timer.jpg" alt="Pomodoro timer" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!---*"Photo by [Kate Bunker](http://www.flickr.com/photos/33593406@N03/7738254354/) licensed under [Creative Commons Attribution-NonCommercial License](http://creativecommons.org/licenses/by-nc/2.0/)."*
--&gt;

&lt;p&gt;You should be asking &lt;strong&gt;why the 25 minutes&lt;/strong&gt;? I really don't know, and that is a question that I have made to myself. After some research, I believe that the 25 minutes is the "ideal" period to keep the focus on a single task, if you have longer periods your brain will get tired, but this is a personal conclusion.&lt;/p&gt;

&lt;p&gt;This isn't applicable for anyone, but if you usually seat down at a desk and you need to get things done, I believe that you can use it. I use it while I'm programming because it helps me stay focused and "force" me to break large tasks into short steps. I also like to use it in teamwork, for example, in pair programming or in a &lt;a href="http://en.wikipedia.org/wiki/Stand-up_meeting"&gt;Scrum stand-up meeting&lt;/a&gt;. The ticking clock will teach your team that time is running out and the task should completed. If you are questioning yourself if this is a good tool for you, go check this &lt;a href="http://pomodorotechnique.com/get-started/"&gt;page&lt;/a&gt;, probably you will find your case.&lt;/p&gt;

&lt;p&gt;You could find some problems to apply it, for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to concentrate without interruptions, specially if you are inside a team. &lt;/li&gt;
&lt;li&gt;The open-plan offices can be an enemy, so pick the perfect music and put your headphones.&lt;/li&gt;
&lt;li&gt;It's possible don't answer your phone during a pomodoro in your position?&lt;/li&gt;
&lt;li&gt;Keep the flow while dealing with interaction with the co-workers.&lt;/li&gt;
&lt;li&gt;Meetings... a necessary evil.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pomodoro Technique is free, you can spend some money to get a kitchen timer if you want… or you can use any timer program on your computer or phone (I'm using the &lt;a href="https://chrome.google.com/webstore/detail/simple-pomodoro%C2%AE/blidjjfbdbkcmegfnidmgndgdamhhelp"&gt;&lt;em&gt;Simple Pomodoro&lt;/em&gt; extension for Chrome&lt;/a&gt;). The process isn't ideal for every person, but if you want to boost your productivity you can try it and let me know the results in the comments below.&lt;/p&gt;

&lt;p&gt;By the way, this post has been written in 4 pomodoros.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://gsferreira.com/archive/2014/05/the-dark-side-of-dynamic-typing/</guid><link>http://gsferreira.com/archive/2014/05/the-dark-side-of-dynamic-typing/</link><title>The dark side of dynamic typing</title><description>&lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/dd264736.aspx"&gt;Dynamic typing&lt;/a&gt; isn't anything new in the .NET Framework world, he is available since .NET 4.0 and I'm sure that you have used it. If you didn't, you should take a spare of time for it. Dynamic typing is great because it let you get your work done faster and it may avoid some complicated reflection code, for example. I've used it a lot, but recently I've discovered his dark side... &lt;strong&gt;the performance side&lt;/strong&gt;. &lt;/p&gt;

</description><pubDate>Wed, 07 May 2014 23:00:00 Z</pubDate><a10:updated>2014-05-07T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/dd264736.aspx"&gt;Dynamic typing&lt;/a&gt; isn't anything new in the .NET Framework world, he is available since .NET 4.0 and I'm sure that you have used it. If you didn't, you should take a spare of time for it. Dynamic typing is great because it let you get your work done faster and it may avoid some complicated reflection code, for example. I've used it a lot, but recently I've discovered his dark side... &lt;strong&gt;the performance side&lt;/strong&gt;. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://www.quickmeme.com/img/e8/e8e8d6ebfd29823854295376337528dc9853a26b27f43c85dd8eb0ed0ab666dc.jpg" alt="alt text" /&gt;&lt;/p&gt;

&lt;p&gt;Why do I say it? If you measure the performance cost of a simple "Set" or "Get" operation you will see a great improvement simply changing it to typed code. You can use the following code to test it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//Typed Object performance - SET PERFORMANCE
MyClass myObject = new MyClass();
sw.Reset();
sw.Start();
myObject.Str = "Hello World!";
sw.Stop();
Console.WriteLine("Typed Object - SET - Elapsed={0}", sw.Elapsed);


//Typed Object performance - GET PERFORMANCE
sw.Reset();
sw.Start();
result = myObject.Str;
sw.Stop();
Console.WriteLine("Typed Object - GET - Elapsed={0}", sw.Elapsed);


//Dynamic Object performance - SET PERFORMANCE
dynamic myDynamicObject = new MyClass();
sw.Reset();
sw.Start();
myDynamicObject.Str = "Hello World!";
sw.Stop();
Console.WriteLine("Dynamic Object - SET - Elapsed={0}", sw.Elapsed);

//Dynamic Object performance - GET PERFORMANCE
sw.Reset();
sw.Start();
result = myDynamicObject.Str;
sw.Stop();
Console.WriteLine("Dynamic Object - GET - Elapsed={0}", sw.Elapsed);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this piece of code inside a loop I got the following results. You can see the time differences.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Typed Object - GET - Elapsed=00:00:00.0000022&lt;/li&gt;
&lt;li&gt;Typed Object - SET - Elapsed=00:00:00.0000008&lt;/li&gt;
&lt;li&gt;Dynamic Object - GET - Elapsed=00:00:00.0330937&lt;/li&gt;
&lt;li&gt;Dynamic Object - SET - Elapsed=00:00:00.0027800&lt;/li&gt;
&lt;li&gt;Typed Object - GET - Elapsed=00:00:00&lt;/li&gt;
&lt;li&gt;Typed Object - SET - Elapsed=00:00:00.0000004&lt;/li&gt;
&lt;li&gt;Dynamic Object - GET - Elapsed=00:00:00.0000031&lt;/li&gt;
&lt;li&gt;Dynamic Object - SET - Elapsed=00:00:00.0000026&lt;/li&gt;
&lt;li&gt;Typed Object - GET - Elapsed=00:00:00.0000004&lt;/li&gt;
&lt;li&gt;Typed Object - SET - Elapsed=00:00:00.0000004&lt;/li&gt;
&lt;li&gt;Dynamic Object - GET - Elapsed=00:00:00.0000022&lt;/li&gt;
&lt;li&gt;Dynamic Object - SET - Elapsed=00:00:00.0000026&lt;/li&gt;
&lt;li&gt;Typed Object - GET - Elapsed=00:00:00.0000004&lt;/li&gt;
&lt;li&gt;Typed Object - SET - Elapsed=00:00:00.0000004&lt;/li&gt;
&lt;li&gt;Dynamic Object - GET - Elapsed=00:00:00.0000022&lt;/li&gt;
&lt;li&gt;Dynamic Object - SET - Elapsed=00:00:00.0000022&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm not trying to tell you to keep a safety distance from dynamic typing, I'm just saying that if you're building an application where the performance is a key factor, where you don't need dynamic typing and you really need to pay attention to any fraction of second... so you should keep an eye on it. &lt;/p&gt;
</a10:content></item></channel></rss>