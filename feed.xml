<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Guilherme Ferreira</title>
  <subtitle>Software Architect and a minimalist aspirant. passionate by product development and a continuous improvement enthusiast.</subtitle>
  <link href="https://gsferreira.com/feed.xml" rel="self"/>
  <link href="https://gsferreira.com/"/>
  <updated>2020-07-24T00:00:00-00:00</updated>
  <id>https://gsferreira.com/</id>
  <author>
    <name>Guilherme Ferreira</name>
    <email>me@gsferreira.com</email>
  </author>
    
    <entry>
      <title>Eleventy - The Simplest Static Site Generator</title>
      <link href="https://gsferreira.com/archive/2020/07/eleventy-the-simplest-static-site-generator/"/>
      <updated>2020-07-24T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2020/07/eleventy-the-simplest-static-site-generator/</id>
      <content type="html">&lt;p&gt;Eleventy is the simplest Static Site Generator that I know. I know that this is a bold statement and you can prove me wrong. But &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;Eleventy (11ty)&lt;/a&gt; was the simplest static site generator that I found when I needed to migrate my blog. Eleventy may not be the best or the powerful one but is beautifully simple.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/archive/eleventy/logo.jpg&quot; alt=&quot;Eleventy&quot;&gt;&lt;/p&gt;
&lt;h2&gt;The goal&lt;/h2&gt;
&lt;p&gt;I have been thinking about moving my blog to a different framework. I was using &lt;a href=&quot;https://gsferreira.com/archive/2014/05/reasons-to-blogging-with-github-pages-and-sandra-snow/&quot;&gt;Sandra.Snow&lt;/a&gt;, that not have been updated recently.&lt;/p&gt;
&lt;p&gt;My goal was to keep using a Static Blog, hosting on GitHub Pages. I want to write using markdown. It was also important to be able to keep the same URLs and migrate all the content to the new framework. I also would like the blog not need JavaScript to display the blog posts. Those are the requirements.&lt;/p&gt;
&lt;h2&gt;The obvious choices&lt;/h2&gt;
&lt;p&gt;In the top of my mind, I knew that &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt; and &lt;a href=&quot;https://nextjs.org/&quot;&gt;NextJS&lt;/a&gt; were able to do the job. I was more inclined to try out Gatsby since there are many starters to create a blog. I don&#39;t have experience with Gatsby or NextJS, so, it was important to me to not need to much time to do the work. So, the learning curve was also an important factor.&lt;/p&gt;
&lt;p&gt;My first attempt was with Gatsby. I installed the &lt;a href=&quot;https://www.gatsbyjs.org/starters/gatsbyjs/gatsby-starter-blog/&quot;&gt;starter blog&lt;/a&gt; and I tried to migrate my content to Gatsby. I have to confess that after a few hours I was stuck. I couldn&#39;t accomplish my task without investing to much time to learn the framework. After a few problems, I was finding myself searching through the web to have a clue of what should I do.&lt;/p&gt;
&lt;p&gt;Gatsby was taking so much time that I decided to take a bet on NextJS. I knew beforehand that I didn&#39;t have so many starters/templates as in the Gatsby ecosystem. Even so, I was expecting to have results faster.&lt;/p&gt;
&lt;p&gt;I picked &lt;a href=&quot;https://telmo.im/writings/open-sourcing-blog&quot;&gt;Telmo blog&lt;/a&gt; as a starting point and I tried to move my content. The results show up faster!&lt;/p&gt;
&lt;p&gt;But, there was something that I didn&#39;t like and I didn&#39;t find a way to overcome. Even with the &lt;a href=&quot;https://nextjs.org/docs/advanced-features/static-html-export&quot;&gt;static HTML export&lt;/a&gt; build, I needed JavaScript enabled to display the content. Probably was because of my lack of knowledge, but after a few hours, I didn&#39;t have a clue of what should I do.&lt;/p&gt;
&lt;h2&gt;Eleventy&lt;/h2&gt;
&lt;p&gt;I was tired of fighting with Gatsby and NextJS. Something simpler was needed. I recall seeing a blog post from &lt;a href=&quot;https://reverentgeek.com/&quot;&gt;David Neal&lt;/a&gt; about moving his blog to a different technology. The technology is Eleventy. You can read his blog post &lt;a href=&quot;https://reverentgeek.com/moving-from-ghost-to-eleventy/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After reading a few things, I start feeling excited. Eleventy seems simple and quick to learn. The learning curve doesn&#39;t seem to steep. It feels natural to create pages with it. I see it as Templating Language on steroids.&lt;/p&gt;
&lt;p&gt;So, I start working to move my blog into Eleventy. I started with the &lt;a href=&quot;https://github.com/marcfilleul/mf-blogstarter&quot;&gt;MF Blog Starter Template&lt;/a&gt;. After a few hours, I had most of the job done. Without tricks and without needing to search the web to find what I want. The &lt;a href=&quot;https://www.11ty.dev/docs/&quot;&gt;Eleventy documentation&lt;/a&gt; was just enough.&lt;/p&gt;
&lt;p&gt;I can&#39;t recommend it more. If you are planning to use a Static Site Generator, give Eleventy a try. Probably something simple is enough.&lt;/p&gt;
&lt;p&gt;You can find &lt;a href=&quot;https://github.com/gsferreira/gsferreira.github.com&quot;&gt;here the source code for my blog&lt;/a&gt;. I hope it can be helpful.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Speaking at a Virtual Conference</title>
      <link href="https://gsferreira.com/archive/2020/07/speaking-at-a-virtual-conference/"/>
      <updated>2020-07-08T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2020/07/speaking-at-a-virtual-conference/</id>
      <content type="html">&lt;p&gt;I had the honour of having one of my talks selected to &lt;a href=&quot;https://ndcoslo.com/&quot;&gt;NDC Oslo 2020&lt;/a&gt;. I was looking forward to speaking at Oslo Spektrum for the first time. This has been a wish for a long time.&lt;/p&gt;
&lt;p&gt;Unfortunately, Coronavirus has destroyed those plans. NDC was converted into an Online Conference. With that, I was facing a new and different challenge: Virtual Conference Speaking.&lt;/p&gt;
&lt;p&gt;If you had the chance of speaking in a virtual conference, you know that it&#39;s not the same experience. Even if you are an experienced Speaker, you will find yourself with strange feelings.&lt;/p&gt;
&lt;p&gt;Fortunately, my talk went really well. So, this post serves to share what I have done to prepare myself. If you will be speaking in a virtual conference, this may be useful to you. My goal here is to describe what I&#39;ve done and what I&#39;ve learned. Hope it can be helpful to you.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;h3&gt;Video&lt;/h3&gt;
&lt;p&gt;To me, image is an important part, and I didn&#39;t want to seem sloppy or unprofessional. Having a good camera is a must, but there are other things to consider.&lt;/p&gt;
&lt;h3&gt;Camera&lt;/h3&gt;
&lt;p&gt;I bought a &lt;a href=&quot;https://secure.logitech.com/en-gb/product/hd-pro-webcam-c920?crid=34&quot;&gt;Logitech C920&lt;/a&gt;. The image improved when comparing to the laptop webcam. Besides that fact, I&#39;m able to use a tripod to hold the camera and align it with my eyes.&lt;/p&gt;
&lt;p&gt;Aligning the camera with your eyes is useful. You will be speaking to a camera, so it&#39;s good to have it in the correct position. Level it with your eyes. It will feel more natural to you and to those that are watching.&lt;/p&gt;
&lt;h3&gt;Lighting&lt;/h3&gt;
&lt;p&gt;Lighting is a small investment that makes a huge difference in the result. You can always use natural light. In my case, I bought a simple &lt;a href=&quot;https://www.aliexpress.com/item/33020816527.html&quot;&gt;light ring from AliExpress&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Background&lt;/h3&gt;
&lt;p&gt;If you don&#39;t have a green screen, you need to take care of your background. Having a lot of things happening in the background can be quite distracting. Remember that your goal is to get the attention of the audience. They are at home, on their computer, and they can easily be distracted when compared to a conference room.&lt;/p&gt;
&lt;p&gt;I didn&#39;t want to give them another good reason for distraction by having shiny objects on the background.&lt;/p&gt;
&lt;p&gt;So, I tried to create a minimalist background with a small d√©cor to have a better look and feel than a white wall. I also used a led strip that I had at home to have a backlight.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/speaking-at-a-virtual-conference-background.jpg&quot; alt=&quot;Background&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Microphone&lt;/h3&gt;
&lt;p&gt;A decent microphone is a must. Using the laptop microphone is terrible. &lt;a href=&quot;https://dylanbeattie.net/2020/05/12/microphones.html&quot;&gt;Dylan Beatie crafted an excellent blog post&lt;/a&gt; that can help. There you can also see the difference between different microphones.&lt;/p&gt;
&lt;p&gt;In my case, the microphone was a concern, especially because I live in a noisy place with a ton of traffic. It&#39;s impossible not to listen to background noise in my house. So, I decided to invest in a USB Dynamic Microphone (&lt;a href=&quot;http://www.samsontech.com/samson/products/microphones/usb-microphones/q2u/&quot;&gt;SAMSON q2u&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;So, I recommend you to find the quietest place you can and use a good microphone. At least, something other than your laptop microphone. If you don&#39;t have background noise, an inexpensive Condenser Microphone can improve your sound quality a lot.&lt;/p&gt;
&lt;p&gt;I&#39;ve found really good information about Microphones, Cameras and Lighting &lt;a href=&quot;https://mattstauffer.com/blog/setting-up-your-webcam-lights-and-audio-for-remote-work-podcasting-videos-and-streaming&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Glare on Glasses&lt;/h3&gt;
&lt;p&gt;If you use glasses like me, Lighting and positioning can be quite difficult.&lt;/p&gt;
&lt;p&gt;Facing direct light or bright screens was reflecting everything on my glasses.&lt;/p&gt;
&lt;p&gt;Light and screen reflexes can be quite distracting and don&#39;t feel natural. To overcome it, I position my screens on a diagonal line and the light ring from top to bottom. Besides that, I reduced the brightness of my screens.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=9NWAcK-wM80&quot;&gt;This video&lt;/a&gt; was really helpful.&lt;/p&gt;
&lt;h3&gt;Stand-up&lt;/h3&gt;
&lt;p&gt;By standing up, you will see that your voice will be clear and you will have a better posture. If not have a standing desk, improvise. I managed the same result by stacking up my kitchen table with my daughter¬¥s playing table.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/speaking-at-a-virtual-conference-setup-macro.jpg&quot; alt=&quot;Setup - Stand-up&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Preparing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Rehearse&lt;/strong&gt; in the same environment and with the same setup that you will be using.&lt;/li&gt;
&lt;li&gt;Record it and share it with your friends and colleagues. Ask for &lt;a href=&quot;https://gsferreira.com/archive/2019/07/leading-improvement-through-honest-feedback/&quot;&gt;honest feedback&lt;/a&gt;. Use the feedback to improve.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rehearse&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Make sure that you have a Plan B
&lt;ul&gt;
&lt;li&gt;What if your computer fails?&lt;/li&gt;
&lt;li&gt;Will you use a pointer? Do you have extra batteries?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rehearse&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rehearse&lt;/strong&gt; with the same software that you will be using in the day. Make yourself comfortable with it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;No. Rehearse written so many times isn&#39;t a mistake. Honestly, &lt;strong&gt;the most important thing that you can do is rehearse&lt;/strong&gt;. Rehearse in the same conditions. Over and over again. By doing that you will feel more comfortable speaking to a camera.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;The day&lt;/h2&gt;
&lt;p&gt;The day has been really pleasant to me. After multiple hours of rehearsing, I have found that my muscle memory kicked in. I didn&#39;t have the chance to feel stressed. I was feeling prepared. It was showtime and I was enjoying it. Nevertheless, there are a few things that helped me.&lt;/p&gt;
&lt;h3&gt;Dress-up&lt;/h3&gt;
&lt;p&gt;This will signal to your brain that it&#39;s time to do important stuff.&lt;/p&gt;
&lt;h3&gt;Barefoot&lt;/h3&gt;
&lt;p&gt;Barefoot or use socks. You will find yourself more relaxed. You will also make less background noise with your feet.&lt;/p&gt;
&lt;h3&gt;Shutdown your doorbell&lt;/h3&gt;
&lt;p&gt;Make the possible not to be interrupted. Delivery man ringing the doorbell, your partner walking by, your dog barking... Try to find a way to reduce the probability of something like that to happen. But, if it happens, embrace it. Play with it. Prepare a joke if you can.&lt;/p&gt;
&lt;h3&gt;Hydrate&lt;/h3&gt;
&lt;p&gt;Have a glass of water nearby. Do not forget.&lt;/p&gt;
&lt;h3&gt;Connect to the audience&lt;/h3&gt;
&lt;p&gt;You can&#39;t move around, so try to make your hands visible and use them to communicate. Use different tones of voice to keep people connected. Ask for feedback in the chat and try to keep an eye on the chat in case you are looking for a more interactive talk.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/speaking-at-a-virtual-conference-micro.jpg&quot; alt=&quot;Setup - closeup&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Always remember that those attending, are there because they want to learn from you. So enjoy!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>That flag argument is yelling at you</title>
      <link href="https://gsferreira.com/archive/2020/05/that-flag-argument-is-yelling-at-you/"/>
      <updated>2020-05-28T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2020/05/that-flag-argument-is-yelling-at-you/</id>
      <content type="html">&lt;p&gt;Sometimes the code yells at you trying to warn you that something is wrong.&lt;/p&gt;
&lt;p&gt;Flag arguments are one of those cases. Adding a Boolean argument to condition the execution is an easy fix, but we are doing the wrong thing.&lt;/p&gt;
&lt;p&gt;By adding a flag argument to a function, it&#39;s clear that we are ignoring the Single Responsibility Principle. The code is yelling at us, trying to explain that. No doubt.&lt;/p&gt;
&lt;p&gt;Let&#39;s take a look. When a function has a flag argument, we will find something like this (or even worse) in the implementation:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/that-flag-argument-is-yelling-at-you-flag-argument.png&quot; alt=&quot;Flag Argument&quot;&gt;&lt;/p&gt;
&lt;p&gt;Wouldn&#39;t be better to have something like:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/that-flag-argument-is-yelling-at-you-refactor.png&quot; alt=&quot;Flag Argument Refactor&quot;&gt;&lt;/p&gt;
&lt;p&gt;When writing code, remember that the goal is to simplify our client&#39;s life.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Don&#39;t comment what your code is doing, comment the Why</title>
      <link href="https://gsferreira.com/archive/2020/05/dont-comment-what-your-code-is-doing-comment-the-why/"/>
      <updated>2020-05-22T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2020/05/dont-comment-what-your-code-is-doing-comment-the-why/</id>
      <content type="html">&lt;p&gt;Code comments are a common topic of love/hate discussions.
It&#39;s particularly interesting to see developers shifting opinion while experience grows.&lt;/p&gt;
&lt;p&gt;Code Comments are a good idea because we are writing them down to help others. Even to help the future self.
But we use a lot of comments that don&#39;t help. This explains the Comments bad reputation nowadays.&lt;/p&gt;
&lt;p&gt;So, what can we do to improve our comments?&lt;/p&gt;
&lt;p&gt;I use a simple rule: &lt;strong&gt;Explain the Why, not the What.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I see a lot of Comments that are explaining what the code is doing. That doesn&#39;t help.
The effort that we put to write a Comment must be invested refactoring the code (&lt;a href=&quot;https://gsferreira.com/archive/2019/10/a-simple-tip-to-improve-your-code-maintainability-decompose-if-statements-into-methods&quot;&gt;this is a good starting point&lt;/a&gt;).
&lt;strong&gt;When we need to describe the What is because the code isn&#39;t readable at all.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It&#39;s also pretty common to have obvious Comments. All we have seen that &lt;em&gt;&amp;quot;// Get a Customer&amp;quot;&lt;/em&gt; comment in a &lt;em&gt;&amp;quot;GetCustomer&amp;quot;&lt;/em&gt; method.&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:100%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/gF8vDz0XAUfIWx9jUW&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/memecandy-gF8vDz0XAUfIWx9jUW&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Those comments don&#39;t bring value. They raise the cognitive load required to read and maintain the code.&lt;/p&gt;
&lt;p&gt;So, the idea is to &lt;strong&gt;let the code speak for himself&lt;/strong&gt;. We only write comments, when we need to explain Why we have done something.&lt;/p&gt;
&lt;p&gt;It&#39;s useful to understand why a piece of code was written in a certain way.
Those Why comments can help us out to understand that there&#39;s a particular corner case, or the reason for the followed approach, or that, because of a bug (Link the bug from the comment), we need to do that.
Those are a few examples, but you get the point.&lt;/p&gt;
&lt;p&gt;Our code must be self-describing, but sometimes, we need to explain the Why.&lt;/p&gt;
&lt;p&gt;And remember: &lt;strong&gt;don&#39;t Comment the code that you don&#39;t need anymore. Throw it away.&lt;/strong&gt; In case you need it, it will be at the source control.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Manage your code as a successful restaurant</title>
      <link href="https://gsferreira.com/archive/2020/05/manage-your-code-as-a-successful-restaurant/"/>
      <updated>2020-05-15T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2020/05/manage-your-code-as-a-successful-restaurant/</id>
      <content type="html">&lt;p&gt;Have you ever noticed that a successful restaurant has a shorter menu? Especially when compared to those who are struggling.&lt;/p&gt;
&lt;p&gt;Why?! &lt;strong&gt;Simplicity!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When you keep things simple, you focus on fewer things. You give your best and you can focus your effort. You can try to improve and perfect all details.&lt;/p&gt;
&lt;p&gt;But, when life doesn&#39;t work as we expect, we start throwing new dishes into the menu. Expecting to please everyone.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/manage-your-code-as-a-successful-restaurant-complex-menu.jpeg&quot; alt=&quot;Complex menu&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Spoiler alert: When you build something to everyone, you build it to nobody.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This isn&#39;t just the restaurants&#39; reality. We see that in software too. When trying to convince new customers, throwing features into a product is usually the way to go. And it&#39;s hard to find a Product Owner who doesn&#39;t fight to have the team focused on new features.&lt;/p&gt;
&lt;p&gt;What we should all be doing is to &lt;strong&gt;focus on what we have and what customers love.&lt;/strong&gt; Those features have a margin to improve. &lt;strong&gt;Don&#39;t bring a new feature into the product just because a customer needs it. Bring it because is inevitable.&lt;/strong&gt; Because it&#39;s obvious that your software will be so much better. Because you believe that you are in an especial condition and nobody can do it better than you. And don&#39;t forget to throw away stuff that doesn&#39;t &amp;quot;spark joy&amp;quot;.&lt;/p&gt;
&lt;iframe src=&quot;https://giphy.com/embed/hvRoo3YcAPUheF3MxY&quot; width=&quot;480&quot; height=&quot;480&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;We can expand this concept to multiple software parts. High level, to a low level. Decompose the code in smaller objects or functions. Create focused &amp;quot;restaurants&amp;quot; specialized in one task. If you want Mexican food, you don&#39;t look for an Italian restaurant.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Treat your code as a garden, which deserves care and dedication.&lt;/strong&gt; Don&#39;t write it and ignore it until a bug arises.&lt;/p&gt;
&lt;p&gt;A chef who creates new dishes every single night will create a few stunning dishes for sure. But also, a vast number of massive failures.&lt;/p&gt;
&lt;p&gt;Having a continuous improvement mindset is what makes us better than the rest.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>A simple way to build your JavaScript tests data</title>
      <link href="https://gsferreira.com/archive/2020/05/a-simple-way-to-build-your-javascript-tests-data/"/>
      <updated>2020-05-07T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2020/05/a-simple-way-to-build-your-javascript-tests-data/</id>
      <content type="html">&lt;p&gt;When writing Unit Tests, you will need to create test data objects for sure. Usually, those objects have tiny differences between different test cases.&lt;/p&gt;
&lt;p&gt;There&#39;s a pattern that I especially like when I&#39;m doing this is C#. &lt;a href=&quot;https://ardalis.com/improve-tests-with-the-builder-pattern-for-test-data&quot;&gt;The Builder Pattern&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The builder pattern is an elegant solution to the problem and I really like it. But, is it a simple solution for JavaScript?&lt;/p&gt;
&lt;p&gt;Let&#39;s see how it would look like using the builder pattern in JS:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/a-simple-way-to-build-your-javascript-tests-data-builder.png&quot; alt=&quot;Builder pattern&quot;&gt;&lt;/p&gt;
&lt;p&gt;As you can see, there&#39;s a lot of code needed to implement it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How can we do it more simply?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The basic idea is to &lt;strong&gt;use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;Spread Operator&lt;/a&gt; to customize a default object&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let&#39;s see how:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/a-simple-way-to-build-your-javascript-tests-data-spread.png&quot; alt=&quot;Spread Operator&quot;&gt;&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Don&#39;t declare your Variables at the top</title>
      <link href="https://gsferreira.com/archive/2020/05/dont-declare-your-variables-at-the-top/"/>
      <updated>2020-05-05T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2020/05/dont-declare-your-variables-at-the-top/</id>
      <content type="html">&lt;p&gt;When I start learning to code, I was taught to declare variables at the top of the code. I followed it for a long time before start questioning that absolute truth.&lt;/p&gt;
&lt;p&gt;We are writing code for others to read. So, we shouldn&#39;t present our characters too early in the story. &lt;a href=&quot;https://www.livescience.com/2493-mind-limit-4.html&quot;&gt;Our working memory handle a strict number of things at a given time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/dont-declare-your-variables-at-the-top-memory-overflow.png&quot; alt=&quot;Working memory overflow&quot;&gt;&lt;/p&gt;
&lt;p&gt;Keeping related concepts closer, we are reducing the cognitive load. This will lead us to clean and simple code.&lt;/p&gt;
&lt;p&gt;You can find evidence of that, in Design Principles. By using the &lt;a href=&quot;https://www.interaction-design.org/literature/article/laws-of-proximity-uniform-connectedness-and-continuation-gestalt-principles-2&quot;&gt;Proximity principle&lt;/a&gt;, we form groups by keeping things closer.&lt;/p&gt;
&lt;p&gt;This is one of the reasons why &lt;strong&gt;I run away from global variables.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Besides the cognitive load reduction, there&#39;s a positive side effect from following this. &lt;strong&gt;I use this as a warning sign to extract a function. Whenever you can&#39;t keep the variables close to where they are used and to the top, extract it.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So, instead of doing this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/dont-declare-your-variables-at-the-top-example1.png&quot; alt=&quot;Example 1&quot;&gt;&lt;/p&gt;
&lt;p&gt;You can do this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/dont-declare-your-variables-at-the-top-example2.png&quot; alt=&quot;Example 2&quot;&gt;&lt;/p&gt;
&lt;p&gt;And then refactor to this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/dont-declare-your-variables-at-the-top-example3.png&quot; alt=&quot;Example 3&quot;&gt;&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>windbg a .net core 3.1 app memory leak</title>
      <link href="https://gsferreira.com/archive/2020/04/windbg-a-net-core-31-app-memory-leak/"/>
      <updated>2020-04-15T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2020/04/windbg-a-net-core-31-app-memory-leak/</id>
      <content type="html">&lt;p&gt;I&#39;ve spent the past few days trying to fix a memory leak. I was having problems to figure out what was leaking, so I used windbg wishing that it would help me.&lt;/p&gt;
&lt;p&gt;I confess that I&#39;m not an experienced user of windbg, so I google how to catch memory issues using windbg. There&#39;s a ton of information out there. The problem is that I didn&#39;t found a guide on how to do it with a .net core application.&lt;/p&gt;
&lt;p&gt;So, I&#39;m sharing here how I&#39;ve done it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install windbg (&lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-download-tools&quot;&gt;see here&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Add windbg.exe (x64 version) to your environment path.&lt;/li&gt;
&lt;li&gt;Install SOS (&lt;a href=&quot;https://github.com/dotnet/diagnostics#installing-sos&quot;&gt;see here&lt;/a&gt;): &lt;code&gt;dotnet tool install -g dotnet-sos&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Set breakpoint(s) using &lt;code&gt;System.Diagnostics.Debugger.Break()&lt;/code&gt; in your source code.&lt;/li&gt;
&lt;li&gt;Update your project (*.csproj file) to Load Symbols: &lt;code&gt;&amp;lt;DebugSymbols&amp;gt;true&amp;lt;/DebugSymbols&amp;gt;&amp;lt;DebugType&amp;gt;pdbonly&amp;lt;/DebugType&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Build your project using Release configuration: &lt;code&gt;dotnet build -c Release&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Launch with WinDbg attached to your project: &lt;code&gt;windbg dotnet [YOUR DLL PATH].dll&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bret.codes/net-core-and-windbg/#loadsos&quot;&gt;Load SOS&lt;/a&gt;¬†using¬†&lt;code&gt;.load C:\Users\[USERNAME]\.dotnet\sos\sos.dll .&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/windbg-a-net-core-31-app-memory-leak-load-sos.png&quot; alt=&quot;windbg - load sos&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;9&quot;&gt;
&lt;li&gt;Enter¬†&lt;code&gt;g&lt;/code&gt;¬†to go to the first breakpoint.&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;!gchandles&lt;/code&gt; to see garbage collector handles.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!DumpHeap /d -mt [MT]&lt;/code&gt; using the memory type id from the result list of the previous command. Example: &lt;code&gt;!DumpHeap /d -mt 00007ffb4c85ca98&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!gcroot -all [ADDRESS]&lt;/code&gt; using the memory address form the result list of the previous command. Example: &lt;code&gt;!gcroot -all 0x0000023cd2e71510&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Following this guide, you should have a clue of what is still in memory and where the object is in use.&lt;/p&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Optimizing React Render - 3 things that I wish to know before</title>
      <link href="https://gsferreira.com/archive/2020/02/optimizing-react-render-3-things-that-i-wish-to-know-before/"/>
      <updated>2020-02-26T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2020/02/optimizing-react-render-3-things-that-i-wish-to-know-before/</id>
      <content type="html">&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/optimizing-react-render-3-things-that-i-wish-to-know-before.png&quot; alt=&quot;Optimizing React Render - 3 things that I wish to know before&quot;&gt;&lt;/p&gt;
&lt;p&gt;My experience with &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; has been awesome so far. My feeling is that I just needed to understand the basic concepts to be productive with React. The problem is that there are a few advanced concepts that I was missing.&lt;/p&gt;
&lt;p&gt;Recently, the lack of knowledge manifested itself as performance issues. To fix them I needed to learn in the hard way. So, I&#39;m sharing this here because if I can prevent you from suffering from it, I would be glad.&lt;/p&gt;
&lt;p&gt;I observed that the components of my application were rendering too many times, even when I did not need them to re-render. The following 3 recommendations are the main reasons for that to happen.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;üí° 1. Don&#39;t pass props with an object by reference&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;If you invoke a component and set a prop with a given object, the object will be passing by reference.&lt;/strong&gt; This can cause all kind of problems. I was facing two distinct problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Despite I was lifting the state up, the child components have access to the same instance of the state.&lt;/li&gt;
&lt;li&gt;When passing props by reference, you can receive the same object in the prevProps and nextProps for a componentShouldUpdate event. That will cause you problems. You want to compare those props to know what has been changed, but you are looking at the exact same object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;‚úÖ What to do?&lt;/h3&gt;
&lt;p&gt;Use the spread operator. If you have a complex data structure, with multi-level deepness, use a tool like &lt;a href=&quot;https://lodash.com/docs/#cloneDeep&quot;&gt;Lodash cloneDeep&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;üí° 2. Only pass properties needed to the component&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Make sure that you don&#39;t provide information that isn&#39;t needed to the child components. Try to only pass simple props with primitive types or functions.&lt;/strong&gt; If you pass a complex object and the child object only needs part of it, React will need to re-render the component. React will re-render every time that the props or the state change.&lt;/p&gt;
&lt;h3&gt;‚úÖ What to do?&lt;/h3&gt;
&lt;p&gt;Review your components and question all those props where the prop type is Object or Any.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;üí° 3. React Memo or Pure Components&lt;/h2&gt;
&lt;p&gt;Memo and Pure Components are an excellent way of improving performance. But, unless you are using them in the correct scenario you will not see the benefits. &lt;strong&gt;If you are providing a complex object&lt;/strong&gt; (like explained in recommendation 2) &lt;strong&gt;Memo and Pure Components will not work as you expect.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To understand that, you need to know that a Pure Component is different from a Component. Pure Components implement the &lt;em&gt;&amp;quot;shouldComponentUpdate&amp;quot;&lt;/em&gt; with a shallow prop and state comparison.&lt;/p&gt;
&lt;p&gt;React documentation (&lt;a href=&quot;https://reactjs.org/docs/react-api.html#reactpurecomponent&quot;&gt;see here&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;&lt;code&gt;React.PureComponent‚Äôs&lt;/code&gt;¬†&lt;code&gt;shouldComponentUpdate()&lt;/code&gt;¬†only shallowly compares the objects. If these contain complex data structures, it may produce false-negatives for deeper differences.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;‚úÖ What to do?&lt;/h3&gt;
&lt;p&gt;Try to follow the recommendation 2. If you need to have a complex data structure, use a Component and implement the &lt;em&gt;&amp;quot;shouldComponentUpdate&amp;quot;&lt;/em&gt; instead.&lt;/p&gt;
&lt;p&gt;You can also take a look into react-fast-compare to help you out comparing complex data.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;To conclude, try to use primitive data as Props and use Pure Components or Memo when you can.&lt;/p&gt;
&lt;p&gt;If you can&#39;t, be sure that you clone the data and implement the &lt;em&gt;&amp;quot;shouldComponentUpdate&amp;quot;&lt;/em&gt; by yourself.&lt;/p&gt;
&lt;p&gt;I hope that this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>One-on-ones - Using behavioural science to maximize the impact</title>
      <link href="https://gsferreira.com/archive/2020/02/one-on-ones-using-behavioural-science-to-maximize-the-impact/"/>
      <updated>2020-02-10T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2020/02/one-on-ones-using-behavioural-science-to-maximize-the-impact/</id>
      <content type="html">&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/one-on-ones-using-behavioural-science-to-maximize-the-impact.png&quot; alt=&quot;One-on-ones - Using behavioural science to maximize the impact.&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you manage or mentor people, you should be doing one-on-one meetings.
They are one of the most important tools that you have, so, it&#39;s important to maximize the result.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;One-on-one meetings are an excellent moment for goal setting&lt;/strong&gt;.
We tend to advise for improvement &lt;strong&gt;and it&#39;s a good practice to set a goal&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The problem is that those goals tend to have the same destiny of new year&#39;s eve goals and fail miserably (by the way, if your gym goal has made through January you are doing a good job!).&lt;/p&gt;
&lt;p&gt;When we do one-on-one meetings we hope to improve people&#39;s lives and the difficult part isn&#39;t to identify those goals, those improvement opportunities.
&lt;strong&gt;The difficult part is to help the team to achieve those goals.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Usually, the intentions are good, and everyone is genuinely trying to do their best.
I don&#39;t see these failures as people&#39;s fault, because we, as humans, are specialists in failing to achieve goals.&lt;/p&gt;
&lt;p&gt;If you have been in this situation, probably you have noticed that goals use to stay in the &amp;quot;To do&amp;quot; state for a long time.
So the question is: &lt;strong&gt;What can we do to be more effective?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;And the answer is in &lt;strong&gt;Behavioural Science&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Multiple studies already present how we should approach Goal Setting and what to do to achieve our goals. So, based on Behavioural Science, what do I recommend:&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Goals&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;üéØ Specific Goals with a specific deadline.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;üí° Suggestion: Propose goals that are specific and easy measure. Assign a deadline.
Remember not to impose goals. You are advising, so your role is mentorship.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Plan&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;üéØ Create a simple plan with small steps.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;üí° Suggestion: Elaborate on the simplest plan possible. A complex plan is more likely to fail
Small steps are easy to measure and to see progress.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;üéØ Try to form a new habit.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;üí° Suggestion: Goals are an excellent opportunity to form new habits.
Make sure that you plan for routine small steps.
By associating those steps to routine, the habit will be more likely to stick.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Commit&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;üéØ Find someone that will act as a referee to enforce a penalty if he fails. If you don&#39;t find anyone, do it yourself.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;üí° Suggestion: Work with your colleague to find a referee and a good career mentor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;üéØ Advice to make the goals public. This will raise the commitment level and help stick to it.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;üí° Suggestion: Lead by example. Inform the team of your own goals. Write it down in a shared space (Slack, Whiteboard, Email, etc.).
This way, everyone will feel safe to do the same.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Reward and Punish&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;üéØ Make commitments that put something meaningful at stake and impose a non-negotiable rule. This way we work harder to achieve our goals.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;üí° Suggestion: Recommend to assume a goal and commit to a task that no one likes in case of failure.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Feedback&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;üéØ Give feedback. Probably you are the reason for that goal, so you should give feedback on the progress or the lack of it.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;üí° Suggestion: Keep frequent one-on-ones and always do a follow-up to the &amp;quot;active&amp;quot; goals.
Be honest and try to present data and examples to demonstrate your point of view.&lt;/p&gt;
&lt;p&gt;In your next one-on-one try to apply these. If you don&#39;t have one-on-ones, make that your first Goal.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Start thinking inside the box</title>
      <link href="https://gsferreira.com/archive/2019/12/start-thinking-inside-the-box/"/>
      <updated>2019-12-02T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2019/12/start-thinking-inside-the-box/</id>
      <content type="html">&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/start-thinking-inside-the-box.png&quot; alt=&quot;Don&#39;t you freeze when you are asked to be creative and think outside the box?&quot;&gt;&lt;/p&gt;
&lt;p&gt;Don&#39;t you freeze when you are asked to be creative and think outside the box?&lt;/p&gt;
&lt;p&gt;If so, you probably have been in the following places. Rumbling through ideas without consequences. Don&#39;t know where to start. Being repetitive. Procrastinating. Those are just a few consequences when we are facing a clean slate.&lt;/p&gt;
&lt;p&gt;These leads us to frustration, disappointment and lack of confidence in our creative skills.&lt;/p&gt;
&lt;p&gt;Probably you even think: &lt;em&gt;&amp;quot;How the hell could Steve Jobs be so creative? That guy was a genius! He could think outside the box for sure.&amp;quot;&lt;/em&gt; Well... I don&#39;t think so. Let&#39;s see why.&lt;/p&gt;
&lt;p&gt;In 2007, Steve presented to the world the first iPhone. A device that began the revolution of our daily companion: The Smartphone. Today we can&#39;t live without it, but in 2001, we weren&#39;t so dependent for sure.&lt;/p&gt;
&lt;p&gt;iPhone wasn&#39;t the first pocket computer that we carried. But, the iPhone was the first one to be really usable. A genius move of Steve Jobs was to understand the limitations of the current devices and drive the innovation to create delightful touch experience. Yes, kids, we used to need a keyboard or even a pen to work with our &amp;quot;smartphones&amp;quot;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pt.wikipedia.org/wiki/Stylus&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/HTC_Touch2_used_with_a_stylus.jpg/1280px-HTC_Touch2_used_with_a_stylus.jpg&quot; alt=&quot;Phone Stylus&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The constraints were there, since the first day. iPhone was built on the shoulders of giants but the difference was to put together in the same device a plot of technologies, a good touch screen and a whole new experience.&lt;/p&gt;
&lt;p&gt;As you can see, the &lt;strong&gt;constraints applied to the User Experience guided Steve to question what can be done to bring a better experience to life&lt;/strong&gt;. For sure, the fact of Steve being so obsessed with perfection was a constraint that forced the Apple team to find a new path, &lt;strong&gt;testing wild ideas&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If Apple had to start without constraints, they would need to forget the past, the Phone history.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Everything that has been accomplished in the &lt;strong&gt;past is for sure one of the most important guides in everything that we do.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Embrace the constraints and let them guide your creativity, because sometimes &lt;strong&gt;freedom, can be paralyzing.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Always remember, that when you were a little kid, you could bring to life an house, a car or even a plane with just two simple ingredients: A cardboard box and your imagination.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>A simple tip to improve your code maintainability - Decompose IF statements into methods</title>
      <link href="https://gsferreira.com/archive/2019/10/a-simple-tip-to-improve-your-code-maintainability-decompose-if-statements-into-methods/"/>
      <updated>2019-10-24T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2019/10/a-simple-tip-to-improve-your-code-maintainability-decompose-if-statements-into-methods/</id>
      <content type="html">&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/a-simple-tip-to-improve-your-code-maintainability-decompose-if-statements-into-methods.png&quot; alt=&quot;Extract method&quot;&gt;&lt;/p&gt;
&lt;p&gt;How many times have you been in a situation where you can‚Äôt understand a small piece of code?&lt;/p&gt;
&lt;p&gt;Readability has a huge impact on code maintenance because reading other‚Äôs people code (and sometimes even our code) can be challenging.&lt;/p&gt;
&lt;p&gt;As developers, &lt;strong&gt;we tend to ignore the UX (user experience) of our code&lt;/strong&gt;. Every single line of code that we do, will eventually be used by others. Is important to be sure that we do the best possible job for our teammates and to future self.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The worst code blocks in terms of UX are the ones that require a huge cognitive load.&lt;/strong&gt; It‚Äôs our job to ask our selves what we can do to reduce it and improve readability.&lt;/p&gt;
&lt;p&gt;Usually when I‚Äôm in a situation that requires high cognitive load to understand a piece of code, is because I face a huge and complex IF statement condition and I need to figure out what the hell it‚Äôs supposed to do. Do you know the feeling? Having to sketch a decision tree trying to figure out what is happening?&lt;/p&gt;
&lt;h2&gt;How to avoid it?&lt;/h2&gt;
&lt;p&gt;This is one of the most simple tricks that I do every day and I tend to advise everyone to do.&lt;/p&gt;
&lt;p&gt;My rule of thumb is simple: &lt;strong&gt;In case of a multi-part condition, extract it to a method and name it accordingly.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let‚Äôs see it in practice.&lt;/p&gt;
&lt;p&gt;Imagine that you have the following expression, that wants to validate if the customer can pay the Order with Credit Card. To do that, the customer should have an active Credit Card.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;PayWithCreditCard &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Customer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CreditCard &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; order&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Customer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CreditCard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ExpirationDate &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; DateTime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Today&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;CreditCardPaymentException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Customer doesn&#39;t have a valid Credit Card&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To improve it, you can extract the boolean logic related to the credit card validation to a static method, and name it with something easy to understand.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ProcessOrder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Order&lt;/span&gt; order&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;PayWithCreditCard &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;IsCustomerCreditCardInvalid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Customer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;CreditCardPaymentException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Customer doesn&#39;t have a valid Credit Card&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;          &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token range operator&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;bool&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;IsCustomerCreditCardInvalid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Customer&lt;/span&gt; customer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; customer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CreditCard &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; customer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CreditCard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ExpirationDate &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; DateTime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Today&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By doing this you are abstracting the reader‚Äôs mind from details. In case the reader needs to know the details, he can drill down to the details.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>You should start working remotely once a week</title>
      <link href="https://gsferreira.com/archive/2019/09/you-should-start-working-remotely-once-a-week/"/>
      <updated>2019-09-05T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2019/09/you-should-start-working-remotely-once-a-week/</id>
      <content type="html">&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/you-should-start-working-remotely-once-a-week-head.png&quot; alt=&quot;Ready to work from home?&quot;&gt;&lt;/p&gt;
&lt;p&gt;Do you know the benefits of remote working? Do you doubt that it would work for you? Would you like to give it a try? Don‚Äôt know how to convince your boss or even how to start?&lt;/p&gt;
&lt;p&gt;If so, I have something for you.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This article is based on my experience of having the complete&lt;/em&gt; &lt;a href=&quot;https://omnialowcode.com/&quot;&gt;&lt;em&gt;company&lt;/em&gt;&lt;/a&gt; &lt;em&gt;working remotely once a week for the past few months.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Remote working&lt;/strong&gt; has been growing in the past few years but for some organizations &lt;strong&gt;can be a change difficult to accept.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you are in an environment with resistance to Remote Working, the best way is to &lt;strong&gt;propose a small experiment.&lt;/strong&gt; The best way to prove a hypothesis is to test it following the scientific method.&lt;/p&gt;
&lt;p&gt;I suggest you present the case to the leadership presenting a few reasons (listed below) and proposing a small experience to prove them.&lt;/p&gt;
&lt;h2&gt;5 reasons:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.inc.com/scott-mautz/a-2-year-stanford-study-shows-astonishing-productivity-boost-of-working-from-home.html&quot;&gt;Studies report&lt;/a&gt; that working from home has a &lt;strong&gt;huge impact on productivity&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It‚Äôs a benefit the company gives which can &lt;strong&gt;help to hire people&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It &lt;strong&gt;reduces costs&lt;/strong&gt; both for the company and employee.&lt;/li&gt;
&lt;li&gt;Leads to an &lt;strong&gt;improvement of the team communication&lt;/strong&gt; skills.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Happiness&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;Studies report that people who worked remotely were &lt;strong&gt;less likely to leave the company&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Health improvements.&lt;/li&gt;
&lt;li&gt;Less time spent commuting.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;How to start&lt;/h2&gt;
&lt;p&gt;After presenting a few reasons supporting your case, the best thing to do is to propose an experiment to evaluate the results.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Start small.&lt;/strong&gt; I suggest starting with one day a week.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Set a period for the experiment.&lt;/strong&gt; I suggest to never do it for less than 3 months since in the first weeks everyone is still adapting.&lt;/li&gt;
&lt;li&gt;Try to &lt;strong&gt;block a day in the calendar.&lt;/strong&gt; For example, schedule a recurring ‚ÄúRemote Wednesday‚Äù meeting.&lt;/li&gt;
&lt;li&gt;Try to &lt;strong&gt;organize the work to leave remote days free of meetings.&lt;/strong&gt; If you have a creative job, this is a &lt;strong&gt;good day to focus&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Make sure that everyone has a &lt;strong&gt;good pair of headphones&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Make sure that the team has the &lt;strong&gt;right tools to facilitate the communication&lt;/strong&gt; (&lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt;, &lt;a href=&quot;https://teams.microsoft.com/start&quot;&gt;Microsoft Teams&lt;/a&gt;, &lt;a href=&quot;https://www.skype.com/&quot;&gt;Skype&lt;/a&gt;, &lt;a href=&quot;https://zoom.us/&quot;&gt;Zoom&lt;/a&gt; or other).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Don‚Äôt forget to &lt;strong&gt;define a few success metrics and define how you will evaluate them.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you have other technique to start this journey, please share!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>The secret to know Yourself</title>
      <link href="https://gsferreira.com/archive/2019/08/the-secret-to-know-yourself/"/>
      <updated>2019-08-27T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2019/08/the-secret-to-know-yourself/</id>
      <content type="html">&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/the-secret-to-know-yourself-head.png&quot; alt=&quot;Have you ever heard a recording of your voice&quot;&gt;&lt;/p&gt;
&lt;p&gt;Have you ever heard a recording of your voice? You don‚Äôt sound like that, am I right?!&lt;/p&gt;
&lt;p&gt;Everyone has been in that situation, and that is strange, especially because we spend so much time with us. Even so, we sound like a poor imitation.&lt;/p&gt;
&lt;p&gt;It‚Äôs really common to listen to people that seem pretty sure that they know themself. We even find a lot of books about self-knowledge. The world seems to lead us to believe that we need to find ourselfs by meditation and introspection.&lt;/p&gt;
&lt;p&gt;Even if I think that taking the time to reflect is important, I don‚Äôt think that is enough.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The vision that we have about us tend to be highly influenced by our ideals and our dreams.&lt;/strong&gt; Our brain is a specialist in fooling us and uses our wishes to trick us.&lt;/p&gt;
&lt;p&gt;So, what can we do to escape that illusion? We need to see how we act as if we were in an out-of-body experience.&lt;/p&gt;
&lt;p&gt;We can use professional sports as an example. We see athletes recording their training as a performance analysis tool. This is a good tool that top performances use to perfect their craft. &lt;strong&gt;Seeing yourself performing in a given context, can be enlightening.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can follow the example of pro-athletes and record yourself while performing a given task to try to figure out what to improve.&lt;/p&gt;
&lt;p&gt;But, the reality is that when we know that we are &lt;strong&gt;being observed, we start acting differently than we normally do and influence the outcome.&lt;/strong&gt; Similar to the Observer Paradox from quantum mechanics.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Observer paradox: the observer&#39;s paradox refers to a situation in which the phenomenon being observed is unwittingly influenced by the presence of the observer/investigator.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Observer%27s_paradox&quot;&gt;wikipedia.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://factmyth.com/factoids/observing-a-phenomenon-affects-its-outcome/&quot;&gt;factmyth.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you don‚Äôt know this paradox, I highly recommend the following video.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/DfPeprQ7oGc&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;So, if recording yourself can be a good way to lie to yourself, what can you do!?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The secret is Feedback! Ask for feedback!&lt;/strong&gt; I‚Äôve written an &lt;a href=&quot;https://gsferreira.com/archive/2019/07/leading-improvement-through-honest-feedback/&quot;&gt;article that you can find here&lt;/a&gt; about the importance of feedback for improvement. Go ahead and read it. I will wait‚Ä¶&lt;/p&gt;
&lt;p&gt;Reaching out trust worth people that spend a lot of time with you is the easy path. When we are in our day-to-day life, lost in routines, we tend to express our true self and that has an impact on the people that surround us. So, if we do something positive or negative, if we have an annoying or peculiar characteristic, people tend to see it and label you with that specific trait.&lt;/p&gt;
&lt;p&gt;It can be uncomfortable, but, &lt;strong&gt;if you want to know who you are, you need to look inside, but you also need to look to the world and discover the impact that you have in others&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Before we end here, I want to challenge you to a quick challenge that can lead you into this self know journey.&lt;/p&gt;
&lt;p&gt;The challenge:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write down 5 words that you think that describe yourself. 5 things that you think that reflects yourself and that other recall those words when thinking about you.&lt;/li&gt;
&lt;li&gt;Find 5 people and ask them to send you 3 words that describe you.&lt;/li&gt;
&lt;li&gt;Compare the results and see if something that you don‚Äôt expect to emerge from their feedback. Sometimes we have bad surprises, but I prefer to know and do something than keep doing the same.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Go to your email and send a mail to 5 people that you trust them to give honest feedback. If you&#39;re looking to know yourself in a given context try to target people that are part of that given context. If you want to know ‚Äúwho am I as a leader?‚Äù reach out to your team and old team members. If you want to know ‚Äúwho am I as a friend?‚Äù reach out a group of friends important to you. If you want to know you in multiple contexts, just multiply the challenge.&lt;/p&gt;
&lt;p&gt;If you learn something new about yourself, please share!&lt;/p&gt;
&lt;p&gt;Next time you are in a one-on-one meeting, in an interview or in another context where you can have valuable feedback, don&#39;t forget to ask for feedback.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Leading Improvement through Honest Feedback</title>
      <link href="https://gsferreira.com/archive/2019/07/leading-improvement-through-honest-feedback/"/>
      <updated>2019-07-16T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2019/07/leading-improvement-through-honest-feedback/</id>
      <content type="html">&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/leading-improvement-through-honest-feedback-head.png&quot; alt=&quot;if it hurts, do it more often&quot;&gt;&lt;/p&gt;
&lt;p&gt;When was the last time that a waitress asked about your meal and you were really honest?&lt;/p&gt;
&lt;p&gt;Don‚Äôt feel ashamed. I‚Äôve definitively been there. Saying that the meal was good when It was dry or too salty for your taste, is more common than we can think.&lt;/p&gt;
&lt;p&gt;Unfortunately, being honest when something is wrong isn‚Äôt something that we humans tend to feel comfortable about.&lt;/p&gt;
&lt;p&gt;Probably you are asking: why the hell should I be honest and risk to advancing into a difficult conversion?!&lt;/p&gt;
&lt;p&gt;Because &lt;strong&gt;the worst kind of feedback is fake feedback&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Leading improvement&lt;/h2&gt;
&lt;p&gt;Have you ever thought that the restaurant could have done something to improve if you have been sincere? Wouldn‚Äôt you love to have customers telling you what you should do, to delight them?&lt;/p&gt;
&lt;p&gt;The reality is that &lt;strong&gt;without the truth, we can‚Äôt improve.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Empty criticism and snark does no one any good. But genuine, useful, insightful feedback is a priceless gift.&lt;/p&gt;
&lt;p&gt;Seth Godin&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://seths.blog/2014/01/the-feedback-youve-been-waiting-for/&quot;&gt;https://seths.blog/2014/01/the-feedback-youve-been-waiting-for/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Promote feedback&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;When you give good feedback, you are showing kindness&lt;/strong&gt;, even when it‚Äôs not positive feedback. They should see you as a Consultant that doesn‚Äôt send a bill. Next time that you aren‚Äôt sure if you should speak up, remember that in the end, they should thank you for the consideration.&lt;/p&gt;
&lt;p&gt;Obviously that in a few cases you will find fences. Some people prefer to ignore and to resist, but in those cases, just move on. They won‚Äôt be in the business for too long for sure.&lt;/p&gt;
&lt;p&gt;To empower mutual constructive feedback, make sure you &lt;strong&gt;respond to honest feedback with a ‚ÄúThank you‚Äù&lt;/strong&gt;.&lt;br&gt;
If you don‚Äôt assume a defensive posture and you really look grateful, you will be encouraging the behavior.&lt;/p&gt;
&lt;h2&gt;It can be difficult&lt;/h2&gt;
&lt;p&gt;The DevOps community has a mantra with which I agree: ‚Äúif it hurts, do it more often‚Äù. I believe that this applies to feedback also.
It may be uncomfortable to start asking for honest feedback or even more to start giving feedback, especially when isn‚Äôt that good. But, if you do it over and over again, you will see that it will become natural and you will stop overthinking about it.&lt;/p&gt;
&lt;p&gt;It‚Äôs really important not to be ashamed for pointing out negative things, because when you always give ‚ÄúOK answers‚Äù, your honest positive comments will not have an impact.
If you are known as the guy who speaks honestly, you will be taken into consideration.&lt;/p&gt;
&lt;h2&gt;Make it easy&lt;/h2&gt;
&lt;p&gt;Since feedback is so valuable, why do we tend to make so difficult for others to give us feedback?&lt;/p&gt;
&lt;p&gt;Probably I want to tell you how I feel when I‚Äôm using your product, but at the moment when I understand that I need to create a user in a website and fill a 20 field long bug report, you can be sure that I will move on the next time I have an improvement idea.&lt;/p&gt;
&lt;p&gt;So, &lt;strong&gt;please bring to your systems a simple way to collect feedback&lt;/strong&gt;. Anyone should be able to leave you a note in 40 seconds and feel selfless, instead of 5 minutes of swearing and disappointment.
If you are concerned that 40 seconds won‚Äôt be enough to capture all you need to know from the user, I bet that the user will be happier to answer an email with your questions afterward than upfront. At least they know that you have listened. No one wants to speak with a database, specially if nobody cares about it.&lt;/p&gt;
&lt;p&gt;Remember that &lt;strong&gt;a good idea can arise anywhere at any time&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;How to give honest feedback&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Being honest doesn‚Äôt mean being rudely honest.&lt;/strong&gt; No one wants to feel like being part of a Kitchen Nightmares episode, with Chef Gordon Ramsay yelling how incompetent we must be. That‚Äôs not fun.&lt;/p&gt;
&lt;p&gt;There are better ways to deliver feedback. I‚Äôve 5 tips that you can start with:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Be humble.&lt;/li&gt;
&lt;li&gt;Express your feedback as an opinion. For example, saying that the food is ‚ÄúFull of salt‚Äù is different than saying ‚ÄúIs too salty for my taste‚Äù.&lt;/li&gt;
&lt;li&gt;Expose only your top 3 ideas. Don‚Äôt be too nitpicking. Having a ‚Äúshopping list‚Äù of stuff won‚Äôt help.&lt;/li&gt;
&lt;li&gt;Balance positive feedback with negative feedback. When we have something bad to say, we can easily forget to say good things.&lt;/li&gt;
&lt;li&gt;If you have an idea on how to improve, say it!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://randomcrab.com/valuable-feedback/&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/leading-improvement-through-honest-feedback-valuable-feedback.jpg&quot; alt=&quot;Valuable Feedback&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Wrapping up&lt;/h2&gt;
&lt;p&gt;We live in a society that seeks approval in social networks, and that thinks that a ‚ÄúLike‚Äù is a good kind of feedback. This causes an illusion about the impact we have on society. So, next time you see that a given person, service or product has a positive impact on you, don‚Äôt limit yourself to follow them on Facebook or Instagram. Go ahead and send them a message telling how was your experience.&lt;/p&gt;
&lt;p&gt;And if you are providing a service or selling a product, make sure you make it easy to receive feedback and encourage your customer to do it.&lt;/p&gt;
&lt;p&gt;Are you ready to give it a try? I have a challenge for you. In the next 24 hours, make sure you:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Send a message to one of your favorite services, telling them one thing that they can do that would improve your experience. Don‚Äôt forget to tell them to keep up with the good work. üòâ&lt;/li&gt;
&lt;li&gt;Say thanks to someone that positively impacted your life and you know that you never told them.&lt;/li&gt;
&lt;li&gt;Leave your honest feedback to this post bellow üòä&lt;/li&gt;
&lt;/ol&gt;
</content>
    </entry>
    
    <entry>
      <title>Logging gRPC requests using Serilog</title>
      <link href="https://gsferreira.com/archive/2019/04/logging-grpc-requests-using-serilog/"/>
      <updated>2019-04-10T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2019/04/logging-grpc-requests-using-serilog/</id>
      <content type="html">&lt;p&gt;Using a Middleware to log Api Requests in ASP.NET Core is a no brainer.&lt;/p&gt;
&lt;p&gt;If you have given a try to &lt;a href=&quot;https://grpc.io/&quot;&gt;gRPC&lt;/a&gt;, probably you want to follow the same technique and you will wish that the experience was the same.&lt;/p&gt;
&lt;p&gt;I&#39;ve faced this challenge, in order to log the requests to my RPC services and I&#39;ve been looking for a solution where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I can use &lt;a href=&quot;https://serilog.net/&quot;&gt;Serilog&lt;/a&gt; to log the requests&lt;/li&gt;
&lt;li&gt;I know all the requests made to my services&lt;/li&gt;
&lt;li&gt;I know how long each request takes to respond&lt;/li&gt;
&lt;li&gt;I know the response status&lt;/li&gt;
&lt;li&gt;I can correlate each log entry using a Correlation ID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To accomplish that in gRPC, I took advantage of an &lt;strong&gt;Interceptor&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Using an interceptor, you can intercept the invocation of GRPC methods and intercept Unary calls (Request/Response) or Streaming communication.&lt;/p&gt;
&lt;p&gt;In this example, we will be using a &lt;strong&gt;Unary Interceptor&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This example has been done on top of gRPC HelloWorld sample in version 1.19.0&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Step 1: Install Serilog&lt;/h2&gt;
&lt;p&gt;Start by download the Sample code from gRPC. You can find the instructions &lt;a href=&quot;https://grpc.io/docs/quickstart/csharp.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Install in the GreeterServer the serilog package &lt;code&gt;Install-Package Serilog.Sinks.Console -Version 3.1.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I&#39;m using the Console Sink for demonstration proposes. You can easily find tons of sinks like File, Seq, Application Insights, Datadog, etc.&lt;/p&gt;
&lt;p&gt;To enable Serilog, create the logger at the beginning of the GreeterServer &lt;em&gt;Main&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;          Log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Logger &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;LoggerConfiguration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;WriteTo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;CreateLogger&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token range operator&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Step 2: Create the Interceptor&lt;/h2&gt;
&lt;p&gt;In the GreeterServer project create the &lt;em&gt;RequestLoggerInterceptor&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Grpc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Core&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Grpc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Interceptors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Serilog&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Diagnostics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Threading&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Tasks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;GreeterServer&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RequestLoggerInterceptor&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token type-list&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;Interceptor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; MessageTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token string&quot;&gt;&quot;{RequestMethod} responded {StatusCode} in {Elapsed:0.0000} ms&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;Task&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;TResponse&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;UnaryServerHandler&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;TRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TResponse&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServerCallContext&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;UnaryServerMethod&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;TRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TResponse&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; continuation&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; sw &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Stopwatch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;StartNew&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;          &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;UnaryServerHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; continuation&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;          sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;          Log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Information&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;MessageTemplate&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;            context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Method&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;            context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Status&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;StatusCode&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;            sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Elapsed&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TotalMilliseconds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This interceptor is just logging the Status Code for each request and the time used to complete the execution.&lt;/p&gt;
&lt;h2&gt;Step 3: Apply interceptor to the service&lt;/h2&gt;
&lt;p&gt;To take effect, you need to bind the interceptor to the Service you want. To do that, go to the &lt;em&gt;Program.cs&lt;/em&gt; and configure the Server service binding to use the interceptor for the Greeter service.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Grpc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Interceptors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token range operator&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;Server&lt;/span&gt; server &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Server&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      Services &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Greeter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BindService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;GreeterImpl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Intercept&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;RequestLoggerInterceptor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;        Ports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;ServerPort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Port&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ServerCredentials&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Insecure&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Intercept method is an extension method, so don&#39;t forget to use &lt;em&gt;Grpc.Core.Interceptors&lt;/em&gt; namespace.&lt;/p&gt;
&lt;p&gt;If you run the samples now, you will see this as a result.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/logging-grpc-requests-using-serilog-simple-log-line.png&quot; alt=&quot;Log entry&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Step 4: Add Correlation ID&lt;/h2&gt;
&lt;p&gt;If you have multiple services being part of the execution of a particular request, most probably you would take advantage of having a Correlation ID to track the execution of a given request in every service. If you don&#39;t have one, I highly recommend you to do it.&lt;/p&gt;
&lt;p&gt;In this example, we will be sending the Correlation ID as an gRPC request header and change the Interceptor to add it to every log line.&lt;/p&gt;
&lt;p&gt;Let&#39;s start by add the Correlation ID header to the RPC request done by &lt;em&gt;GreeterClient&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; reply &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;SayHello&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;HelloRequest&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; user &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Metadata&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Entry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;X-Correlation-Id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Guid&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NewGuid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;In this example, I&#39;m generating a Guid just for demo purposes.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the interceptor, access to the Correlation ID and push it to Serilog as a property. In this way, every single log entry on that context will have the Correlation Id property available.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Grpc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Core&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Grpc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Interceptors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Serilog&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Diagnostics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Linq&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Threading&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Tasks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;GreeterServer&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RequestLoggerInterceptor&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token type-list&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;Interceptor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; MessageTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token string&quot;&gt;&quot;{RequestMethod} responded {StatusCode} in {Elapsed:0.0000} ms&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;Task&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;TResponse&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;UnaryServerHandler&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;TRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TResponse&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;TRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token class-name&quot;&gt;ServerCallContext&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;UnaryServerMethod&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;TRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TResponse&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; continuation&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; sw &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Stopwatch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;StartNew&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;          &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; correlationId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RequestHeaders&lt;br&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FirstOrDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;h &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; h&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Key&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;X-Correlation-Id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; StringComparison&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;OrdinalIgnoreCase&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;?.&lt;/span&gt;Value&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Serilog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;LogContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;PushProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CorrelationID&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; correlationId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;UnaryServerHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; continuation&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;            sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;            Log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Information&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;MessageTemplate&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;              context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Method&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;              context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Status&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;StatusCode&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;              sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Elapsed&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TotalMilliseconds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To complete the work, we need to configure Serilog to use the Properties pushed to the context.&lt;/p&gt;
&lt;p&gt;Go back to the &lt;em&gt;GreeterServer Program&lt;/em&gt; and change the logger configuration to have a template where you use the Correlation ID and configure the log enrichment with the context properties.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    Log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Logger &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;LoggerConfiguration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Enrich&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromLogContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;WriteTo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token named-parameter punctuation&quot;&gt;outputTemplate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level}] [{CorrelationID}] {Message}{NewLine}{Exception}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;CreateLogger&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Step 5: Profit!&lt;/h2&gt;
&lt;p&gt;In this tutorial, we created a simple gRPC interceptor. Now you have a request log with status codes and timings.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/logging-grpc-requests-using-serilog-simple-log-line-with-correlation-id.png&quot; alt=&quot;Log entry with Correlation ID&quot;&gt;&lt;/p&gt;
&lt;p&gt;Go ahead and give it a try.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Versioning .net Core applications using Cake</title>
      <link href="https://gsferreira.com/archive/2018/06/versioning-net-core-applications-using-cake/"/>
      <updated>2018-06-27T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2018/06/versioning-net-core-applications-using-cake/</id>
      <content type="html">&lt;p&gt;If you are moving to .net Core and you want to implement a versioning strategy in your application, now you have an awesome alternative to the good old fellow &amp;quot;AssemblyInfo&amp;quot;.&lt;/p&gt;
&lt;p&gt;The alternative is the &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build&quot;&gt;&lt;em&gt;Directory.build.props&lt;/em&gt;&lt;/a&gt; file. If you place these file in the root folder that contains your source code, when MSBuild runs will add to every project the properties defined in the &lt;em&gt;Directory.build.props&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In this post, we will see how to quickly setup a solution with multiple projects and use &lt;em&gt;Directory.build.props&lt;/em&gt; with &lt;a href=&quot;http://cakebuild.net/&quot;&gt;Cake&lt;/a&gt; to build and increment the version number.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/versioning-a-net-core-applications-using-cake-directory-build-props.png&quot; alt=&quot;Directory.build.props&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Setup your project&lt;/h2&gt;
&lt;p&gt;Let&#39;s use the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/core/tools/?tabs=netcore2x&quot;&gt;.net Core CLI&lt;/a&gt; to quickly accomplish this task.&lt;/p&gt;
&lt;p&gt;Start by creating a folder in your computer and then open the command line and go to the directory that you just created. Then execute the following commands.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a Solution: &lt;code&gt;dotnet new sln --name DotNetCoreVersioning&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a console application and place it in the &lt;em&gt;src&lt;/em&gt; folder: &lt;code&gt;dotnet new console --name Application --output src\Application&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a class library and place it in the &lt;em&gt;src&lt;/em&gt; folder: &lt;code&gt;dotnet new classlib --name Library --output src\Library&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add the console application to the solution: &lt;code&gt;dotnet sln add .\src\Application\Application.csproj&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add the class library to the solution: &lt;code&gt;dotnet sln add .\src\Library\Library.csproj&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Build it: &lt;code&gt;dotnet build&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you go to the folder you will see a solution file that you can open in Visual Studio.&lt;/p&gt;
&lt;h2&gt;Adding the &lt;em&gt;Directory.build.props&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Now it&#39;s time to add the file that will do the magic.&lt;/p&gt;
&lt;p&gt;You just need to create a file with the name &lt;em&gt;Directory.build.props&lt;/em&gt; inside the &lt;em&gt;src&lt;/em&gt; folder.&lt;/p&gt;
&lt;p&gt;Add it and then copy the following snippet into it.&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Project&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;PropertyGroup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Company&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Empire&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Company&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1.0.1&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;AssemblyTitle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Death Star - Superlaser&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;AssemblyTitle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;PropertyGroup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Project&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you run the &lt;code&gt;dotnet build&lt;/code&gt; command and go to the bin folder, of the console application or the class library, you can see in the DLL details that now the version is 1.0.1.&lt;/p&gt;
&lt;h2&gt;Incrementing the version number.&lt;/h2&gt;
&lt;p&gt;In this example, I will use a simple Cake script to increment the version number.&lt;/p&gt;
&lt;h3&gt;Setup your build script&lt;/h3&gt;
&lt;p&gt;I will explain how to do that manually, but if you are a &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; user I highly recommend that you install the cake extension and use the tools provided by the extension.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install the Cake bootstrapper. You can find &lt;a href=&quot;https://cakebuild.net/docs/tutorials/setting-up-a-new-project&quot;&gt;here&lt;/a&gt; how to do that.&lt;/li&gt;
&lt;li&gt;Create a &lt;em&gt;build.cake&lt;/em&gt; file next to the bootstrapper.&lt;/li&gt;
&lt;li&gt;Add the following snippet to the build.cake.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;¬†&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;///////////////////////////////////////////////////////////////////////////////&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;// ARGUMENTS&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;///////////////////////////////////////////////////////////////////////////////&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Argument&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;target&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; configuration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Argument&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;configuration&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Release&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;///////////////////////////////////////////////////////////////////////////////&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;// TASKS&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;///////////////////////////////////////////////////////////////////////////////&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token function&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Version&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Does&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token function&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Build&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;IsDependentOn&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Version&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Does&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token function&quot;&gt;DotNetCoreBuild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./DotNetCoreVersioning.sln&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token function&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;IsDependentOn&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Build&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token function&quot;&gt;RunTarget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Your build has now two steps and is building your solution using &lt;em&gt;DotNetCoreBuild&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Increment the version number&lt;/h3&gt;
&lt;p&gt;To increment the version number we need to update the &lt;em&gt;Directory.build.props&lt;/em&gt; file.&lt;/p&gt;
&lt;p&gt;Since the &lt;em&gt;props&lt;/em&gt; file is an XML we can use the Cake &lt;a href=&quot;https://cakebuild.net/dsl/xml/&quot;&gt;XML aliases&lt;/a&gt; like XmlPeek and XmlPoke to read and update the version number.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;I recommend you to use the Build Number of your build server to calculate the new version number. In this case, we will read the current version from the file content.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Go ahead and copy the following snippet into the &lt;em&gt;Version&lt;/em&gt; task in your &lt;em&gt;build.cake&lt;/em&gt; file.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; propsFile &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./Directory.build.props&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; readedVersion &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;XmlPeek&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;propsFile&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;//Version&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; currentVersion &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readedVersion&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; semVersion &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;currentVersion&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Major&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; currentVersion&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Minor&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; currentVersion&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Build &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; version &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; semVersion&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token function&quot;&gt;XmlPoke&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;propsFile&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;//Version&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; version&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, we are reading the version property, incrementing the build number and then updating the &lt;em&gt;props&lt;/em&gt; file again.&lt;/p&gt;
&lt;h3&gt;The result&lt;/h3&gt;
&lt;p&gt;Now that our build script is completed, go ahead and run your Cake bootstrapper (&lt;em&gt;build.ps1&lt;/em&gt; or &lt;em&gt;build.sh&lt;/em&gt;) and you will see that the compiled DLLs from all the projects have the version incremented.&lt;/p&gt;
&lt;p&gt;You can use the &lt;em&gt;Directory.build.props&lt;/em&gt; to customize other project properties, not only for versioning.&lt;/p&gt;
&lt;p&gt;Go ahead and give it a try.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Exploring the Docker Container metaphor</title>
      <link href="https://gsferreira.com/archive/2018/03/exploring-the-docker-container-metaphor/"/>
      <updated>2018-03-05T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2018/03/exploring-the-docker-container-metaphor/</id>
      <content type="html">&lt;p&gt;&lt;em&gt;This post is my interpretation of the Container metaphor and how I use it to understand the concepts and explain containers to others.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Containers is one of the hot topics in the Software Development world and Docker is the technology that everyone wants to play with.&lt;/p&gt;
&lt;p&gt;Thanks to this hype, everyone has at least a brief idea of what a container is. The problem is that we can easily be confused about what containers really are and the advantages of it.&lt;/p&gt;
&lt;p&gt;I faced the same problem and, in my case, explore the container metaphor helped me to understand it.&lt;/p&gt;
&lt;h2&gt;So, why containers?&lt;/h2&gt;
&lt;p&gt;As you know, the Docker logo is a blue whale fully loaded with shipping containers, remembering us of a ship. The ship is a key part in this story.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docker.com/&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/exploring-the-docker-container-metaphor-docker.png&quot; alt=&quot;Docker&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Imagine that you have a company in Europe and you want to transport your products to China by sea. So, you can find a ship with the adequate size and load the Ship with your cargo.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Metaphor: In the software world, the ship is your Server.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In a local trading association you find out that other companies are also sending products to China and you all can use a bigger Ship and send your products together to save some money.&lt;/p&gt;
&lt;p&gt;The question is: Should that big Ship carry the smaller boats?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/exploring-the-docker-container-metaphor-ship-of-ships.png&quot; alt=&quot;Ship of Ships&quot;&gt;&lt;/p&gt;
&lt;p&gt;Obviously not! No one would do that!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Metaphor: Here, the big Ship is your server and the smaller ships are virtual machines. In this case, we have multiple Ships with all the capabilities to travel to China, but they are all constrained to the capacity and limitations of the big ship.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If we have a big ship we load the ship with the cargo of every company.&lt;/p&gt;
&lt;p&gt;But, you have to face a few challenges:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How to be sure that the Cargo of a Port Wine company won&#39;t damage or contaminate the Cargo of other company?&lt;/li&gt;
&lt;li&gt;How to isolate the cargo?&lt;/li&gt;
&lt;li&gt;How to be sure that the cargo is inviolated?&lt;/li&gt;
&lt;li&gt;How to make sure that the cargo is being transported in the best conditions (correct temperature for instance)?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Well, you can put the cargo into containers.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Metaphor: In software, you are now loading the Server with containers. Containers will guarantee you that the software is isolated, protected and that a Container will take care what it needs, not the ship. Other benefit is that Containers are immutable so you can be pretty sure that your container won&#39;t be violated.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Obviously you are now in a better situation then having a big Ship carry over small ships. But, &lt;strong&gt;don&#39;t forget that even an empty Container is pretty heavy&lt;/strong&gt;. Heavier then a few boxes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Metaphor: This is a common misconception. The idea that a container is extremely lightweight is dangerous unless you are comparing it to Virtual Machines. In other case you are taking the risk of the other person think that containers are even lighter then running in the bare metal.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A cool thing about Shipping Containers is that they are pretty standard and modular. You can assume that when the ship arrives in China, there will be a Truck that can transport it and that the container can return in a different ship. &lt;strong&gt;Shipping containers are ship agnostic.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Metaphor: That&#39;s another advantage of a container. Containers are pretty standard and without additional effort they can run in any Cloud or Server and be sure that they are self-sufficient.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://unsplash.com/photos/uBe2mknURG4&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/exploring-the-docker-container-metaphor-containers.jpg&quot; alt=&quot;Containers&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Composing&lt;/h2&gt;
&lt;p&gt;How could you be sure that you have two ships loaded in the same way? How to be able to say that they are &amp;quot;equal&amp;quot; in terms of cargo?&lt;/p&gt;
&lt;p&gt;Well, since we can&#39;t 3D print a ship capable of transport this (at least in 2018), you will need to document the process. You need to explain how the ship is setup with all containers, explaining the position of each container, what is the cargo and how the multiple containers are interconnected.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Metaphor: In Docker you use the Docker Compose to accomplish that. Compose is a command that uses a configuration file to know how to build multiple images and how they relate with each other.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;The Economic side&lt;/h2&gt;
&lt;p&gt;What is more expensive?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sending a big ship carrying small ships or containers?
&lt;em&gt;Metaphor: A Server with Virtual Machines or Docker Containers?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Is it better to load the cargo in a repeatable way, right? &lt;em&gt;Metaphor: Docker file and Docker compose are important tools to remove the uncertainty of new deployments.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Wouldn&#39;t be nice to don&#39;t contaminate the cargo of one company because of a problem in other company products? &lt;em&gt;Metaphor: Isolation give you the confidence that your containers are protected. Containers are self-sufficient.&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There&#39;s any concept that I&#39;m missing in this interpertation? If so, go ahead and leave a comment!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>JSON Patch Builder Online</title>
      <link href="https://gsferreira.com/archive/2018/01/json-patch-builder-online/"/>
      <updated>2018-01-08T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2018/01/json-patch-builder-online/</id>
      <content type="html">&lt;p&gt;Do you know the JSON Patch format? The &lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;RFC6902&lt;/a&gt; defines the structure to express a list of operations to apply over a JSON Document.
This format is designed to be the payload of an HTTP PATCH method.&lt;/p&gt;
&lt;p&gt;The format isn&#39;t difficult, you can easily understand the rules and build it manually. But, I confess that sometimes I struggle with it, specially when I&#39;m testing a PATCH to a complex object.
So... &lt;strong&gt;&lt;a href=&quot;https://json-patch-builder-online.github.io/&quot;&gt;I built a Tool to help me.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/json-patch-builder-online.png&quot; alt=&quot;JSON Patch Builder Online&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://json-patch-builder-online.github.io/&quot;&gt;JSON Patch Builder Online&lt;/a&gt;&lt;/strong&gt; is a simple and Open Source tool that you can use to calculate the JSON Patch needed to transform a resource/entity in the resource that you want.&lt;/p&gt;
&lt;p&gt;To accomplish that, I used &lt;a href=&quot;https://github.com/Starcounter-Jack/JSON-Patch&quot;&gt;JSON-Patch&lt;/a&gt;, a Javascript library, to calculate the Patch and &lt;a href=&quot;https://bulma.io/&quot;&gt;BULMA CSS&lt;/a&gt; to have a good looking tool.
I recommend that you go check them.&lt;/p&gt;
&lt;p&gt;If you have something that you want to see in the &lt;strong&gt;&lt;a href=&quot;https://json-patch-builder-online.github.io/&quot;&gt;JSON Patch Builder Online&lt;/a&gt;&lt;/strong&gt;, feel free to open an &lt;a href=&quot;https://github.com/json-patch-builder-online/json-patch-builder-online.github.io/issues&quot;&gt;Issue&lt;/a&gt; or &lt;a href=&quot;https://github.com/json-patch-builder-online/json-patch-builder-online.github.io/&quot;&gt;Contribute&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/json-patch-builder-online/json-patch-builder-online.github.io/&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://json-patch-builder-online.github.io/&quot;&gt;JSON Patch Builder Online&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope that this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Implementing the HTTP Prefer Header with an ASP.NET Core Filter</title>
      <link href="https://gsferreira.com/archive/2017/11/implementing-the-http-prefer-header-with-an-aspnet-core-filter/"/>
      <updated>2017-11-15T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2017/11/implementing-the-http-prefer-header-with-an-aspnet-core-filter/</id>
      <content type="html">&lt;p&gt;Have you heard about &lt;strong&gt;Prefer Header for HTTP&lt;/strong&gt;? The &lt;a href=&quot;https://tools.ietf.org/html/rfc7240&quot;&gt;RFC-7240&lt;/a&gt; defines how this header can be used by a client, in order to request that certain behaviors be employed by a server while processing a request.&lt;/p&gt;
&lt;p&gt;Why does it matter? You probably have consumed API&#39;s where you use the HTTP POST or PUT method to modify a resource and the server returns a complete representation of the resource. In other cases the API only returns the Identifier of the resource created, for example.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What if you want to defer to the client to specify which optional behavior is preferred?&lt;/strong&gt;
That&#39;s why you need to know about the HTTP Prefer Header.&lt;/p&gt;
&lt;p&gt;The RFC specifies a group of Preference Definitions like a preference to indicate that the client prefers the server to respond asynchronously to a response for example, but this post will be focused on the &amp;quot;return=representation&amp;quot; and &amp;quot;return=minimal&amp;quot; preferences.&lt;/p&gt;
&lt;h2&gt;&amp;quot;return=representation&amp;quot;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The &amp;quot;return=representation&amp;quot; preference indicates that the client
prefers that the server include an entity representing the current
state of the resource in the response to a successful request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&amp;quot;return=minimal&amp;quot;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The &amp;quot;return=minimal&amp;quot; preference, on the other hand, indicates that
the client wishes the server to return only a minimal response to a
successful request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This preference is really useful when dealing with replies to a POST, PUT or PATCH request.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The selection of which type of response to return to client have impact on what a client must do after receiving the response.&lt;/strong&gt; Example: by returning a representation of the resource in the response the client won&#39;t need to do an additional GET request.&lt;/p&gt;
&lt;h1&gt;How to implement in ASP.NET Core?&lt;/h1&gt;
&lt;p&gt;One of the first questions that I faced when trying to implement the prefer header was &lt;em&gt;&amp;quot;how to implement it in ASP.NET Core?&amp;quot;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The easy answer would be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do it in your Controller Action. Easy peasy, right?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not so sure my friend!&lt;/p&gt;
&lt;p&gt;Following that approach will be difficult to manage when you face yourself with dozens of Controllers each one with a POST and a PUT. Now you see it... the beauty of the duplicated code :)&lt;/p&gt;
&lt;p&gt;So, what if we write an ASP.NET Core filter?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you don&#39;t know what is a Filter I recommend you to go read &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/mvc/overview/older-versions-1/controllers-and-routing/understanding-action-filters-cs&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you find yourself wondering why don&#39;t create a Middleware, please see this &lt;a href=&quot;https://channel9.msdn.com/Series/aspnetmonsters/ASPNET-Monsters-91-Middleware-vs-Filters&quot;&gt;awesome video&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;In my implementation, I defined that DTOs that can be controlled by the &amp;quot;return=minimal&amp;quot; preference should implement an interface &lt;em&gt;&amp;quot;IIdentifiable&amp;quot;&lt;/em&gt;. That interface specifies the properties that I need to return in the &amp;quot;minimal&amp;quot; version (an Id for instance).&lt;/p&gt;
&lt;p&gt;So, go ahead and create an &lt;em&gt;IIdentifiable&lt;/em&gt; interface and add it to your DTO.&lt;/p&gt;
&lt;h2&gt;The filter&lt;/h2&gt;
&lt;p&gt;I implemented an Action Filter that will only return the full object when the client sends the &lt;em&gt;&amp;quot;return=representation&amp;quot;&lt;/em&gt; preference.&lt;/p&gt;
&lt;p&gt;So the flow is something like:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;POST a new Resource&lt;/li&gt;
&lt;li&gt;Handle the request&lt;/li&gt;
&lt;li&gt;Return an Action Result with a DTO in it&lt;/li&gt;
&lt;li&gt;Catch the response in a filter
&lt;ul&gt;
&lt;li&gt;The Request doesn&#39;t have the Prefer header?&lt;/li&gt;
&lt;li&gt;The Request has the Prefer header without the value &amp;quot;return=representation&amp;quot;?&lt;/li&gt;
&lt;li&gt;If the answer to any of the previous questions is &amp;quot;Yes&amp;quot;, I update the result to a new object with the minimal information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The filter:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/gsferreira/80aa93d12633c0df271a08f6dc2e52ca.js?file=HttpPreferReturnHeaderFilterAttribute.cs&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;em&gt;As you can see I am creating a new IdentifiableDto. That class is just a simple implementation of the IIdentifiable interface. If you prefer, you can just return a dynamic object.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now you can use it in your Controllers like this:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/gsferreira/80aa93d12633c0df271a08f6dc2e52ca.js?file=Controller.cs&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;*Note:&lt;/strong&gt; If you need to do an extra effort to load the resource from the database, probably the Filter approach isn&#39;t the best fit for you.*&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Please don&#39;t name it &quot;Utils&quot;!</title>
      <link href="https://gsferreira.com/archive/2017/09/please-don-t-name-it-utils/"/>
      <updated>2017-09-12T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2017/09/please-don-t-name-it-utils/</id>
      <content type="html">&lt;p&gt;Imagine that you are working on a code base that you are really proud of. Everything is building up together with great quality and you reach the moment where you need to send a mail. Simple task to you for sure.&lt;/p&gt;
&lt;p&gt;You know that eventually you will need to send emails in other points of your application and because you master the DRY principle you decide to write an &lt;em&gt;&amp;quot;Utils&amp;quot;&lt;/em&gt; class.&lt;/p&gt;
&lt;p&gt;Good idea, isn&#39;t it? &lt;strong&gt;NO!!!! Absolutely no!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Why not? What&#39;s wrong with an &lt;em&gt;&amp;quot;Utils&amp;quot;&lt;/em&gt; folder or an Utility class?&lt;/p&gt;
&lt;p&gt;Segregate responsibilities is an important thing, but naming is also important. Readability and discoverability are often underrated.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/please-don-t-name-it-utils-code-sample.png&quot; alt=&quot;Utils code sample&quot;&gt;&lt;/p&gt;
&lt;p&gt;When you create an &lt;em&gt;&amp;quot;Utils&amp;quot;&lt;/em&gt; class you are creating a collection of random stuff. A place where anything can fit and that someone who doesn&#39;t know your project won&#39;t know what can be found inside the &lt;em&gt;&amp;quot;Utils&amp;quot;&lt;/em&gt;. For them, your &lt;em&gt;&amp;quot;Utils&amp;quot;&lt;/em&gt; it&#39;s a kind of magical place where treasures and dragons can be hidden.&lt;/p&gt;
&lt;p&gt;Please don&#39;t feel ashamed by doing that, I have done it in the past.
Phil Karlton once said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are only two hard things in Computer Science: cache invalidation and &lt;strong&gt;naming things&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I prefer a name that doesn&#39;t sounds catchy than a name that doesn&#39;t make sense.&lt;/p&gt;
&lt;p&gt;So if you are typing &lt;em&gt;&amp;quot;Utils&amp;quot;&lt;/em&gt;, please stop and think what the hell will this code do? Then, name it according to that.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write to a Log file? Name it &lt;em&gt;&amp;quot;Logger&amp;quot;&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Send a mail? Name it &lt;em&gt;&amp;quot;MailSender&amp;quot;&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Generate a random message? Name it &lt;em&gt;&amp;quot;MessageGenerator&amp;quot;&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Provide string extensions? Name it &lt;em&gt;&amp;quot;StringExtensions&amp;quot;&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You get it.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Rebuilding SQL Database indexes using Azure Function</title>
      <link href="https://gsferreira.com/archive/2017/07/rebuilding-sql-database-indexes-using-azure-function/"/>
      <updated>2017-07-20T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2017/07/rebuilding-sql-database-indexes-using-azure-function/</id>
      <content type="html">&lt;p&gt;Do you know that index management is under your responsibility and you need to pay attention to how fragmented they are? If you are reading this post, probably you know that (I hope that you didn&#39;t find it in the hard way).&lt;/p&gt;
&lt;p&gt;Azure SQL Database takes care of a lot of maintenance tasks, but keeping your Indexes healthy isn&#39;t one of them.&lt;/p&gt;
&lt;p&gt;Indexes get fragmented and fragmented indexes is a performance killer. The good news is that I can help you dealing with that.&lt;/p&gt;
&lt;h2&gt;Do I have a problem?&lt;/h2&gt;
&lt;p&gt;First let&#39;s analyze your database. Read &lt;a href=&quot;https://blog.sqlauthority.com/2010/01/12/sql-server-fragmentation-detect-fragmentation-and-eliminate-fragmentation/&quot;&gt;this article&lt;/a&gt; to undestand the fragmentation indexs and then execute the following query in your database.&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/gsferreira/fbb3419a367730f53922f0809991d264.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;Scared with the results? If so, keep reading.&lt;/p&gt;
&lt;h2&gt;Azure Function&lt;/h2&gt;
&lt;p&gt;You can find &lt;a href=&quot;https://github.com/gsferreira/AzureFunctionSQLDefrag&quot;&gt;here&lt;/a&gt; the code of an Azure Function to automate the index maintenance of multiple databases.&lt;/p&gt;
&lt;p&gt;The function will run and execute a REBUILD and REORGANIZE for Database Indexs, with a given Threshold.&lt;/p&gt;
&lt;p&gt;By default, the Function is configured to Rebuild indexs with more than 30% of fragmentation and reorganize indexs with more than 3% but you can adjust those limits.&lt;/p&gt;
&lt;p&gt;You can add a Connection String to multiple databases at the Application Settings where the name has the prefix &amp;quot;Defrag.&amp;quot;.&lt;/p&gt;
&lt;p&gt;You can find information of how to configure it in the project readme file.&lt;/p&gt;
&lt;h3&gt;Important Note!!!&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;The default timeout for functions on a Consumption plan is 5 minutes. The value can be increased to 10 minutes max.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you have a big database, the function can stop running during the index maintenance and don&#39;t finish the job.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In that case, you probably want to move to an App Service plan or decompose the function splitting the work by multiple functions. If you want some tips of how to accomplish that, please leave a comment.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.sqlauthority.com/2010/01/12/sql-server-fragmentation-detect-fragmentation-and-eliminate-fragmentation/&quot;&gt;https://blog.sqlauthority.com/2010/01/12/sql-server-fragmentation-detect-fragmentation-and-eliminate-fragmentation/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://geeks.ms/davidjrh/2015/10/08/rebuilding-sql-database-indexes-using-azure-automation/&quot;&gt;https://geeks.ms/davidjrh/2015/10/08/rebuilding-sql-database-indexes-using-azure-automation/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://alexandrebrisebois.wordpress.com/2013/02/06/dont-forget-about-index-maintenance-on-windows-azure-sql-database/&quot;&gt;https://alexandrebrisebois.wordpress.com/2013/02/06/dont-forget-about-index-maintenance-on-windows-azure-sql-database/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.red-gate.com/simple-talk/cloud/cloud-data/azure-sql-database-maintenance/&quot;&gt;https://www.red-gate.com/simple-talk/cloud/cloud-data/azure-sql-database-maintenance/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
      <title>5 reasons to convince your boss to adopt Cake (C# Make)</title>
      <link href="https://gsferreira.com/archive/2017/06/5-reasons-to-convince-your-boss-to-adopt-cake-csharp-make/"/>
      <updated>2017-06-26T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2017/06/5-reasons-to-convince-your-boss-to-adopt-cake-csharp-make/</id>
      <content type="html">&lt;p&gt;Have you taken a look into &lt;a href=&quot;http://cakebuild.net/&quot;&gt;Cake Build&lt;/a&gt;?! It&#39;s awesome, isn&#39;t it?&lt;/p&gt;
&lt;p&gt;Probably you are already convinced, but you are having trouble convincing your boss that it&#39;s worth to give him a chance.&lt;/p&gt;
&lt;p&gt;To help you I give you here five compelling reasons they can&#39;t argue with.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/cake-build-logo.png&quot; alt=&quot;Cake Build&quot;&gt;&lt;/p&gt;
&lt;h1&gt;1. It&#39;s C# ‚ù§&lt;/h1&gt;
&lt;p&gt;If you are working in a .NET shop where C# is the common language, you already have the tools to do the Job and probably isn&#39;t a good idea to adopt a new language.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bus_factor&quot;&gt;BUS Factor&lt;/a&gt;&lt;/strong&gt; is a good metric to illustrate the risk of adopting a new language for a build system.&lt;/p&gt;
&lt;p&gt;Cake scripts are written in C# and you can use all the knowledge that you already have.&lt;/p&gt;
&lt;h1&gt;2. Living form of documentation&lt;/h1&gt;
&lt;p&gt;What is the best way to describe your system? With coded tests. So &lt;strong&gt;what is the best way to describe your build? With code&lt;/strong&gt; for sure!&lt;/p&gt;
&lt;p&gt;As we all know, keeping a word document up-to-date is a painful task that one day someone will forget to update it. So, if you know how to read C#, you can read a script that documents it.&lt;/p&gt;
&lt;p&gt;You also have the bonus of having a &lt;strong&gt;versioned build script&lt;/strong&gt; if you add it to your source control.&lt;/p&gt;
&lt;p&gt;Isn&#39;t powerful to know that in the future you can go back and see how your software was built in the past week?&lt;/p&gt;
&lt;p&gt;Nevertheless, doing this kind of tasks manually shouldn&#39;t be a manual process. &lt;strong&gt;‚ÄúFor loops‚Äù are for computers&lt;/strong&gt; and as programmers we know how to teach them to do it.&lt;/p&gt;
&lt;h1&gt;3. Cross platform&lt;/h1&gt;
&lt;p&gt;With Cake, you can start &lt;strong&gt;building&lt;/strong&gt; your software &lt;strong&gt;in multiple platforms&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If in your team, there are elements working with different operating systems, with Cake &lt;strong&gt;everyone can be working in the same build script&lt;/strong&gt;.&lt;/p&gt;
&lt;h1&gt;4. Agnostic from Build Server&lt;/h1&gt;
&lt;p&gt;With Cake you can easily &lt;strong&gt;move your scripts from one Build system to another&lt;/strong&gt;, without need to completely reconfigure the complete Build.&lt;/p&gt;
&lt;p&gt;The best proof of this: Cake is building Cake with Cake in multiple build servers (&lt;a href=&quot;https://github.com/cake-build/cake&quot;&gt;see it in the Continuous integration section&lt;/a&gt;).&lt;/p&gt;
&lt;h1&gt;5. Healthy community&lt;/h1&gt;
&lt;p&gt;The Cake community is really active.&lt;/p&gt;
&lt;p&gt;Cake has a huge list of Addins delivered and maintained by the community.&lt;/p&gt;
&lt;p&gt;Also, since 2016 Cake is part of the .NET Foundation.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;I hope that this helps you (and convinced your boss).&lt;/em&gt;&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Tuga IT - Build Automation? It&#39;s a piece of Cake</title>
      <link href="https://gsferreira.com/archive/2017/05/tugait-build-automation-its-a-piece-of-cake/"/>
      <updated>2017-05-23T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2017/05/tugait-build-automation-its-a-piece-of-cake/</id>
      <content type="html">&lt;p&gt;It was a huge privilege to share my experience with &lt;a href=&quot;http://cakebuild.net/&quot;&gt;Cake Build&lt;/a&gt; at &lt;a href=&quot;http://tugait.pt/2017/&quot;&gt;Tuga IT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can find here the slides and demos that have been used, as well as some references related to the theme.&lt;/p&gt;
&lt;p&gt;If you have any doubt please leave a comment below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slides: &lt;a href=&quot;https://docs.com/gsferreira/7912/build-automation-its-a-piece-of-cake&quot;&gt;docs.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Demos: &lt;a href=&quot;https://github.com/gsferreira/cakedemo&quot;&gt;GitHub - CakeDemo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tugait.pt/2017/sessions/build-automation-its-a-piece-of-cake/&quot;&gt;Session description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cakebuild.net/&quot;&gt;Cake Build website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cake-build/cake&quot;&gt;Cake Build Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hanselminutes.com/548/cake-build-a-c-make-cross-platform-build-automation-system-with-patrik-svensson&quot;&gt;Hanselminutes Poadcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://radiotfs.com/Show/126/CakeByDevsForDevs&quot;&gt;Radio TFS Poadcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.dotnetrocks.com/?show=1321&quot;&gt;.NET Rocks Poadcast - Understanding Cake with Gary Ewan Park&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cake-build/frosting&quot;&gt;Cake Frosting Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
      <title>Adding Custom Arguments to Topshelf</title>
      <link href="https://gsferreira.com/archive/2016/12/adding-custom-arguments-to-topshelf/"/>
      <updated>2016-12-07T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2016/12/adding-custom-arguments-to-topshelf/</id>
      <content type="html">&lt;p&gt;&lt;a href=&quot;http://topshelf-project.com/&quot;&gt;Topshelf&lt;/a&gt; is an amazing framework that let you easily host and build Windows services.&lt;/p&gt;
&lt;p&gt;Topshelf is really extensible, but recently I struggled to find how to configure a custom argument to the service.&lt;/p&gt;
&lt;p&gt;This post is simple tip to help you create custom arguments to a &lt;a href=&quot;http://topshelf-project.com/&quot;&gt;Topshelf&lt;/a&gt; service and use it in the command line.&lt;/p&gt;
&lt;p&gt;This can be accomplished simply using the Host Configurations.&lt;/p&gt;
&lt;p&gt;If you use the method &lt;em&gt;&amp;quot;AddCommandLineDefinition&amp;quot;&lt;/em&gt; you will be able to specify the name of your argument (case sensitive) and how you want to use it.&lt;/p&gt;
&lt;p&gt;You can find here a simple example.&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/gsferreira/615526c3b10fbefcc49caaa4dafed57e.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;Then you can execute your service sending your argument as you can see in the following example (command line invoke).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	.\TopShelfCustomArgs.exe run -path:&amp;quot;c:\temp&amp;quot; -frequency:2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Create a Web Deployment Package with Cake Build</title>
      <link href="https://gsferreira.com/archive/2016/11/create-a-web-deployment-package-with-cake-build-copy/"/>
      <updated>2016-11-04T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2016/11/create-a-web-deployment-package-with-cake-build-copy/</id>
      <content type="html">&lt;p&gt;This is simple tip to help you create Web Deployment Packages with &lt;a href=&quot;http://cakebuild.net/&quot;&gt;Cake&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have a ASP.NET project and you want to create a Web Deployment package using Cake, you just need to use the MSBUILD Command with the right arguments.&lt;/p&gt;
&lt;p&gt;Feel free to copy the following command and paste it in a Task from your Cake file.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;		&lt;span class=&quot;token function&quot;&gt;MSBuild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;PROJECT_NAME.csproj&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; settings &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br&gt;			settings&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;SetConfiguration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;configuration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;UseToolVersion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;MSBuildToolVersion&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;VS2015&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithTarget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Package&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;VisualStudioVersion&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;14.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;PackageLocation&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; packageDir&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;PackageTempRootDir&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here an example of a complete script (&lt;em&gt;build.cake&lt;/em&gt;).&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Argument&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;target&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; configuration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Argument&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;configuration&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Release&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; packageDir &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;MakeAbsolute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Directory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./package&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token function&quot;&gt;Information&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;BUILD DIR:&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; packageDir&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token function&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Does&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;br&gt;		&lt;span class=&quot;token function&quot;&gt;MSBuild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;PROJECT_NAME.csproj&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; settings &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br&gt;			settings&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;SetConfiguration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;configuration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;UseToolVersion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;MSBuildToolVersion&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;VS2015&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithTarget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Package&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;VisualStudioVersion&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;14.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;PackageLocation&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; packageDir&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;PackageTempRootDir&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token function&quot;&gt;RunTarget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>NetPonto - Como construir software altamente eficiente com CQRS</title>
      <link href="https://gsferreira.com/archive/2016/09/pt-netponto-como-construir-software-altamente-eficiente-com-cqrs/"/>
      <updated>2016-09-19T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2016/09/pt-netponto-como-construir-software-altamente-eficiente-com-cqrs/</id>
      <content type="html">&lt;p&gt;Esta semana tive a oportunidade de falar um pouco sobre a minha experi√™ncia com CQRS na Comunidade NetPonto.&lt;/p&gt;
&lt;p&gt;Se n√£o tiveste a oportunidade de assistir, coloco aqui os slides, o v√≠deo da sess√£o, bem como algumas refer√™ncias sobre o tema.&lt;/p&gt;
&lt;p&gt;Alguma d√∫vida que tenhas, deixa um coment√°rio.&lt;/p&gt;
&lt;p&gt;Video: &lt;a href=&quot;https://youtu.be/pM8GycDZji4?t=5614&quot;&gt;Youtube&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Slides: &lt;a href=&quot;http://www.slideshare.net/GuilhermeFerreira114/como-construir-software-altamente-eficiente-com-cqrs&quot;&gt;SlideShare&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Refer√™ncias:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/jj554200.aspx&quot;&gt;CQRS Journey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=JHGkaShoyNs&quot;&gt;Greg Young - CQRS and Event Sourcing - Code on the Beach 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dotnetrocks.com/?show=639&quot;&gt;.NET Rocks - Udi Dahan Clarifies CQRS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dotnetrocks.com/?show=1044&quot;&gt;.NET Rocks - CQRS Update with Udi Dahan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dotnetrocks.com/?show=820&quot;&gt;.NET Rocks - Udi Dahan Talks CQRS, Agile and More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lostechies.com/jimmybogard/2012/06/26/eventual-consistency-cqrs-and-interaction-design/&quot;&gt;Eventual consistency, CQRS and interaction design - LosTechies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lostechies.com/jimmybogard/2016/06/01/cqrs-and-rest-the-perfect-match&quot;&gt;CQRS and REST: the perfect match - LosTechies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://martinfowler.com/bliki/CQRS.html&quot;&gt;CQRS - Martin Fowler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cqrs.files.wordpress.com/2010/11/cqrs_documents.pdf&quot;&gt;CQRS Documents by Greg Young&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/pt-netponto-como-construir-software-altamente-eficiente-com-cqrs.jpg&quot; alt=&quot;netponto 20160919&quot;&gt;&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Azure WebJobs dependency injection with Unity</title>
      <link href="https://gsferreira.com/archive/2016/08/azure-webjobs-dependency-injection-with-unity/"/>
      <updated>2016-08-08T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2016/08/azure-webjobs-dependency-injection-with-unity/</id>
      <content type="html">&lt;p&gt;In the early days of &lt;strong&gt;Azure WebJobs&lt;/strong&gt; use &lt;strong&gt;Dependency Injection&lt;/strong&gt; was a little bit tricky because the Triggered methods were only static methods.&lt;/p&gt;
&lt;p&gt;Since the WebJobs SDK 1.0.1 you are no longer limited to static methods and that can change how you approach Dependency Injection on WebJobs.&lt;/p&gt;
&lt;p&gt;In this blog post I will show how you can use &lt;strong&gt;&lt;a href=&quot;https://github.com/unitycontainer/unity&quot;&gt;Unity&lt;/a&gt;&lt;/strong&gt; to inject dependencies into your WebJobs.&lt;/p&gt;
&lt;h2&gt;Setup dependency injection&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;In this post I&#39;m assuming you already know how to set up a &lt;a href=&quot;https://azure.microsoft.com/en-gb/documentation/articles/websites-dotnet-webjobs-sdk-get-started/&quot;&gt;WebJob&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The first step is to install the Unity Package in your project.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	Install-Package Unity
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, we will need to implement the &lt;strong&gt;IJobActivator&lt;/strong&gt; Interface, that accepts a Unity container. Here, we will provide the capabilitie of resolve the Instances using the Unity container.&lt;/p&gt;
&lt;p&gt;Let&#39;s name the class as &lt;strong&gt;&amp;quot;UnityJobActivator&amp;quot;&lt;/strong&gt; and fill it with the following code:&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;UnityJobActivator&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token type-list&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;IJobActivator&lt;/span&gt;&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IUnityContainer&lt;/span&gt; _container&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;UnityJobActivator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IUnityContainer&lt;/span&gt; container&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;			_container &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; container&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;CreateInstance&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; _container&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;Resolve&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, the &lt;strong&gt;UnityJobActivator&lt;/strong&gt; receives in the constructor the Unity Container. Now let&#39;s setup the container.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I like to use a Unity Configuration Class to organize my Unity configurations.&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;UnityConfig&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Lazy&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;IUnityContainer&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; container &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Lazy&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;IUnityContainer&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; container &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;UnityContainer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token function&quot;&gt;RegisterTypes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;container&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; container&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;IUnityContainer&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetConfiguredContainer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; container&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Value&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;RegisterTypes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IUnityContainer&lt;/span&gt; container&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;			container&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;IMailService&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; MailService&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;HierarchicalLifetimeManager&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have the container defined, we can specify the &lt;strong&gt;JobActivator&lt;/strong&gt; that the WebJob should use.&lt;/p&gt;
&lt;p&gt;It can be accomplished using the Job Host Configuration (this is done in &lt;em&gt;Program.cs&lt;/em&gt; in the main method), as you can see in the following code:&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token class-name&quot;&gt;JobHostConfiguration&lt;/span&gt; config &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;JobHostConfiguration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;		JobActivator &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;UnityJobActivator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;UnityConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetConfiguredContainer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; host &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;JobHost&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;	host&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;RunAndBlock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, open your functions, transform them in non static methods and receive the parameter of the type you want in the constructor.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Functions&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IMailService&lt;/span&gt; _mailService&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IMailService&lt;/span&gt; mailService&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;			_mailService &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mailService&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ProcessQueueMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token attribute&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;QueueTrigger&lt;/span&gt;&lt;span class=&quot;token attribute-arguments&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;queue&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextWriter&lt;/span&gt; log&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;			_mailService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;			log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I hope that this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>The shining new C# Scripting API</title>
      <link href="https://gsferreira.com/archive/2016/02/the-shining-new-csharp-scripting-api/"/>
      <updated>2016-02-03T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2016/02/the-shining-new-csharp-scripting-api/</id>
      <content type="html">&lt;p&gt;&lt;strong&gt;Say hello to the new Scripting Language: C#!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since the first days the .NET platform lacks scripting capabilities compared to dynamic languages like JavaScript or Ruby, but those days are over.&lt;/p&gt;
&lt;p&gt;Why this is awesome?! If you are familiar with the capabilities that VBA brings the Office users and how many &amp;quot;Excel VBA Programming&amp;quot; books were sold to non developers, you will understand why.
And it&#39;s &lt;a href=&quot;https://github.com/dotnet/roslyn/tree/master/src/Scripting&quot;&gt;open source&lt;/a&gt;!!!&lt;/p&gt;
&lt;p&gt;In the past few years we have been following the growing of the new .NET Compiler, commonly known as Roslyn.&lt;/p&gt;
&lt;p&gt;One of the great features of Roslyn is the Scripting API. The scripting API can enable applications to evaluate code at runtime providing the API to implement an excellent scripting experience.&lt;/p&gt;
&lt;p&gt;In December Microsoft finally released the Roslyn version 1.1.1 (stable version) in nuget that includes the Scripting API (that has been removed from Roslyn 1.0 release by the team).&lt;/p&gt;
&lt;p&gt;Here you can find some examples of how to use the scripting API and what you can do with it.&lt;/p&gt;
&lt;h2&gt;How to start&lt;/h2&gt;
&lt;p&gt;Install the nuget Scripting package (&lt;a href=&quot;http://www.nuget.org/packages/Microsoft.CodeAnalysis.CSharp.Scripting/&quot;&gt;Microsoft.CodeAnalysis.CSharp.Scripting&lt;/a&gt;) in your project.&lt;/p&gt;
&lt;p&gt;In the following example I used the version 1.1.1.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	Install-Package Microsoft.CodeAnalysis.CSharp.Scripting -Version 1.1.1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Expression evaluation&lt;/h2&gt;
&lt;p&gt;Evaluate the result of an C# expression.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;object&lt;/span&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	CSharpScript&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;EvaluateAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;System.DateTime.Today.Year&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ContinueWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	Assert&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AreEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DateTime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Today&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Year&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Expression evaluation with strong type&lt;/h2&gt;
&lt;p&gt;Evaluate an expression with an expected result type.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    CSharpScript&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;EvaluateAsync&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;100 * 2&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ContinueWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    Assert&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AreEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Evaluation with parameters&lt;/h2&gt;
&lt;p&gt;Send parameters to the expression and use them in the script logic.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Globals&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt; NumberOfStudents&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt; StudentsPerClass&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; globals &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Globals&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; NumberOfStudents &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; StudentsPerClass &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    CSharpScript&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;EvaluateAsync&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;NumberOfStudents/StudentsPerClass&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token named-parameter punctuation&quot;&gt;globals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; globals&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    	&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ContinueWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	Assert&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AreEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;globals&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;NumberOfStudents &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; globals&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;StudentsPerClass&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Build a script and run it multiple times&lt;/h2&gt;
&lt;p&gt;The scripting API enables you to create an expression and then use it multiple times, removing the compile time of the remaining evaluations.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; script &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; CSharpScript&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;decimal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;NumberOfStudents/StudentsPerClass&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token named-parameter punctuation&quot;&gt;globalsType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token type-expression class-name&quot;&gt;Globals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	script&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Compile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;    	script&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;RunAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Globals&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; NumberOfStudents &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; StudentsPerClass &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ContinueWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br&gt;				Assert&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AreEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ReturnValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;p&gt;The script can use references to other assemblies with a simple instruction.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Empty&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	CSharpScript&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;EvaluateAsync&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;System.Configuration.ConfigurationManager.AppSettings[\&quot;MyValue\&quot;].ToString()&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    ScriptOptions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Default&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithReferences&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token type-expression class-name&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Configuration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ConfigurationManager&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Assembly&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ContinueWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	Assert&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AreEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ConfigurationManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;AppSettings&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;MyValue&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Imports&lt;/h2&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    CSharpScript&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;EvaluateAsync&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;DateTime.Today.Year&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    ScriptOptions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Default&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithImports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;System&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    	&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ContinueWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	Assert&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AreEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DateTime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Today&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Year&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Dynamic Support&lt;/h2&gt;
&lt;p&gt;To use dynamic objects in scripts we need to add a reference to the &lt;em&gt;System.Code&lt;/em&gt;, &lt;em&gt;Microsoft.CSharp&lt;/em&gt; and &lt;em&gt;System.Dynamic&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	CSharpScript&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;EvaluateAsync&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;@&quot;&lt;br&gt;		dynamic value = 30;&lt;br&gt;    	return value;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	ScriptOptions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Default&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithImports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;System.Dynamic&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AddReferences&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br&gt;			Assembly&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetAssembly&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token type-expression class-name&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Dynamic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DynamicObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// System.Code&lt;/span&gt;&lt;br&gt;			Assembly&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetAssembly&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token type-expression class-name&quot;&gt;Microsoft&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CSharp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RuntimeBinder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CSharpArgumentInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// Microsoft.CSharp&lt;/span&gt;&lt;br&gt;			Assembly&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetAssembly&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token type-expression class-name&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Dynamic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ExpandoObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// System.Dynamic&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ContinueWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	Assert&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AreEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Access to script variables&lt;/h2&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; globals &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Globals&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; NumberOfStudents &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; StudentsPerClass &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token class-name&quot;&gt;ScriptState&lt;/span&gt; state &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	CSharpScript&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;RunAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;@&quot;&lt;br&gt;    	bool shouldOpenClass = NumberOfStudents &gt;= StudentsPerClass;&lt;br&gt;		int numberOfClasses = NumberOfStudents/StudentsPerClass;&lt;br&gt;	&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token named-parameter punctuation&quot;&gt;globals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; globals&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ContinueWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; state &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	Assert&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AreEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetVariable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;shouldOpenClass&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    Assert&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AreEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetVariable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;numberOfClasses&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Those are just a few examples and I recommend you check out the &lt;a href=&quot;https://github.com/dotnet/roslyn&quot;&gt;Roslyn Github Repository&lt;/a&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Is CQRS too complicated? No!</title>
      <link href="https://gsferreira.com/archive/2015/11/is-cqrs-too-complicated-no/"/>
      <updated>2015-11-09T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/11/is-cqrs-too-complicated-no/</id>
      <content type="html">&lt;p&gt;How do you feel after reading a few articles about CQRS (Command Query Responsibility Segregation)? Confused?!&lt;/p&gt;
&lt;p&gt;The good news is that&#39;s not your problem.&lt;/p&gt;
&lt;p&gt;CQRS is a simple concept, but usually is presented side by side with other patterns creating the perception that CQRS requires a ton of elements to work.&lt;/p&gt;
&lt;p&gt;This post pretends to demonstrate that CQRS can be a simple concept that can evolve according to your needs.&lt;/p&gt;
&lt;h2&gt;So, what is CQRS?&lt;/h2&gt;
&lt;p&gt;The roots of CQRS are based on &lt;a href=&quot;https://en.wikipedia.org/wiki/Command%E2%80%93query_separation&quot;&gt;Command-query separation (CQS)&lt;/a&gt; a principle created by &lt;a href=&quot;https://en.wikipedia.org/wiki/Bertrand_Meyer&quot;&gt;Bertrand Meyer&lt;/a&gt; during the development of Eiffel programming language.&lt;/p&gt;
&lt;p&gt;Meyer states that &lt;em&gt;&amp;quot;Asking a question should not change the answer&amp;quot;&lt;/em&gt; and that&#39;s the foundation of CQRS.&lt;/p&gt;
&lt;p&gt;We can conclude from that statement that a command is any method that creates, update or delete data, and a query is any method that returns data.&lt;/p&gt;
&lt;p&gt;CQRS is an evolution of CQS, going further with the initial concept and stating that Read and Write models should be distinct.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CQRS is simply that&lt;/strong&gt;, is the segregation of two main responsibilities, the responsibility of read data and the responsibility of mutate data.&lt;/p&gt;
&lt;p&gt;Don&#39;t you recognize this principles? &amp;quot;Denormalization&amp;quot;, cache systems, read-optimized databases and others, are proof that the industry is already thinking in the problems CQRS want&#39;s to solve.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/is-cqrs-too-complicated-no-diagram.png&quot; alt=&quot;Diagram CQRS&quot;&gt;&lt;/p&gt;
&lt;p&gt;It&#39;s important to say that there&#39;s nothing in CQRS saying that we should use Event Sourcing, Service Bus or another element to implement CQRS.
Those patterns or technologies are usually presented with CQRS, adding a new layer of complexity to CQRS.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nothing about CQRS says ‚Äúyou shalt use NServiceBus‚Äù. It‚Äôs just not there. You‚Äôre merely separating infrastructure between handling commands and queries, but the¬†how¬†is quite varied.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://lostechies.com/jimmybogard/2012/08/22/busting-some-cqrs-myths/&quot;&gt;Jimmy Bogard&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;CQRS Benefits&lt;/h2&gt;
&lt;p&gt;*All the following benefits are capabilities that CQRS gives you, but &lt;strong&gt;they aren&#39;t required to implement CQRS*&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Simple Queries&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Because the Read model is different from the Write model, it&#39;s possible to create simpler queries and with better performance. If the Read and the Write model are shared, you will constrain the Queries to the Write structure.&lt;/p&gt;
&lt;p&gt;The system will also benefit of a thinner Read layer.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simple code is fast code&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://udidahan.com/2009/12/09/clarified-cqrs/&quot;&gt;Udi Dahan&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Separate data store&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since the Read model is separate, you are able to segregate the database, querying a non relational database optimized for queries.&lt;/p&gt;
&lt;p&gt;That will lead us to concepts like Eventual Consistency or Event Sourcing, but it&#39;s important to say that CQRS doesn&#39;t require this, he just enables the capability.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It&#39;s perfectly possible to implement CQRS using the same data store.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Event sourcing is a completely orthogonal concept to CQRS. While they fit well together, doing CQRS does not require event sourcing, and doing event sourcing does not automatically mean we‚Äôre doing CQRS.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://lostechies.com/jimmybogard/2012/08/22/busting-some-cqrs-myths/&quot;&gt;Jimmy Bogard&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Queued workload&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Commands can be processed using a queue, enabling an asynchronous command processing, what can be useful to deal with complex processing or manage the system load.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Segregate load&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Typically the number of queries in a system is much higher than the number of commands. So, why should both be based on the same technologies?&lt;/p&gt;
&lt;p&gt;CQRS enables the segregation of the Load, with the possibility of use a different host for each part of system.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The largest possible benefit though is that it recognizes that their are different architectural properties when dealing with commands and queries ‚Ä¶ for example it allows us to host the two services differently eg: we can host the read service on 25 servers and the write service on two&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://codebetter.com/gregyoung/2010/02/16/cqrs-task-based-uis-event-sourcing-agh/&quot;&gt;Greg Young&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Challenges&lt;/h2&gt;
&lt;p&gt;CQRS isn&#39;t just benefits. CQRS implies complexity and a new mindset when using it.&lt;/p&gt;
&lt;p&gt;Usually we are formatted to think in CRUD operations, but with CQRS we&#39;re led to a Task-based system. We need to rethink the UI to be based on tasks and to deal with the eventual consistency (if we need it).&lt;/p&gt;
&lt;p&gt;I can&#39;t say that CQRS fits all the cases or is a tool that you should use always. What I can say is that&#39;s an important tool to have in mind when dealing with some complex problems.&lt;/p&gt;
&lt;p&gt;It&#39;s important to remember that you should start simple and CQRS enables you to adjust and evolve if you need it.&lt;/p&gt;
&lt;p&gt;Don&#39;t try to do all upfront.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Use T4 as email template in 6 steps</title>
      <link href="https://gsferreira.com/archive/2015/10/use-t4-as-email-template-in-6-steps/"/>
      <updated>2015-10-23T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/10/use-t4-as-email-template-in-6-steps/</id>
      <content type="html">&lt;p&gt;When you want to send emails from .net applications how do you do it?&lt;/p&gt;
&lt;p&gt;Do you create an instance of StringBuilder and start adding texts?!&lt;/p&gt;
&lt;p&gt;And when you want to format the body as HTML? How do you do it?! A bigger string?!&lt;/p&gt;
&lt;p&gt;And if you could write your templates as plain text and still be capable to inject values like names, dates or other values?
The good news is that you can and you have a good old friend to help you: &lt;strong&gt;T4 Templates&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let&#39;s see how to do it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Open your project and add a template&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Right click in your project and go to the option &amp;quot;Add &amp;gt; New Item&amp;quot;, select the &amp;quot;Runtime Text Template&amp;quot; and name it &lt;strong&gt;(&amp;quot;WelcomeMail.tt&amp;quot; for example)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/use-t4-as-email-template-in-6-steps-create-t4-template.png&quot; alt=&quot;Create T4 Templates&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Create your text template&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Open the template (&lt;strong&gt;.tt file&lt;/strong&gt;) and write your email with all the HTML formatting that you want.
&lt;em&gt;Find an Html Mail template example &lt;a href=&quot;https://github.com/leemunroe/responsive-html-email-template&quot;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;#@&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;C#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;#@&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;assembly&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;System.Core&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;#@&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;import&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token attr-name&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;System.Linq&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;#@&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;System.Text&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;#@&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;import&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token attr-name&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;System.Collections.Generic&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;token doctype&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;http://www.w3.org/1999/xhtml&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;http-equiv&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Content-Type&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text/html; charset=utf-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;viewport&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;width=device-width, initial-scale=1.0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token style-attr language-css&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;&lt;br&gt;    &lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&quot;&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;-webkit-text-size-adjust&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;-ms-text-size-adjust&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Hello!&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      Lorem ipsum dolor sit amet, congue appareat cum ne. Sit postea mediocrem&lt;br&gt;      an, erat dissentiet est an. Eu est eius veri assum, et nam sonet molestiae&lt;br&gt;      urbanitas. Cu minim cetero nam, utamur accumsan ius in. Est et sint&lt;br&gt;      quaestio, cu his primis invenire rationibus.&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      Cibo senserit mnesarchum qui te, sonet ceteros evertitur ad ius, an eam&lt;br&gt;      autem mediocrem scribentur. In esse vero sapientem eos, modus consequuntur&lt;br&gt;      sit ei, ius et sale fabulas. Te populo commodo gubergren sed, pri autem&lt;br&gt;      discere in, accumsan antiopam an usu. Per viris veniam prompta et. In est&lt;br&gt;      quas virtute, mea accumsan invidunt id, usu ad cibo justo imperdiet.&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3. Create variables to use into the template&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First you need to create a partial class for the T4 template that you created in the step 2.&lt;/p&gt;
&lt;p&gt;In your partial add a property for each value that you want to inject into the template (destination email or signature for example).&lt;/p&gt;
&lt;p&gt;Create a constructor to initialize the properties that you have created.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Net&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Mail&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;MailT4Template&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WelcomeMail&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;MailAddress&lt;/span&gt; To &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;WelcomeMail&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MailAddress&lt;/span&gt; to&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;				&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;To &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; to&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;4. Adapt the template to use the injected values&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Just open a C# block code with the tags &lt;strong&gt;&amp;lt;#&lt;/strong&gt; and &lt;strong&gt;#&amp;gt;&lt;/strong&gt; and use the equal operator to get the variable value.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Hello &amp;lt;#= To.DisplayName #&gt;!&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;5. Transform the text template&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Invoke the template with the parameters to get the transformed text.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; to &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;MailAddress&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;luke@starwars.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Luke&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token class-name&quot;&gt;WelcomeMail&lt;/span&gt; mailTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;WelcomeMail&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;to&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;	mailTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;TransformText&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;6. Compose your email&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use the transformed text and send the email.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;MailAddress&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;mail@mail.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; to &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;MailAddress&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;luke@starwars.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Luke&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token class-name&quot;&gt;WelcomeMail&lt;/span&gt; mailTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;WelcomeMail&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;to&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;	&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; mail &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;MailMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; to&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; client &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;SmtpClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Port &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;587&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DeliveryMethod &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; SmtpDeliveryMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Network&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;UseDefaultCredentials &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;EnableSsl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Credentials &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;NetworkCredential&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;admin@mail.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;UseTheForce#&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Host &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mail.mail.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Subject &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;This is a welcom email.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;IsBodyHtml &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mailTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;TransformText&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mail&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I hope that this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Using Trello to manage your Wine Cellar</title>
      <link href="https://gsferreira.com/archive/2015/10/using-trello-to-manage-your-wine-cellar/"/>
      <updated>2015-10-09T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/10/using-trello-to-manage-your-wine-cellar/</id>
      <content type="html">&lt;p&gt;Do you have a wine cellar at home?!&lt;/p&gt;
&lt;p&gt;Nothing too big, but the sufficient number of bottles to lose control?!&lt;/p&gt;
&lt;p&gt;Do you really know what you have in your cellar?&lt;/p&gt;
&lt;p&gt;This post wants to help you solve those problems, and manage your home cellar with an amazing and free tool.&lt;/p&gt;
&lt;p&gt;As a good Portuguese, I have a small wine cellar at home, where I store the excellent wines that we produce at Portugal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/using-trello-to-manage-your-wine-cellar-cellar1.jpg&quot; alt=&quot;Wine botle&quot;&gt;&lt;/p&gt;
&lt;p&gt;I don&#39;t have many wine bottles, but I struggled with some questions that I can&#39;t answer:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When I go to the supermarket, how do I know if I need to buy white or red wine?&lt;/li&gt;
&lt;li&gt;How to remember to buy a specific wine?&lt;/li&gt;
&lt;li&gt;Which are the oldest bottles?&lt;/li&gt;
&lt;li&gt;How to choose a bottle?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The conclusion was simple, &lt;strong&gt;I need a system to manage it&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As you probably know, I&#39;m a huge fan of Trello and I trusted him to do the job.
If you don&#39;t know &lt;a href=&quot;https://trello.com/&quot;&gt;Trello.com&lt;/a&gt; you have here a description:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;&lt;a href=&quot;https://trello.com/&quot;&gt;Trello.com&lt;/a&gt; is a collaboration tool that organizes your projects into boards. In one glance, Trello tells you what&#39;s being worked on, who&#39;s working on what, and where something is in a proces&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;How I did it?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I brought some &lt;strong&gt;stickers, where I wrote letters&lt;/strong&gt; to name the columns &lt;strong&gt;and numbers&lt;/strong&gt; to stick in the rows.&lt;/p&gt;
&lt;p&gt;Now I can organize the bottles with the combination, for instance A1, C6, etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/using-trello-to-manage-your-wine-cellar-cellar2.jpg&quot; alt=&quot;Wine cellar&quot;&gt;&lt;/p&gt;
&lt;p&gt;Then I created a &lt;strong&gt;Trello board&lt;/strong&gt; for my wine cellar where I added &lt;strong&gt;4 lists&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;To Buy:&lt;/strong&gt; Where I add a card for each bottle that I want/need to buy;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;White Wine:&lt;/strong&gt; The bottles of White Wine;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Red Wine:&lt;/strong&gt; The bottles of Red Wine;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Port Wine:&lt;/strong&gt; As a good Portuguese and as a Douro and Oporto lover, I have some bottles of Port Wine.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can add more columns according to the Wine or another alcoholic drinks that you have.&lt;/p&gt;
&lt;p&gt;Then I created a &lt;strong&gt;card for each bottle&lt;/strong&gt;. I named the card &lt;strong&gt;with the bottle name and the slot&lt;/strong&gt; where I stored the wine.
For example: &amp;quot;Kopke, Douro 2012 - E9&amp;quot; where &amp;quot;Kopke, Douro 2012&amp;quot; stands for the name and the region of the wine and &amp;quot;E9&amp;quot; stands for the slot where the bottle is.;&lt;/p&gt;
&lt;p&gt;In each card you can also place a photo to identify the bottle if you want.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/using-trello-to-manage-your-wine-cellar-trello-1.png&quot; alt=&quot;Board&quot;&gt;&lt;/p&gt;
&lt;p&gt;I also like to categorize the wines with labels to add some metadata to help me choose a bottle when I need.
For instance, you can create labels with price groups or a rating that you use to categorize the wine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/using-trello-to-manage-your-wine-cellar-trello-2.png&quot; alt=&quot;Final result&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/using-trello-to-manage-your-wine-cellar-cellar3.jpg&quot; alt=&quot;Final result&quot;&gt;&lt;/p&gt;
&lt;p&gt;I hope that this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>7th Meeting of NetPonto Community in Oporto</title>
      <link href="https://gsferreira.com/archive/2015/09/7th-meeting-of-netponto-community-in-oporto/"/>
      <updated>2015-09-18T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/09/7th-meeting-of-netponto-community-in-oporto/</id>
      <content type="html">&lt;p&gt;We are bringing to Oporto the 7th Meeting of NetPonto Community.
The meeting will take place at Instituto Superior de Engenharia do Porto (ISEP) at 26 September 2015.&lt;/p&gt;
&lt;h2&gt;Program&lt;/h2&gt;
&lt;p&gt;09:45 - Check-in&lt;/p&gt;
&lt;p&gt;10:00 - SOLR in .NET - Super Solid solution for a Super Fast Search - Pedro Neves Rosa&lt;/p&gt;
&lt;p&gt;12:00 - The Future of Web Applications - ECMAScript vNext and others - Ricardo Brand√£o&lt;/p&gt;
&lt;p&gt;13:30 - Closing Panel&lt;/p&gt;
&lt;h2&gt;Venue&lt;/h2&gt;
&lt;p&gt;Instituto Superior de Engenharia do Porto (ISEP) - Room H202&lt;/p&gt;
&lt;p&gt;Rua Dr. Ant√≥nio Bernardino de Almeida, 431&lt;/p&gt;
&lt;p&gt;4200-072 Porto&lt;/p&gt;
&lt;p&gt;Portugal&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.google.pt/maps/place/ISEP,+4200-072+Porto/@41.1778457,-8.6081006,17z/data=!4m2!3m1!1s0xd246449b419e1c1:0x16a6fd2fcace4efe&quot;&gt;Map&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Registration&lt;/h2&gt;
&lt;p&gt;Free!&lt;/p&gt;
&lt;p&gt;Registration: &lt;a href=&quot;https://netponto-porto-setembro-2015.eventbrite.co.uk/&quot;&gt;https://netponto-porto-setembro-2015.eventbrite.co.uk/&lt;/a&gt;&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Are you sure that Android is better than Windows Phone?</title>
      <link href="https://gsferreira.com/archive/2015/07/are-you-sure-that-android-is-better-than-windows-phone/"/>
      <updated>2015-07-23T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/07/are-you-sure-that-android-is-better-than-windows-phone/</id>
      <content type="html">&lt;p&gt;&lt;strong&gt;SPOILER ALERT&lt;/strong&gt;: This text contains &lt;strong&gt;opinions&lt;/strong&gt; from the author about smartphones.&lt;/p&gt;
&lt;h2&gt;Confession&lt;/h2&gt;
&lt;p&gt;I&#39;m a huge fan of Windows Phone since the early days and I have been using it since 2011.
I followed the growing and I struggled with all the limitations in past years.&lt;/p&gt;
&lt;p&gt;Until the last month I&#39;d never used an Android Phone or an iPhone as my personal phones.
I&#39;ve been playing with them in work or with family phones, and I have to honestly say that I never fall in love for them.
But I need to refer that I&#39;m not a hater of them, I respect both Operating Systems.&lt;/p&gt;
&lt;p&gt;I can see their pros and cons and I try to stay away from those fanboy discussions &lt;em&gt;(usually I&#39;m the guy that they will make fun because for my friends I&#39;m the only person in the country with a Windows Phone)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/are-you-sure-that-android-is-better-than-windows-phone-fun.jpg&quot; alt=&quot;fun&quot;&gt;&lt;/p&gt;
&lt;p&gt;In the last month, I noticed that the camera button of my Nokia Lumia was a little loose and I decided that was time to send it to repair.
I needed a substitution phone and I decided to give a try to Android because &lt;strong&gt;I&#39;m a kind of disappointed with the Nokia hardware quality&lt;/strong&gt; and I was really &lt;strong&gt;curious to try a different operating system&lt;/strong&gt;.
I&#39;ve faced the experience with an open heart and really expecting to be surprised.&lt;/p&gt;
&lt;h2&gt;Context&lt;/h2&gt;
&lt;p&gt;I managed to get a Vodafone Prime 6, it&#39;s not a flagship product but it&#39;s a cool phone and I used it during a month.
Here I will explain &lt;strong&gt;what I loved in Android and what I missed from my Windows Phone&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;_I want to point out that I won&#39;t compare hardware features. _&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/are-you-sure-that-android-is-better-than-windows-phone-oh-you-have-an-android-phone-tell-me-again-how-much-better-than-an-iphone-it-is.jpg&quot; alt=&quot;better phone&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;What I loved&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. Meterial Design&lt;/strong&gt;
I love minimalist design and all the flat design stuff. I really like the work done by google. All the simplicity, the amazing use of the depth and animations made me like Material Design.
&lt;strong&gt;2. Apps... Tons of Apps...&lt;/strong&gt;
If you ask an Android fan how to do something he will reply to you &amp;quot;There&#39;s an App to do that!&amp;quot;. This is a great resume of the main advantage of the platform comparing to Windows Phone.
I don&#39;t say that I like to 500 versions of angry birds or another useless apps in the Play Store, but I appreciate have the official version of some apps that I use every day like Trello, Pocket or Buffer.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;What I really don&#39;t like&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. User Experience&lt;/strong&gt;
As I said before, I&#39;m a huge fan of Material Design and I think that he can be an important tool to improve the &lt;strong&gt;experience&lt;/strong&gt;, but design isn&#39;t everything.
The applications have a lack of rules and patterns, even in the most popular apps.
For more than once I had to think &lt;strong&gt;&amp;quot;Where should I touch?&amp;quot;&lt;/strong&gt; or &lt;strong&gt;&amp;quot;What should I do?&amp;quot;&lt;/strong&gt; and those should be prohibited questions for a phone user.
Example: The following example shows three different cases where the main action button is in different places.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/are-you-sure-that-android-is-better-than-windows-phone-ux.png&quot; alt=&quot;Compair UX&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Opening notifications&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Push notifications are amazing and I can&#39;t live without them anymore but in Android I got a little confused.&lt;/p&gt;
&lt;p&gt;The most annoying thing in Android notification system is open a notification... double touch doesn&#39;t seems natural, at least for me.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Performance&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I installed more a less 8 applications, all them popular (Trello, Sunrise, Pocket, Feedly...) and the phone is constantly blocking.
The system simply doesn&#39;t react in a fashion time.
When a user touch to go to the main screen and nothing happens during 1 or 2 seconds the expirience is ruined.
&lt;strong&gt;NOTE&lt;/strong&gt;: I know that my Android phone isn&#39;t a powerfull machine, so I&#39;m &lt;a href=&quot;http://smartphones.specout.com/compare/968-3120/Nokia-Lumia-630-vs-Vodafone-Smart-Prime-6&quot;&gt;comparing him with the humble Nokia Lumia 630&lt;/a&gt;.
&lt;strong&gt;4. Updates&lt;/strong&gt;
I simply can&#39;t get it. I&#39;m not able to figure out the updates that are available and how can I run them.
Sometimes I got a notification to update the app &amp;quot;X&amp;quot;, another times I need to go to Play Store to do it...
The most annoying thing was one day that I saw that he was installing updates using my 3G data connection without asking for a confirmation. :O&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;What I missed from my Windows Phone&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. Tiles&lt;/strong&gt;
Isn&#39;t amazing to know your next appointment, see the twitter/facebook updates or read part of e-mail without a single gesture?
Windows Phone users know what I mean. Android users will probably say &amp;quot;There&#39;s an app to do that&amp;quot;. :)
&lt;strong&gt;2. People hub&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I really like the people hub and I missed so much the contact list navigation by the first letter.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/are-you-sure-that-android-is-better-than-windows-phone-wp-filter-contacts.png&quot; alt=&quot;Navigation by letter&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Account management&lt;/strong&gt;
In android the accounts configuration is distributed and I&#39;m a fan of that Windows Phone &lt;strong&gt;experience&lt;/strong&gt; where you buy a phone, go to the Email and Accounts settings, add your accounts and your phone is ready to go.
&lt;strong&gt;4. Vertical scroll at the applications list&lt;/strong&gt;
I&#39;m not comfortable with the menu style of Android. Scroll horizontally between pages to get an application is not so productive as the Windows Phone vertical list.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;As I use to say, Android is a &amp;quot;hackable&amp;quot; (customizable if you prefer the word) version of IOS. With Android we can have a phone that give us &lt;strong&gt;freedom to do what we want&lt;/strong&gt; and much cheaper than iPhone.&lt;/p&gt;
&lt;p&gt;I &lt;strong&gt;won&#39;t say that Android is better or worst than Windows Phone&lt;/strong&gt;, because they both have a role to play in this game.&lt;/p&gt;
&lt;p&gt;If to you the most important thing are Apps and be able to play the new Candy Crush or Flappy Birds since the first day, I recommend you to go to Android.&lt;/p&gt;
&lt;p&gt;If to you, like to me, the most important thing is the &lt;strong&gt;experience&lt;/strong&gt;, so you should give a try to Windows Phone.&lt;/p&gt;
&lt;p&gt;Users want apps and without apps you can&#39;t have users, but without users you will not have so many apps.&lt;/p&gt;
&lt;p&gt;In the near future, I will keep my Windows Phone. I know that there are rumors about the platform that aren&#39;t cheerful for WP users, but I really believe in the platform and I hope that Microsoft too.&lt;/p&gt;
&lt;p&gt;Feel free to leave comments.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Reduce the path length of a Node.js project</title>
      <link href="https://gsferreira.com/archive/2015/07/reduce-the-path-length-of-a-node-js-project/"/>
      <updated>2015-07-09T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/07/reduce-the-path-length-of-a-node-js-project/</id>
      <content type="html">&lt;p&gt;Are you fighting with the path length of your Node.js projects?&lt;/p&gt;
&lt;p&gt;If you are using Microsoft Visual Studio to development, I bet you do. If you don&#39;t, you will (this isn&#39;t any curse that I&#39;m throwing at you)!&lt;/p&gt;
&lt;p&gt;Windows has the &amp;quot;Maximum Path Length Limitation&amp;quot; that is terrible for Node.JS projects.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As you know, when you install a package in Node.js, the npm will place the dependencies under the package folder. This process is recursive for each package, so you can easily overcome the path length.&lt;/p&gt;
&lt;p&gt;Unfortunately, there&#39;s no silver bullet to fix it (I&#39;m not a Node.js guru, so please let me know if I&#39;m wrong), but we can follow some tips to deal with it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/reduce-the-path-length-of-your-node-js-project-dependencies-dependencies-everywhere.jpg&quot; alt=&quot;dependencies everywhere&quot;&gt;&lt;/p&gt;
&lt;h3&gt;1. Azure Cloud Services - Change the output directory&lt;/h3&gt;
&lt;p&gt;If you are getting an error when you publish your cloud service to azure, it&#39;s probably because the deployment will place the output into a subfolder.
I&#39;ve already had &lt;a href=&quot;http://gsferreira.com/archive/2014/11/azure-deploy-and-the-path-length-limitation/&quot;&gt;blogged how to deal with it and you can find it here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;2. Find the packages that are leading you into the limit and install them&lt;/h3&gt;
&lt;p&gt;Imagine that you install a package that has a dependency from &lt;em&gt;request&lt;/em&gt; and that dependency made you overcome the path limit.
Go to the npm and install the package explicitly. Now, Node.js will not install the request in a subfolder of your first package.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	npm install request --save
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;3. Remove dev packages&lt;/h3&gt;
&lt;p&gt;Install the packages with the &lt;em&gt;&amp;quot;--production&amp;quot;&lt;/em&gt; flag to remove all development only packages.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	npm install --production
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;4. Remove duplicated packages&lt;/h3&gt;
&lt;p&gt;Npm has a command that will find for you the duplicated dependencies and install them as top dependencies.
With a simple command you can simplify your dependency tree and reduce your project size.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	npm dedupe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope this helps. Feel free to leave comments and ask questions.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>6th Meeting of NetPonto Community in Oporto</title>
      <link href="https://gsferreira.com/archive/2015/06/6th-meeting-of-netponto-community-in-oporto/"/>
      <updated>2015-06-29T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/06/6th-meeting-of-netponto-community-in-oporto/</id>
      <content type="html">&lt;p&gt;We are bringing to Oporto the 6th Meeting of NetPonto Community.
The meeting will take place at Instituto Superior de Engenharia do Porto (ISEP) at 11 July 2015.&lt;/p&gt;
&lt;h2&gt;Program&lt;/h2&gt;
&lt;p&gt;09:45 - Check-in&lt;/p&gt;
&lt;p&gt;10:00 - ASP.NET VNext, now in Mac! - Bruno Lopes&lt;/p&gt;
&lt;p&gt;12:00 - Building applications with Xamarin Forms - Rui Marinho&lt;/p&gt;
&lt;p&gt;13:30 - Closing Panel&lt;/p&gt;
&lt;h2&gt;Venue&lt;/h2&gt;
&lt;p&gt;Instituto Superior de Engenharia do Porto (ISEP) - Room H202&lt;/p&gt;
&lt;p&gt;Rua Dr. Ant√≥nio Bernardino de Almeida, 431&lt;/p&gt;
&lt;p&gt;4200-072 Porto&lt;/p&gt;
&lt;p&gt;Portugal&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.google.pt/maps/place/ISEP,+4200-072+Porto/@41.1778457,-8.6081006,17z/data=!4m2!3m1!1s0xd246449b419e1c1:0x16a6fd2fcace4efe&quot;&gt;Map&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Registration&lt;/h2&gt;
&lt;p&gt;Free!&lt;/p&gt;
&lt;p&gt;Registration: &lt;a href=&quot;https://netponto-porto-julho-2015.eventbrite.co.uk/&quot;&gt;https://netponto-porto-julho-2015.eventbrite.co.uk/&lt;/a&gt;&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Create an API in Azure App Service - Revista PROGRAMAR N¬∫ 49</title>
      <link href="https://gsferreira.com/archive/2015/06/create-an-api-in-azure-app-service-revista-programar-n49/"/>
      <updated>2015-06-18T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/06/create-an-api-in-azure-app-service-revista-programar-n49/</id>
      <content type="html">&lt;p&gt;&lt;em&gt;I had the pleasure of write an &lt;a href=&quot;http://www.revista-programar.info/artigos/criar-uma-api-no-azure-app-sevice/&quot;&gt;article&lt;/a&gt; to the &lt;a href=&quot;http://www.revista-programar.info/anuncios/revista-programar-no-49-junho-2015/&quot;&gt;Revista PROGRAMAR&lt;/a&gt;, a Portuguese collaborative magazine about programming. I‚Äôm glad with my first article for a magazine and especially because, I&#39;m side by side with people that I admire like &lt;a href=&quot;https://twitter.com/PauloMorgado&quot;&gt;Paulo Morgado&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/saramgsilva&quot;&gt;Sara Silva&lt;/a&gt;, for instance. This was an amazing experience and I want to share with you the result of it.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In March, Microsoft announced an improvement in his services by introducing the new Azure App Service. This service covers the ‚Äúoldest‚Äù Websites, now named as Web Apps, the Azure Mobile Services, now, Mobile Apps, and introduce new capabilities as Logic Apps and the API Apps. This article talks about the last one.
The question is: What‚Äôs the reason to create an API App, and not a Web API in a Website? This question can be easily answered, analysing the feature list, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Access Control using Azure Active Directory or OAuth services, as Facebook or Twitter;&lt;/li&gt;
&lt;li&gt;Fast integration with the Swagger Framework;&lt;/li&gt;
&lt;li&gt;Easy integration with Logic Apps;&lt;/li&gt;
&lt;li&gt;Private gallery of APIs, enabling us to provide APIs to the other members of the organization;&lt;/li&gt;
&lt;li&gt;Automatic generation of an SDK for our API.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this article we will see, how to create an API, publish in our subscription and create an SDK to consume it.&lt;/p&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;There are many services, inside the organizations, that are necessary to multiple applications. A good example of that is the send email notifications.
Let imagine that we pretend to provide an API, so that all applications of our organization, can easily send emails, without need to know the logic of using the email server.
Before we start, we need to be sure that &lt;a href=&quot;http://go.microsoft.com/fwlink/?linkid=324322&amp;amp;clcid=0x409&quot;&gt;Microsoft Azure SDK for .NET 2.6&lt;/a&gt; is installed.&lt;/p&gt;
&lt;h3&gt;Create an API App project&lt;/h3&gt;
&lt;p&gt;Let‚Äôs start to see how to create a project for our API App.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open Visual Studio 2013;&lt;/li&gt;
&lt;li&gt;Create a new project using &lt;strong&gt;File &amp;gt; New Project&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Choose the template &lt;strong&gt;ASP.NET Web Application&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Give a name to the project, in this case we will use MailApi;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/create-an-api-in-azure-app-service-revista-programar-n49-1.png&quot; alt=&quot;New Project&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Click &lt;strong&gt;OK&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Select the template &lt;strong&gt;Azure API App&lt;/strong&gt;;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/create-an-api-in-azure-app-service-revista-programar-n49-2.png&quot; alt=&quot;Template&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;Click &lt;strong&gt;OK&lt;/strong&gt; and to create the project.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Create the service to send emails&lt;/h3&gt;
&lt;p&gt;Let‚Äôs see how to expose a method for sending emails in our API. For that, we will create a class that represents the data model to receive the request, and a controller to provide the sending method.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the folder Models, add a new class with the name MailModel. Mouse right click in the folder Models, and select the option &lt;strong&gt;Add &amp;gt; Class&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;In the created file, MailModel.cs, add the following code:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;   &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ComponentModel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DataAnnotations&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;   &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MailModel&lt;/span&gt;&lt;br&gt;   &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token attribute&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;Required&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token attribute&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;EmailAddress&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; To &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token attribute&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;Required&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; Subject &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token attribute&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;Required&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; Body &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Add a controller to the project (controllers file) with the name MailController, using the template, &lt;strong&gt;Web API 2 Controller ‚Äì Empty&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/create-an-api-in-azure-app-service-revista-programar-n49-3.png&quot; alt=&quot;Scaffold&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;In the created file, &lt;strong&gt;MailController.cs&lt;/strong&gt;, add the following method:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;   &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;MailApi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Models&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;   &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token attribute&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpPost&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;   &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;HttpResponseMessage&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token attribute&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;FromBody&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MailModel&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;   &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; client &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Net&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;SmtpClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token comment&quot;&gt;// create the message&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; mailFrom &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Net&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;MailAddress&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;noreply@deathstar.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Death Star&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; mailTo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Net&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;MailAddress&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;To&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; mail &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Net&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;MailMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mailFrom&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mailTo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;        mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Subject &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Subject&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Body&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;IsBodyHtml &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&quot;token comment&quot;&gt;// send email&lt;/span&gt;&lt;br&gt;        client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mail&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;CreateResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;HttpStatusCode&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;OK&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Configure the service&lt;/h3&gt;
&lt;p&gt;Since in this example we will send the e-mail via SMTP, we will need to configure the e-mail server data.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Access the &lt;strong&gt;Web.config&lt;/strong&gt; file of our application;&lt;/li&gt;
&lt;li&gt;Add the following configuration (before the line ):&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;system.net&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;         &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;mailSettings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;           &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;smtp&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;noreply@deathstar.com&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;network&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;mail.deathstar.com&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;587&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;noreply@deathstar.com&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#MayTheForceBeWithThisPassword!&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;enableSsl&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;           &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;smtp&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;         &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;mailSettings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;system.net&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Fill in with the data from our server.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Publish the application to the Azure App Service&lt;/h3&gt;
&lt;p&gt;The publication can be made to an App Service, previously created using the portal, but in the next step we will see how to create the same without leaving Visual Studio.&lt;/p&gt;
&lt;p&gt;To do this, it‚Äôs required to have an Azure subscription. If you don‚Äôt have it, you can create one test subscription of a month, in http://azure.microsoft.com/en-us/pricing/free-trial/.
If you already have it, follow the next steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In Solution Explorer, right click in project and click &lt;strong&gt;Publish&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;In the publish dialog, access the &lt;strong&gt;Profile&lt;/strong&gt; panel and choose the option &lt;strong&gt;Microsoft Azure API Apps&lt;/strong&gt;;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/create-an-api-in-azure-app-service-revista-programar-n49-4.png&quot; alt=&quot;Publish&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Click &lt;strong&gt;New&lt;/strong&gt; to create a new API App in the subscription;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/create-an-api-in-azure-app-service-revista-programar-n49-5.png&quot; alt=&quot;Azure API Apps&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;In the Create dialog, add:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;The API App name. Here we will use &lt;strong&gt;MailApiService&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Select the disired subscription;&lt;/li&gt;
&lt;li&gt;Pick a name to the App Service;&lt;/li&gt;
&lt;li&gt;Pick a name to the Resource Group;&lt;/li&gt;
&lt;li&gt;Choose the access level Available to Anyone;&lt;/li&gt;
&lt;li&gt;Pick the region where you what to host the App Service.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/create-an-api-in-azure-app-service-revista-programar-n49-6.png&quot; alt=&quot;Create API App dialog&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Click &lt;strong&gt;OK&lt;/strong&gt; and wait a few minutes while the service is being created. The creation request can be followed in the Azure App Service Activity panel;&lt;/li&gt;
&lt;li&gt;Once the App Service is created, we go back to the step number 1, access the publish dialog, and we click in the &lt;strong&gt;Publish&lt;/strong&gt; option;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/create-an-api-in-azure-app-service-revista-programar-n49-7.png&quot; alt=&quot;Publish&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;The service will be published.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Consume na API from a .NET client.&lt;/h3&gt;
&lt;p&gt;Let‚Äôs see how to create an SDK to our API and use it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a Console Application to our solution;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/create-an-api-in-azure-app-service-revista-programar-n49-8.png&quot; alt=&quot;Add console app&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;In the Solution Explorer, right click in the Console Application and select the option &lt;strong&gt;Add &amp;gt; Azure API App Client&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;In the presented dialog, pick the option &lt;strong&gt;Download from Microsoft Azure API App&lt;/strong&gt; and select the MailApiService, create previously;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/create-an-api-in-azure-app-service-revista-programar-n49-7.png&quot; alt=&quot;Add Azure API App Client&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Click &lt;strong&gt;OK&lt;/strong&gt; and wait until the SDK is created;&lt;/li&gt;
&lt;li&gt;When the last step is completed, we are ready to invoke our API, as the following code shows.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Program&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; client &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;MailApiService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Models&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;MailModel&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; To &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;darth.vader@deathstar.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Subject &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;War Report&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;The Force awakens&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;      Console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Done!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;      Console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ReadKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;With this new service created by Microsoft, we are able to provide features that in the past had a huge development cost, in an easy and quick way.
The private gallery in conjunction with the easy way to consume APIs, provides the required capabilities to create an API ecosystem.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Lessons learned from Agile Portugal 2015</title>
      <link href="https://gsferreira.com/archive/2015/05/lessons-learned-from-agilept-2015/"/>
      <updated>2015-05-28T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/05/lessons-learned-from-agilept-2015/</id>
      <content type="html">&lt;p&gt;In the last week I attended to the &lt;a href=&quot;http://2015.agilept.org/&quot;&gt;Agile Portugal 2015&lt;/a&gt;, an amazing event that gathers the agile community.
I had the opportunity to listen excellent speakers as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://au.linkedin.com/pub/lachlan-heasman/1/920/777&quot;&gt;Lachlan Heasman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/haradakiro&quot;&gt;Kiro Harada&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/_pedro_torres&quot;&gt;Pedro Gustavo Torres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.uvu.edu/profpages/profiles/show/user_id/1923&quot;&gt;Neil Harrison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/theplastictoy&quot;&gt;Ricardo Fiel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/carlton858&quot;&gt;Carlton Nettleton&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The event was amazing, and I want to share with you the main lessons that I learned.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;The importance of Visuals&lt;/h2&gt;
&lt;p&gt;Lachlan Heasman has made an amazing talk. He reinforces that the Visual Management is really important to succeed.&lt;br&gt;
That thought made a lot of sense to me. Nowadays, we have a ton of excellent applications to do kanban boards and that&#39;s OK, especially if you have remote workers. But I believe that, if you have your team in a single place you should have a physical kanban board.
Why? Because your team will look into it every day... every single day. Even if they don&#39;t want, they will! You will see that your team will be positively influenced, building a culture of transparency and trust.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/lessons-learned-from-agilept-2015-kanban-style.jpg&quot; alt=&quot;Kanban style&quot;&gt;&lt;/p&gt;
&lt;h2&gt;User stories&lt;/h2&gt;
&lt;p&gt;Why we are writing User Stories in the form of &amp;quot;As a... I want to... so that...&amp;quot;? Will the customer realize the language? Or will they think that we are crazy nerds?
As the &lt;a href=&quot;http://en.wikipedia.org/wiki/User_story&quot;&gt;wikipedia&lt;/a&gt; (that eternal font of true) refers, an &amp;quot;user story is a description consisting of one or more sentences in the everyday or business language of the end user or user of a system&amp;quot;.
Have you ever listened a business person talking like that?&lt;/p&gt;
&lt;p&gt;Carlton Nettleton, presented a simpler and much objective way to write user stories. How? Answering the following questions: Who? What? And Why?
I&#39;m a fan of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Five_Ws&quot;&gt;Six W&#39;s method&lt;/a&gt; to describe and understand complex problems, and Carlton made me correlate that with user stories.&lt;/p&gt;
&lt;h2&gt;The true essence of agile&lt;/h2&gt;
&lt;p&gt;The industry sells us the idea that Agile (or Scrum), is a magic formula that we should apply to have good results. You just need to have some meetings, do sprints of &amp;quot;X&amp;quot; weeks and you will be fine.
That&#39;s not true.&lt;/p&gt;
&lt;p&gt;Companies are made from people, so they are different. Each one has a different culture and a different identity. This uniqueness will make them agile.&lt;/p&gt;
&lt;p&gt;Agile, isn&#39;t a process, a system or a mathematical formula. Agile is a culture.
It&#39;s different be agile than have a certificate that says that you are agile.
The process is the less important part. You should have the focus on the outcome.
Always think on where you want to go, not on what you need to do to go there.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Was an amazing day, with incredible people, in an awesome place.
Hope to be there next year.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Azure App Service API Apps - Microsoft.Rest.HttpOperationException</title>
      <link href="https://gsferreira.com/archive/2015/05/azure-app-service-api-apps-microsoft-rest-httpoperationexception/"/>
      <updated>2015-05-12T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/05/azure-app-service-api-apps-microsoft-rest-httpoperationexception/</id>
      <content type="html">&lt;p&gt;Recently I was playing with API Apps, from the new Azure App Service when I faced the following error:&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    Microsoft&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Rest&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;HttpOperationException`&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; was &lt;span class=&quot;token class-name&quot;&gt;unhandled&lt;/span&gt;&lt;br&gt;  HResult&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2146233088&lt;/span&gt;&lt;br&gt;  Message&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;Exception of type &#39;Microsoft&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Rest&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;HttpOperationException`&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Object&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&#39; was thrown&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;br&gt;  Source&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MyMailSenderClient2&lt;/span&gt;&lt;br&gt;  StackTrace&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;       at MyMailSenderClient2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;PostWithOperationResponseAsync&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;d__0&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;MoveNext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; c&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;\DEV\MyTestApi\MyMailSenderClient2\TestMailApi\Mail&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cs&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;line &lt;span class=&quot;token number&quot;&gt;129&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; End of stack trace &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; previous location &lt;span class=&quot;token keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;exception&lt;/span&gt; was thrown &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Runtime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CompilerServices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TaskAwaiter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ThrowForNonSuccess&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; task&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Runtime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CompilerServices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TaskAwaiter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;HandleNonSuccessAndDebuggerNotification&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; task&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       at System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Runtime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CompilerServices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ConfiguredTaskAwaitable`&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ConfiguredTaskAwaiter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       at MyMailSenderClient2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;MailExtensions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;PostAsync&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;d__3&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;MoveNext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; c&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;\DEV\MyTestApi\MyMailSenderClient2\TestMailApi\MailExtensions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cs&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;line &lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; End of stack trace &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; previous location &lt;span class=&quot;token keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;exception&lt;/span&gt; was thrown &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Runtime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CompilerServices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TaskAwaiter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ThrowForNonSuccess&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; task&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Runtime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CompilerServices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TaskAwaiter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;HandleNonSuccessAndDebuggerNotification&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; task&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       at System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Runtime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CompilerServices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TaskAwaiter`&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; MyMailSenderClient2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;MailExtensions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IMail&lt;/span&gt; operations&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MailModel&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; c&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;\DEV\MyTestApi\MyMailSenderClient2\TestMailApi\MailExtensions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cs&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;line &lt;span class=&quot;token number&quot;&gt;24&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; MyMailSenderClient2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Program&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; c&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;\DEV\MyTestApi\MyMailSenderClient2\Program&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cs&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;line &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;AppDomain&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;_nExecuteAssembly&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RuntimeAssembly&lt;/span&gt; assembly&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;AppDomain&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ExecuteAssembly&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; assemblyFile&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Evidence&lt;/span&gt; assemblySecurity&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; Microsoft&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;VisualStudio&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;HostingProcess&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;HostProc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;RunUsersAssembly&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Threading&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ThreadHelper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ThreadStart_Context&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Threading&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ExecutionContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;RunInternal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ExecutionContext&lt;/span&gt; executionContext&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ContextCallback&lt;/span&gt; callback&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Boolean&lt;/span&gt; preserveSyncCtx&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Threading&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ExecutionContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ExecutionContext&lt;/span&gt; executionContext&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ContextCallback&lt;/span&gt; callback&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Boolean&lt;/span&gt; preserveSyncCtx&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Threading&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ExecutionContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ExecutionContext&lt;/span&gt; executionContext&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ContextCallback&lt;/span&gt; callback&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;       &lt;span class=&quot;token return-type class-name&quot;&gt;at&lt;/span&gt; System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Threading&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ThreadHelper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ThreadStart&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;  InnerException&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I struggled a bit until I figured why.&lt;/p&gt;
&lt;p&gt;Well, let me explain you how I got there and what I have done to solve it.&lt;/p&gt;
&lt;p&gt;I access to the new &lt;a href=&quot;http://portal.azure.com/&quot;&gt;Portal&lt;/a&gt; and I created a new API App, then I&#39;ve followed the Microsoft tutorial of how to &lt;a href=&quot;http://azure.microsoft.com/en-us/documentation/articles/app-service-dotnet-create-api-app/&quot;&gt;Create an ASP.NET API app in Azure App Service&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Everything was going fine and in a few minutes I published the API. Quick and easy.&lt;/p&gt;
&lt;p&gt;Then, I generated my Client SDK and when I tried to invoke it, I got the error.&lt;/p&gt;
&lt;p&gt;As you can see, the exception message and the stack trace don&#39;t provide much information.&lt;/p&gt;
&lt;p&gt;I had to struggle a bit to figure it out.&lt;/p&gt;
&lt;p&gt;The reason was really simple, my API service had the Access Level defined as &lt;strong&gt;Internal&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;After changing it to &lt;strong&gt;Public (anonymous)&lt;/strong&gt; everything works fine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/azure-app-service-api-apps-microsoft-rest-httpoperationexception-access-level.png&quot; alt=&quot;Azure API App - Access Level&quot;&gt;&lt;/p&gt;
&lt;p&gt;Why this happened? If you follow the tutorial you will create the API App using Visual Studio and you will see that the Visual Studio has the access level &lt;strong&gt;Available to Anyone&lt;/strong&gt; as default.&lt;/p&gt;
&lt;p&gt;When you create the API App using the portal, you will see that the Access Level is defined as &lt;strong&gt;Internal&lt;/strong&gt; by default.&lt;/p&gt;
&lt;p&gt;I believe that Microsoft will fix these small problems and make it more clear.
Until then, I hope that this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>AngularJS - After Render Directive</title>
      <link href="https://gsferreira.com/archive/2015/03/angularjs-after-render-directive/"/>
      <updated>2015-03-28T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/03/angularjs-after-render-directive/</id>
      <content type="html">&lt;p&gt;Do you ever wanted to execute code after your Angular template is completely rendered?&lt;/p&gt;
&lt;p&gt;This post is the answer of how you can accomplish that.&lt;/p&gt;
&lt;p&gt;This a simple tip, but I believe that can be really useful.&lt;/p&gt;
&lt;p&gt;Add the following directive to your application.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;myApp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;directive&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;afterRender&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token string&quot;&gt;&quot;$timeout&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;$timeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; def &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      restrict&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;      terminal&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;      transclude&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token function-variable function&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;scope&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; element&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; attrs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token function&quot;&gt;$timeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;scope&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$eval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;attrs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;afterRender&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//Calling a scoped method&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; def&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, add the &lt;em&gt;after-render&lt;/em&gt; directive to an element in your template:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;after-render&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;missionCompled&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, your application will run the &lt;em&gt;missionCompled&lt;/em&gt; function (or other that you want) in your controller, after the div is rendered.&lt;/p&gt;
&lt;p&gt;You can see the working demo on &lt;a href=&quot;https://jsfiddle.net/gsferreira/h53okjtu/&quot;&gt;JSFiddle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope that this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>A developer&#39;s thoughts on Azure SQL Database performance levels</title>
      <link href="https://gsferreira.com/archive/2015/03/a-developers-thoughts-on-azure-sql-database-performance-levels/"/>
      <updated>2015-03-14T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/03/a-developers-thoughts-on-azure-sql-database-performance-levels/</id>
      <content type="html">&lt;p&gt;I recently started moving some databases that I have in the old Azure SQL Database Web/Business model. I started it with a good feeling. Let&#39;s face it, a guaranteed performance level is excellent. Nobody wants a noisy neighbor boring our database.&lt;/p&gt;
&lt;p&gt;The downside, is that this shift brings new challenges and possible big troubles to the ones that already have systems in place. Everything has a price and in this case we call it &lt;strong&gt;Performance&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In this new model, SQL Azure Databases are paid by performance instead of space. Now we have service tiers with transaction rates per hour (Basic Tier), per minute (Standard Tier) or per second (Premium Tier).&lt;/p&gt;
&lt;p&gt;So, what&#39;s wrong with this? The prices! In my opinion, there&#39;s no equality between the old models and the new ones. Chris Bailiss has some awesome posts that shows that. Take a look:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cbailiss.wordpress.com/2015/01/31/azure-sql-database-v12-ga-performance-inc-cpu-benchmaring/&quot;&gt;Azure SQL Database: v12 GA Performance inc. CPU Benchmaring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cbailiss.wordpress.com/2014/09/16/performance-in-new-azure-sql-database-performance-tiers/&quot;&gt;GA Performance in New Azure SQL Database Performance Tiers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###Show me the numbers&lt;/p&gt;
&lt;p&gt;If you have an Azure SQL Database on the Web model with 1.5GB you will pay 10.42‚Ç¨/month.
By a few more cents (11.18‚Ç¨/month) you can use an SQL Database in the Standard Tier with the S0 Performance Level.&lt;/p&gt;
&lt;p&gt;If you have read the Chris Bailiss post, you have seen that the performance between those two can&#39;t be compared. S0 is slower than Web.&lt;/p&gt;
&lt;p&gt;###So, what can I do?&lt;/p&gt;
&lt;p&gt;With this post &lt;strong&gt;I don&#39;t want to say that you should run away from SQL Azure Database&lt;/strong&gt;. What I mean, is that the game has changed.&lt;/p&gt;
&lt;p&gt;In this Cloud era the costs are a variable that Software Developers and Architects need to take in account. Now our code has a visible and measurable impact in the financial health of our products and companies.&lt;/p&gt;
&lt;p&gt;So, how to start facing the dragon?
You can find here a list of things that you should have in mind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Question yourself: Do I really need a SQL database?&lt;/strong&gt; There&#39;s many options in Azure to store your data, probably they can do the task.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance is more important than ever!&lt;/strong&gt; Don&#39;t wait until a query takes a few minutes running to start doing SQL Tuning.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database design has a significant importance!&lt;/strong&gt; Be careful designing your database data model.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Test in Azure since the first day.&lt;/strong&gt; Probably your development machine has an SQL Server with more power than the production database.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/a-developers-thoughts-on-azure-sql-database-performance-levels-works-fine-in-dev.jpg&quot; alt=&quot;Works fine in Dev&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Reduce the &amp;quot;chatty&amp;quot;&lt;/strong&gt; operations in your application.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be careful using Entity Framework.&lt;/strong&gt; Make sure that your code isn&#39;t triggering multiple queries that can be done at once. EF can make your life easier, but the database can suffer from that.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Start using cache.&lt;/strong&gt; This will reduce the workload at your database and you will consume less DTUs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>AngularJS - Input number with 2 decimal places</title>
      <link href="https://gsferreira.com/archive/2015/02/angularjs-input-number-with-two-decimal-places/"/>
      <updated>2015-02-25T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/02/angularjs-input-number-with-two-decimal-places/</id>
      <content type="html">&lt;p&gt;My &lt;a href=&quot;http://gsferreira.com/archive/2014/05/angularjs-smart-flo+at-directive/&quot;&gt;AngularJS - Smart Float Directive&lt;/a&gt; post has been a post with a lot of traction, so I want to share another tip related to numbers in Angular.&lt;/p&gt;
&lt;p&gt;This a kind of simple tip, but I believe that it can be really useful.&lt;/p&gt;
&lt;p&gt;My smart-float directive works really fine in a desktop or laptop browser, but in a smartphone I want to take advantage of HTML5 number inputs and show to my users when they enter in the input, the &amp;quot;mini calculator keyboard&amp;quot;.&lt;/p&gt;
&lt;p&gt;How to accomplish it using angular?&lt;/p&gt;
&lt;p&gt;That&#39;s easy.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.deque.com/blog/accessible-client-side-form-validation-html5/&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/angularjs-input-number-with-two-decimal-places-meme.jpg&quot; alt=&quot;meme&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;1. Create the number input with the number type.&lt;/h3&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Decimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;ng-model&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;2. Define the step interval.&lt;/h3&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Decimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;ng-model&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;*step&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.01&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;3. Set the regular expression to validate the input using ng-pattern. Here I want to accept only numbers with a maximum of 2 decimal places and with a dot separator.&lt;/h3&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Decimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;ng-model&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;ng-pattern&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/^[0-9]+(\.[0-9]{1,2})?$/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.01&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;4. Inform your user if the input has a valid value.&lt;/h3&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Decimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;ng-model&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;ng-pattern&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/^[0-9]+(\.[0-9]{1,2})?$/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.01&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Is a valid decimal? &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A full example using bootstrap (&lt;a href=&quot;http://jsfiddle.net/gsferreira/Lsv9f0b0/&quot;&gt;demo here&lt;/a&gt;):&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;ng-app&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Todo&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;ng-controller&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myCtrl&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myForm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;form-horizontal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;form-group&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token attr-name&quot;&gt;ng-class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{&#39;has-error&#39;: myForm.myDecimal.$invalid}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;inputText3&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;col-sm-2 control-label&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Decimal&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;col-sm-10&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;form-control&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Decimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;ng-model&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;ng-pattern&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/^[0-9]+(\.[0-9]{1,2})?$/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.01&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;help-block&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;ng-show&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;!myForm.myDecimal.$valid&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            Invalid!&lt;br&gt;          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;form-group&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;inputText3&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;col-sm-2 control-label&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;The value:&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;col-sm-10&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;form-control&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;ng-model&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myDecimal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token attr-name&quot;&gt;disabled&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>How to Encrypt in Node.js and Decrypt in C#</title>
      <link href="https://gsferreira.com/archive/2015/02/how-to-encrypt-in-nodejs-and-decrypt-in-c-sharp/"/>
      <updated>2015-02-16T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/02/how-to-encrypt-in-nodejs-and-decrypt-in-c-sharp/</id>
      <content type="html">&lt;p&gt;Are you trying to send messages to a .NET application from node.js and you want to encrypt them?&lt;/p&gt;
&lt;p&gt;You can find here a simple example to accomplish it.&lt;/p&gt;
&lt;p&gt;Encrypt in node.js:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; crypto &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;crypto&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; key &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;00000000000000000000000000000000&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//replace with your key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; iv &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0000000000000000&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//replace with your IV&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; cipher &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; crypto&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createCipheriv&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;aes256&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; iv&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; crypted &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; cipher&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;authorizationKey&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;utf8&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;base64&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;crypted &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; cipher&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;final&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;base64&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;crypted&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Decrypt with C#:&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; keyString &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;00000000000000000000000000000000&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//replace with your key&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; ivString &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0000000000000000&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//replace with your iv&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt; key &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Encoding&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ASCII&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetBytes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;keyString&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt; iv &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Encoding&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ASCII&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetBytes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ivString&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; rijndaelManaged &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;RijndaelManaged&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Key &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; IV &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; iv&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Mode &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; CipherMode&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CBC &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;                rijndaelManaged&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;BlockSize &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;                rijndaelManaged&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;KeySize &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;                &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; memoryStream &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br&gt;                       &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;MemoryStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Convert&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;AuthorizationCode&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;                &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; cryptoStream &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br&gt;                       &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;CryptoStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;memoryStream&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;                           rijndaelManaged&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;CreateDecryptor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; iv&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;                           CryptoStreamMode&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Read&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;                &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;                    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;StreamReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cryptoStream&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ReadToEnd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>How to access Azure storage emulator using Node.js SDK</title>
      <link href="https://gsferreira.com/archive/2015/02/how-to-access-azure-storage-emulator-using-nodejs-sdk/"/>
      <updated>2015-02-06T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/02/how-to-access-azure-storage-emulator-using-nodejs-sdk/</id>
      <content type="html">&lt;p&gt;Today I have a quick tip that I want to share with you because it took me some time to figure this out.&lt;/p&gt;
&lt;p&gt;I&#39;m using Azure SDK for Node.js to interact with Azure Storage and I want to access my development environment with it.&lt;/p&gt;
&lt;p&gt;To access the blob storage, for instance, you just need to create a blob service using the resource name and the access key. Too easy!&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; azure &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&#39;azure&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;storage&#39;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; blobService &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; azure&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createBlobService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&#39;mystorage&#39;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &#39;my&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;access&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;key&#39;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now I want to access the Azure Storage Emulator running in my machine. How to do it? Just replace the previous code with the following piece of code.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; azure &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&#39;azure&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;storage&#39;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; devStoreCreds &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; azure&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;generateDevelopmentStorageCredendentials&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; blobService &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; azure&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createBlobService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;devStoreCreds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>T-SQL: Which schema is consuming more space?</title>
      <link href="https://gsferreira.com/archive/2015/01/t-sql-which-schema-is-consuming-more-space/"/>
      <updated>2015-01-29T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/01/t-sql-which-schema-is-consuming-more-space/</id>
      <content type="html">&lt;p&gt;Imagine that you have separate schemas in your multi-tenant data architecture and you want to know who is consuming more space. How can you do it?&lt;/p&gt;
&lt;p&gt;Just run the following query:&lt;/p&gt;
&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;  SCHEMA_NAME&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;obj&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;schema_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Schema&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token function&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stats&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;reserved_page_count&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8.0&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; SizeInMB&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;    sys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dm_db_partition_stats stats&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;JOIN&lt;/span&gt;    sys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;indexes idx &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; idx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;object_id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; stats&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;object_id &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; idx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;index_id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; stats&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;index_id&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;JOIN&lt;/span&gt;    sys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;objects obj &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; idx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;object_id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; obj&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;object_id&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt;   obj&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;U&#39;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt;    obj&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;schema_id&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt;    SizeInMB &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>5 awesome tools to craft the perfect Domain Name</title>
      <link href="https://gsferreira.com/archive/2015/01/5-awesome-tools-to-craft-the-perfect-domain-name/"/>
      <updated>2015-01-14T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2015/01/5-awesome-tools-to-craft-the-perfect-domain-name/</id>
      <content type="html">&lt;p&gt;One of the common tips to pick the perfect domain name is to choose one dot-com domain, but a good domain name is a needle in a haystack.&lt;/p&gt;
&lt;p&gt;Here, you will find five awesome tools to help you craft an incredible (and available) domain name.&lt;/p&gt;
&lt;h3&gt;1. &lt;a href=&quot;http://wordoid.com/&quot;&gt;WORDOID&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://wordoid.com/&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/5-awesome-tools-to-craft-the-perfect-domain-name-wordoid.jpg&quot; alt=&quot;WORDOID&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WORDOID generates words and show the availability in .com and .net domains. You can search using parameters like length or language.&lt;/p&gt;
&lt;h3&gt;2. &lt;a href=&quot;http://www.namemesh.com/&quot;&gt;Name Mesh&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.namemesh.com/&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/5-awesome-tools-to-craft-the-perfect-domain-name-namemesh.jpg&quot; alt=&quot;Name Mesh&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Name Mesh searches for synonyms and similar words. Use wisely the search box and you will receive useful results.&lt;/p&gt;
&lt;h3&gt;3. &lt;a href=&quot;http://www.panabee.com/&quot;&gt;Panabee&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.panabee.com/&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/5-awesome-tools-to-craft-the-perfect-domain-name-panabee.jpg&quot; alt=&quot;Panabee&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Panabee gives you suggestions inspired by your original idea, using prefixes, suffixes, abbreviations and popular trends. He also suggests words related to the idea.&lt;/p&gt;
&lt;h3&gt;4. &lt;a href=&quot;http://impossibility.org/&quot;&gt;Impossibility&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://impossibility.org/&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/5-awesome-tools-to-craft-the-perfect-domain-name-impossibility.jpg&quot; alt=&quot;Impossibility&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Impossibility combines your idea with a list of nouns, verbs, and adjectives.&lt;/p&gt;
&lt;h3&gt;5. &lt;a href=&quot;http://www.domainsbot.com/&quot;&gt;DomainsBot&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.domainsbot.com/&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/5-awesome-tools-to-craft-the-perfect-domain-name-domainsbot.jpg&quot; alt=&quot;DomainsBot&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DomainsBot offers you the possibility of search by synonyms, prefixes and suffixes, mixing them with your idea.&lt;/p&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Overcome the DEPTH_ZERO_SELF_SIGNED_CERT on Node.js</title>
      <link href="https://gsferreira.com/archive/2014/12/overcome-the-depth_zero_self_signed_cert-on-nodejs/"/>
      <updated>2014-12-15T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/12/overcome-the-depth_zero_self_signed_cert-on-nodejs/</id>
      <content type="html">&lt;p&gt;If you are making requests to a server that uses self-signed certificates in Node.js probably you already have seen the error DEPTH_ZERO_SELF_SIGNED_CERT.
That&#39;s an usual error, for instance, if you are working in a test environment.&lt;/p&gt;
&lt;p&gt;I faced this error in my test environment and after google it, I got a lot of answers telling me to set the option &amp;quot;rejectUnhauthorized&amp;quot; as false on my request to the server.&lt;/p&gt;
&lt;p&gt;But, that doesn&#39;t make me happy. Why?&lt;/p&gt;
&lt;p&gt;Because I&#39;m using other node modules that do requests to the same server and I will need to &amp;quot;hack&amp;quot; those modules to inject the rejectUnhauthorized attribute. Seems boring isn&#39;t it?!&lt;/p&gt;
&lt;p&gt;So, what I&#39;ve done?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/overcome-the-depth_zero_self_signed_cert-on-nodejs-one-row-to-rule-them-all.jpg&quot; alt=&quot;One row to rule them all!&quot;&gt;&lt;/p&gt;
&lt;p&gt;I opened my node start file and I put there the following line of code:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;NODE_TLS_REJECT_UNAUTHORIZED&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you, like me, want to apply this rule only to a test/development environment, you can do this:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;development&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;env&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;NODE_TLS_REJECT_UNAUTHORIZED&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you are conditioning it to the environment that you want.&lt;/p&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;UPDATE&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you are thinking about applying this to Production environments, please read the comments below.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Disable your html cache</title>
      <link href="https://gsferreira.com/archive/2014/12/disable-your-html-cache/"/>
      <updated>2014-12-05T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/12/disable-your-html-cache/</id>
      <content type="html">&lt;p&gt;Do you know that usually when you use the back button of your browser, your page won&#39;t be requested to the server again? By default this is the behaviour that you can expect.&lt;/p&gt;
&lt;p&gt;But, you can control it!&lt;/p&gt;
&lt;p&gt;Go to your web.config and place the following code into the &amp;lt;system.web&amp;gt; element.&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;caching&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;outputCache&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;enableOutputCache&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;false&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;outputCache&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;caching&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In your web.config place the following code into the &amp;lt;system.webserver&amp;gt; element to enable the caching for resource files, as images or stylesheets.&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;caching&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;profiles&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;add&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;.gif&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;policy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;kernelCachePolicy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.00:30:00&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Any&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;add&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;.png&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;policy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;kernelCachePolicy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.00:01:00&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Any&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;add&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;policy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;kernelCachePolicy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.00:01:00&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Any&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;add&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;.css&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;policy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;kernelCachePolicy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.00:01:00&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Any&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;add&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;.jpg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;policy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;kernelCachePolicy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.00:01:00&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Any&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;add&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;.jpeg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;policy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;kernelCachePolicy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.00:01:00&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Any&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;add&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;.txt&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;policy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;kernelCachePolicy&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;CacheUntilChange&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0.00:01:00&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Any&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;profiles&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;caching&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Last but not least, create a Base Controller and copy the code below to your base controller.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;        &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;OnActionExecuting&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ActionExecutingContext&lt;/span&gt; filterContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;                &lt;span class=&quot;token comment&quot;&gt;// Code disables caching by browser.&lt;/span&gt;&lt;br&gt;                Response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Cache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;SetCacheability&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;HttpCacheability&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;NoCache&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;                Response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Cache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;SetExpires&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DateTime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;UtcNow&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AddHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;                Response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Cache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;SetNoStore&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Azure deploy and the path length limitation</title>
      <link href="https://gsferreira.com/archive/2014/11/azure-deploy-and-the-path-length-limitation/"/>
      <updated>2014-11-27T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/11/azure-deploy-and-the-path-length-limitation/</id>
      <content type="html">&lt;p&gt;Windows has that boring thing, the &amp;quot;Maximum Path Length Limitation&amp;quot;. That can be a terrible headache when you are dealing with Azure Cloud Service deploy.&lt;/p&gt;
&lt;p&gt;If you create your projects in the Visual Studio default folder (&lt;em&gt;C:\Users\USER\Documents\Visual Studio 2013\Projects&lt;/em&gt;) or in a longer path, probably you already have faced the error:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To fix this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to the Cloud Service project folder.&lt;/li&gt;
&lt;li&gt;Edit the user cloud service options file (&lt;em&gt;*.ccproj&lt;/em&gt; file) in notepad.&lt;/li&gt;
&lt;li&gt;Add the ServiceOutputDirectory element with the value &lt;em&gt;&amp;quot;c:\azure&amp;quot;&lt;/em&gt; for example.&lt;/li&gt;
&lt;li&gt;Open the solution in Visual Studio again and the error has gone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;token prolog&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Project&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;ToolsVersion&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;4.0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;DefaultTargets&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Build&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;http://schemas.microsoft.com/developer/msbuild/2003&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;PropertyGroup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;WorkerRole&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;ServiceOutputDirectory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;c:\azure\&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;ServiceOutputDirectory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;PropertyGroup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Project&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Azure SQL Database: Automatic Backups</title>
      <link href="https://gsferreira.com/archive/2014/10/azure-sql-database-automatic-backups/"/>
      <updated>2014-10-02T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/10/azure-sql-database-automatic-backups/</id>
      <content type="html">&lt;p&gt;This week, I&#39;ve found a new feature in Azure Management Portal that I wished at so many times.&lt;/p&gt;
&lt;p&gt;In July, &lt;a href=&quot;http://weblogs.asp.net/scottgu/windows-azure-july-updates-sql-database-traffic-manager-autoscale-virtual-machines&quot;&gt;Scott Guthrie announced the support for Automated SQL Database Exports.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is awesome because now we can forget the complex powershell scripts to achieve it. Now we can easily configure fully automated exports to a Storage account and, the best part of it, this is a built-in feature of Windows Azure Management Portal.&lt;/p&gt;
&lt;p&gt;If you want to automate the backup of your database, just go your database and jump to the Configuration Section. In this section, you will see the settings available.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/azure-sql-database-automatic-backups-configure-screen.jpg&quot; alt=&quot;Azure SQL Database: Automatic Backups - Configure screen&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here you can configure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The storage account where you want to keep the backup files;&lt;/li&gt;
&lt;li&gt;The backup frequency;&lt;/li&gt;
&lt;li&gt;The retention period;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lastly, you&#39;ll need to enter the SQL Database login name and password.&lt;/p&gt;
&lt;p&gt;So far as I know, you just pay the storage space.&lt;/p&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>How to implement Getting Things Done with Trello</title>
      <link href="https://gsferreira.com/archive/2014/09/how-to-implement-getting-things-done-with-trello/"/>
      <updated>2014-09-08T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/09/how-to-implement-getting-things-done-with-trello/</id>
      <content type="html">&lt;p&gt;Today I want to tell you about one of my favorites productivity methodologies and about one of my favorite tools. Why both? Because they can work perfectly side by side.&lt;/p&gt;
&lt;p&gt;The methodology? &lt;a href=&quot;http://gettingthingsdone.com/&quot;&gt;Getting Things Done (GTD) by David Allen&lt;/a&gt;. GTD is about clearing your mind and put everything you need to do in one place first. Collect, process, doing and keep track of it, are the key of GTD.&lt;/p&gt;
&lt;p&gt;The tool? &lt;a href=&quot;https://trello.com/&quot;&gt;Trello.com&lt;/a&gt;. Do you love Trello? If you don&#39;t, probably you didn&#39;t give him a try. What is Trello?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;Trello is a collaboration tool that organizes your projects into boards. In one glance, Trello tells you what&#39;s being worked on, who&#39;s working on what, and where something is in a proces&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I bet that you can find on the web a ton of good articles that explain the beauty of Trello and how GTD can boost your productivity, but that isn&#39;t the purpose of this post.
The objective here is to explain you how Trello and GTD can work beautifully side by side.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/how-to-implement-getting-things-done-with-trello-funny-productivity.jpg&quot; alt=&quot;Productivity funny&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Why Trello?&lt;/h3&gt;
&lt;p&gt;I&#39;ve been a Trello user since 2012 so I think that I&#39;m a kind of Trello Ninja. Besides that, I follow the David Allen methodology and I&#39;ve struggled to put the system rolling until I use Trello to support it.&lt;/p&gt;
&lt;p&gt;Trello is based on the &lt;a href=&quot;http://en.wikipedia.org/wiki/Kanban&quot;&gt;Kanban&lt;/a&gt; method. Kanban it&#39;s a way to visualize workflow. Usually a &lt;a href=&quot;http://en.wikipedia.org/wiki/Kanban_board&quot;&gt;kanban board&lt;/a&gt; consists in several columns for different phases for a task. Trello also offers you multiple forms of organization like: boards, lists, cards and checklists.&lt;/p&gt;
&lt;h3&gt;System setup&lt;/h3&gt;
&lt;p&gt;So, how do I take advantage of it to manage my workflow? I&#39;ve created a Board only for GTD management.&lt;/p&gt;
&lt;p&gt;Lists:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inbox&lt;/li&gt;
&lt;li&gt;Later&lt;/li&gt;
&lt;li&gt;Waiting On&lt;/li&gt;
&lt;li&gt;This Week&lt;/li&gt;
&lt;li&gt;Today&lt;/li&gt;
&lt;li&gt;Done&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/how-to-implement-getting-things-done-with-trello-board.png&quot; alt=&quot;Trello board&quot;&gt;&lt;/p&gt;
&lt;p&gt;I also have used labels to setup contexts like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;home&lt;/li&gt;
&lt;li&gt;blog&lt;/li&gt;
&lt;li&gt;work&lt;/li&gt;
&lt;li&gt;High Priority (Use the red label for it)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Appling labels to cards, related to contexts, help me to see only the cards from my current context. You can also use labels only for priority management.&lt;/p&gt;
&lt;h3&gt;Weekly review&lt;/h3&gt;
&lt;p&gt;On Mondays morning I look at my Trello &amp;quot;Later&amp;quot; list and move all the tasks into the &amp;quot;This week&amp;quot; or &amp;quot;Today&amp;quot; list.&lt;/p&gt;
&lt;h3&gt;Daily review&lt;/h3&gt;
&lt;p&gt;Use the &amp;quot;Inbox&amp;quot; list as capture repository. Process the items in the &amp;quot;Inbox&amp;quot; list daily and move them to the list that you want.
When a task is complete, archive the card.&lt;/p&gt;
&lt;p&gt;Move the cards where I&#39;m expecting someone else to do a task, to the &amp;quot;Waiting On&amp;quot; list so I can keep on top of everything.&lt;/p&gt;
&lt;p&gt;If I have a complex project, I create a specific board for that project. Then, I can create some lists to control the status of each task, like: To Do, Doing, Testing, Done.&lt;/p&gt;
&lt;p&gt;Before implementing your own system, read also these great examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://joshuaearl.com/rocking-gtd-with-trello/&quot;&gt;Rocking GTD with Trello&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://schurpf.com/getting-things-done-trello-google-calendar-evernote-zapier-project-task-management/&quot;&gt;Getting Things Done with Trello, Google Calendar, Evernote and Zapier ‚Äì Project and Task Management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Automate NuGet package creation using Grunt</title>
      <link href="https://gsferreira.com/archive/2014/08/automate-nuget-package-creation-using-grunt/"/>
      <updated>2014-08-29T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/08/automate-nuget-package-creation-using-grunt/</id>
      <content type="html">&lt;p&gt;Probably you are already using Grunt, to automate the tasks to build your application or library. In &lt;a href=&quot;https://github.com/TalksLab/metro-bootstrap&quot;&gt;metro-bootstrap&lt;/a&gt; we are using Grunt to automate the build process, but until now there&#39;s a last step that we are doing manually: &lt;strong&gt;create the NuGet package&lt;/strong&gt; for new releases, until today.&lt;/p&gt;
&lt;p&gt;How we automate the package build?&lt;/p&gt;
&lt;p&gt;It&#39;s simpler than it seems.&lt;/p&gt;
&lt;h3&gt;1. Install nuget&lt;/h3&gt;
&lt;p&gt;First make sure that you have nuget.exe in your machine.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Is NuGet.exe in your PATH?&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open a command prompt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type &lt;em&gt;nuget&lt;/em&gt; and hit enter.&lt;/p&gt;
&lt;p&gt;2.1. If the nuget help documentation is displayed, then nuget.exe is already in your PATH.&lt;/p&gt;
&lt;p&gt;2.2. If you received the message, &amp;quot;&#39;nuget&#39; is not recognized as an internal or external command, operable program or batch file.&amp;quot; then nuget.exe is not in your PATH.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;How to add NuGet.exe to your PATH?&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open a command prompt.&lt;/li&gt;
&lt;li&gt;Enter the following command: &lt;em&gt;set PATH=%PATH%;C:\nuget&lt;/em&gt; where &amp;quot;c:\nuget&amp;quot; is the path to the nuget.exe (&lt;a href=&quot;http://docs.nuget.org/docs/start-here/installing-nuget#Installing_a_CI_build&quot;&gt;available here&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;2. Create the NuGet definition file&lt;/h3&gt;
&lt;p&gt;Create the following XML file with the definition for the package with the &lt;em&gt;&amp;quot;.nuspec&amp;quot;&lt;/em&gt; extension.&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;token prolog&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot;?&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;package&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;metadata&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!--&lt;br&gt;            ID used to identify the nuget package&lt;br&gt;            --&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;metro-bootstrap&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;            &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!--&lt;br&gt;            Package version - leave this blank&lt;br&gt;            --&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;0.0.0&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;            &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Author, Owner and Licensing details --&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;authors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;TalksLab&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;authors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;owners&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;TalksLab&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;owners&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;requireLicenseAcceptance&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;requireLicenseAcceptance&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;copyright&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Copyright 2014&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;copyright&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;            &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- General Information --&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;description&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;metro-bootstrap: Twitter Bootstrap with Metro style&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;description&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;releaseNotes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;-&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;releaseNotes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;twitter bootstrap css metro responsive html5 talkslab&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;            &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!--&lt;br&gt;            Packages (incl. minimum version) on which this package&lt;br&gt;            depends&lt;br&gt;            --&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;              &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Twitter.Bootstrap.Less&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;3.2.0.1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;metadata&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;files&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app\less\*&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;content\Content\metro-bootstrap&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;dist\css\metro-bootstrap.css&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;content\Content&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;dist\css\metro-bootstrap.min.css&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;content\Content&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;files&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;package&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Define in the files element the files to copy to the package.
If you want to test the nuspec file, just type the following command in the command line (where mypackage.nuspec is the name of the nuspec file).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    nuget pack mypackage.nuspec
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;3. Create grunt task to build the NuGet package&lt;/h3&gt;
&lt;p&gt;In order to create the file, go to the grunt script and add the following task (just rename the definition file name):&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;grunt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;registerTask&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;nuget&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Create a nuget package&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; done &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token comment&quot;&gt;//invoke nuget.exe&lt;/span&gt;&lt;br&gt;  grunt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      cmd&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;nuget.exe&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;      args&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token comment&quot;&gt;//definition file&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;pack&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;metro-bootstrap.nuspec&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&quot;token comment&quot;&gt;//path where the package should be created&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;-OutputDirectory&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;nuget&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&quot;token comment&quot;&gt;//override the version using the version in package.json&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;-Version&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;        grunt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pkg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;version&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        grunt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        grunt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token function&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, just open the command line and run the &lt;em&gt;&amp;quot;grunt nuget&amp;quot;&lt;/em&gt; command, and a nuget package will be created.&lt;/p&gt;
&lt;p&gt;The configuration used in this post is running on &lt;a href=&quot;https://github.com/TalksLab/metro-bootstrap&quot;&gt;metro-bootstrap&lt;/a&gt; library. Fill free to fork it and try.&lt;/p&gt;
&lt;p&gt;I hope this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>metro-bootstrap 3.2.0.1 released</title>
      <link href="https://gsferreira.com/archive/2014/08/metro-bootstrap-3-2-0-1-released/"/>
      <updated>2014-08-07T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/08/metro-bootstrap-3-2-0-1-released/</id>
      <content type="html">&lt;p&gt;Yesterday we released metro-bootstrap 3.2.0.1. The new version brings the update to bootstrap 3.2.0 and some new configurations related to tiles.&lt;/p&gt;
&lt;h1&gt;What&#39;s new&lt;/h1&gt;
&lt;h2&gt;Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;bootstrap 3.2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bower configuration - Add &amp;quot;main&amp;quot;&lt;/h2&gt;
&lt;p&gt;Has been added the &amp;quot;main&amp;quot; option to the bower.json file. Thanks to &lt;a href=&quot;https://github.com/fumitoito&quot;&gt;@fumito_ito&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;New variables&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;@tile-light-text-color&lt;/em&gt;: Set the default color for &lt;em&gt;tile-clouds&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;@tile-font-size-h1&lt;/em&gt;: Set the default font size in h1 tags inside tiles.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;@tile-font-size-h2&lt;/em&gt;: Set the default font size in h2 tags inside tiles.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;@tile-font-size-h3&lt;/em&gt;: Set the default font size in h3 tags inside tiles.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;@tile-font-size-h4&lt;/em&gt;: Set the default font size in h4 tags inside tiles.&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
      <title>Have fun with Cortana</title>
      <link href="https://gsferreira.com/archive/2014/07/have-fun-with-cortana/"/>
      <updated>2014-07-31T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/07/have-fun-with-cortana/</id>
      <content type="html">&lt;p&gt;Have you heard about Cortana? If you are a proud owner of a Windows Phone, I bet you did.&lt;/p&gt;
&lt;p&gt;To the others, Cortana is like Siri, but for Windows Phone. One of the few things where iPhone was the first, since Windows Phone release (if you are an Apple fan, I bet that you want to leave your opinion, scroll down and leave a comment, but remember that this is just my humble opinion ‚ò∫ ).&lt;/p&gt;
&lt;p&gt;If you have a Windows Phone with 8.1 installed you can start using Cortana. I have been testing and I found some funny questions and another more useful.&lt;/p&gt;
&lt;p&gt;I leave a cool list below.&lt;/p&gt;
&lt;h2&gt;Funny commands&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tell me a joke.&lt;/li&gt;
&lt;li&gt;Sing me a song.&lt;/li&gt;
&lt;li&gt;Tell me a story.&lt;/li&gt;
&lt;li&gt;What does the fox say?&lt;/li&gt;
&lt;li&gt;Knock knock.&lt;/li&gt;
&lt;li&gt;Why did the chicken cross the road?&lt;/li&gt;
&lt;li&gt;Say something funny.&lt;/li&gt;
&lt;li&gt;Where do babies come from?&lt;/li&gt;
&lt;li&gt;What is the meaning of life?&lt;/li&gt;
&lt;li&gt;Guess what?&lt;/li&gt;
&lt;li&gt;Do you like Siri?&lt;/li&gt;
&lt;li&gt;What are you wearing?&lt;/li&gt;
&lt;li&gt;May the force be with you.&lt;/li&gt;
&lt;li&gt;Cortana, I&#39;m your father.&lt;/li&gt;
&lt;li&gt;Which is better: Linux or Windows?&lt;/li&gt;
&lt;li&gt;Are you drunk?&lt;/li&gt;
&lt;li&gt;Can you cook?&lt;/li&gt;
&lt;li&gt;Fu*k you.&lt;/li&gt;
&lt;li&gt;Cortana.&lt;/li&gt;
&lt;li&gt;Talk dirty.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Useful commands&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Call Peter.&lt;/li&gt;
&lt;li&gt;Text Peter.&lt;/li&gt;
&lt;li&gt;Add appointment to calendar tomorrow.&lt;/li&gt;
&lt;li&gt;What do I have next?&lt;/li&gt;
&lt;li&gt;Remind me to call Peter tomorrow.&lt;/li&gt;
&lt;li&gt;Note: Get eggs.&lt;/li&gt;
&lt;li&gt;Wake me up at 8 AM.&lt;/li&gt;
&lt;li&gt;What song is playing.&lt;/li&gt;
&lt;li&gt;Pause playing.&lt;/li&gt;
&lt;li&gt;Forecast for tomorrow.&lt;/li&gt;
&lt;li&gt;Forecast for tomorrow in celsius degrees.&lt;/li&gt;
&lt;li&gt;Change in Celsius.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy and have fun!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Your product needs an identity</title>
      <link href="https://gsferreira.com/archive/2014/07/your-product-needs-an-identity/"/>
      <updated>2014-07-23T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/07/your-product-needs-an-identity/</id>
      <content type="html">&lt;p&gt;Have you ever asked yourself why people fall in love with products? Recently I listen &lt;a href=&quot;http://sethgodin.typepad.com/&quot;&gt;Seth Godin&lt;/a&gt; saying that &lt;em&gt;&amp;quot;if you are making a product for everyone, you are making a product for no one&amp;quot;&lt;/em&gt;. I believe that this incredible sentence reveals the answer to the question.&lt;/p&gt;
&lt;p&gt;This post will tell you why it&#39;s so important to create a strong identity for your product.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/your-product-needs-an-identity-homer-simpson-donut-dream.gif&quot; alt=&quot;product-love&quot;&gt;&lt;/p&gt;
&lt;p&gt;The philosophy behind Seth&#39;s words isn&#39;t something new. You probably heard about this on product development methodologies or about the &lt;a href=&quot;http://bowden2bowden.co/2012/10/25/horizontal-marketing-versus-vertical-marketing/&quot;&gt;&lt;em&gt;horizontal marketing&lt;/em&gt; vs &lt;em&gt;vertical marketing&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&#39;m a defensor that we should read Seth&#39;s advise as &amp;quot;a product should have a mission, a vision, an identity, as if we were describing a person, a friend&amp;quot;, because when we are creating something for everyone, a &amp;quot;horizontal product&amp;quot;, we usually add complexity and a lack of &amp;quot;identity&amp;quot; to our product.&lt;/p&gt;
&lt;p&gt;So, &lt;strong&gt;what makes up an identity?&lt;/strong&gt; It‚Äôs what you stand for, it&#39;s your passions, values and beliefs.&lt;/p&gt;
&lt;p&gt;The world around us has a lot of good examples of this, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Apple&lt;/strong&gt;: Has an identity of innovation and design.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;McDonald&#39;s&lt;/strong&gt;: Provide the best quick service restaurant experience. Let&#39;s be honest, isn&#39;t McDonald&#39;s one of the first options that came to your mind when you need a quick meal?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Basecamp&lt;/strong&gt;: Has started with a mission to create an awesome project management tool for design companies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Personas&lt;/strong&gt;: UX and Design teams, usually start by creating a persona that represents a hypothetical customer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Google&lt;/strong&gt;: Simplicity and information side by side.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gourmet restaurants&lt;/strong&gt;: They create a clear identity based on quality, trying to reach a concrete market.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Why an identity is so important?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;People feel attracted to strong identities and tend to create a relation with a brand or a product that has some characteristics that they like. As &lt;a href=&quot;http://unicornfree.com/2014/how-do-you-market-a-product-thats-for-everyone&quot;&gt;Amy Hoy&lt;/a&gt; said &lt;em&gt;&amp;quot;Nobody wants to be everybody&amp;quot;&lt;/em&gt;.
Your friends are amazing because of their unique personality or because they are likable people?! I bet that you like them because they are awesome.&lt;/p&gt;
&lt;iframe src=&quot;https://giphy.com/embed/ly12YiQjsvupi&quot; width=&quot;500&quot; height=&quot;233&quot; frameBorder=&quot;0&quot; webkitAllowFullScreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowFullScreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;So, if you are creating a product, you should try to find your identity and remember that, your target market should see in your identity a personality that they love. Then, just keep in mind &amp;quot;who you are&amp;quot; and you will see people falling in love with your product.&lt;/p&gt;
&lt;!--[![shut-up-and-take-my-money](/images/00-global-shut-up-and-take-my-money.gif)](http://knowyourmeme.com/photos/264241-shut-up-and-take-my-money)--&gt;
&lt;p&gt;An identity isn&#39;t just something to be written on a wall. It‚Äôs something that you believe and that you live it everyday.&lt;/p&gt;
&lt;p&gt;Just remember, &amp;quot;it‚Äôs for everybody!&amp;quot; probably isn&#39;t the best answer.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Analyse Azure Log Tables using SQL Queries</title>
      <link href="https://gsferreira.com/archive/2014/07/analyse-azure-log-tables-using-sql-queries/"/>
      <updated>2014-07-15T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/07/analyse-azure-log-tables-using-sql-queries/</id>
      <content type="html">&lt;p&gt;If you are using &lt;a href=&quot;http://azure.microsoft.com/en-us/documentation/articles/cloud-services-dotnet-diagnostics/&quot;&gt;Diagnostics&lt;/a&gt; in Microsoft Azure, probably you walked through the horrible experience of analyse that data, specially if you are looking for a specific TimeStamp in the middle of tons of records.&lt;/p&gt;
&lt;p&gt;This is so slow because the TimeStamp column, in Azure Table Storage, isn&#39;t indexed, but if you take a closer view, you will see that the partition key of WADLogTable is the date-time in ticks, and querying by the partition key is incredible fast.&lt;/p&gt;
&lt;p&gt;If you want to query your table manually you will need to convert your date into ticks like this:&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token class-name&quot;&gt;DateTime&lt;/span&gt; dt &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt;&lt;/span&gt; tks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; dt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Ticks&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    Console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This can be useful, but in some cases you will need to query over the &amp;quot;Message&amp;quot; column and that can be hard.&lt;/p&gt;
&lt;p&gt;To overtake this difficulty, recently I was looking for a way to run SQL queries over the WADLogsTable since the Azure Storage Explorer isn&#39;t a good help. So, I have found this great tool &lt;a href=&quot;https://github.com/SageLukeDean/AzureLogSpelunker&quot;&gt;AzureLogSpelunker&lt;/a&gt; by &lt;a href=&quot;https://github.com/SageLukeDean&quot;&gt;Luke Dean&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/analyse-azure-log-tables-using-sql-queries-azurelogspelunker.png&quot; alt=&quot;AzureLogSpelunker&quot;&gt;&lt;/p&gt;
&lt;p&gt;AzureLogSpelunker can be used to request the logs for a specific period, then the tool will cache them locally in a SQLite database where you may run SQL queries. This tool is a must have if you are using the Microsoft Azure Platform.&lt;/p&gt;
&lt;p&gt;I hope this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>metro-bootstrap with improved tiles</title>
      <link href="https://gsferreira.com/archive/2014/07/metro-bootstrap-with-improved-tiles/"/>
      <updated>2014-07-04T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/07/metro-bootstrap-with-improved-tiles/</id>
      <content type="html">&lt;p&gt;Yesterday we released metro-bootstrap 3.1.1.2. The highlights of this release are based on improvements to tiles. We have been working to give you the flexibility to implement tiles where you want and as you want.&lt;/p&gt;
&lt;p&gt;In the previous version metro-bootstrap tiles were based on the Thumbnail component of bootstrap that will let you place them side by side easily. Now you will be able to place a tile in a &amp;quot;div&amp;quot; tag, for example, and set the positioning as you want.&lt;/p&gt;
&lt;h1&gt;What&#39;s new&lt;/h1&gt;
&lt;p&gt;Here&#39;s a look at tiles news.&lt;/p&gt;
&lt;h2&gt;New positioning - Remove Thumbnail dependency&lt;/h2&gt;
&lt;p&gt;In the last version was mandatory to use thumbnails, now don&#39;t. If you want, you can use them, but you aren&#39;t obligated anymore. For example, if you want to create a Tile board taking part of the Bootstrap grid system you can (&lt;a href=&quot;http://talkslab.github.io/metro-bootstrap/dashboardtemplate.html&quot;&gt;you can find here an example of how you can accomplish this&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;New template&lt;/h2&gt;
&lt;p&gt;You can find &lt;a href=&quot;http://talkslab.github.io/metro-bootstrap/dashboardtemplate.html&quot;&gt;here&lt;/a&gt; a template of a responsive dashboard based on tiles.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/metro-bootstrap-with-improved-tiles-dashboard-template.png&quot; alt=&quot;metro-bootstrap dashboard template&quot;&gt;&lt;/p&gt;
&lt;h2&gt;New colors&lt;/h2&gt;
&lt;p&gt;Using the info, danger, warning and success colors already defined in bootstrap, you can add the following classes to your tiles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;tile-info&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tile-danger&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tile-warning&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tile-success&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;New default variables&lt;/h2&gt;
&lt;p&gt;In the &lt;em&gt;variables.less&lt;/em&gt; file you can find the following variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;@tile-bg&lt;/em&gt; to define the default color for tiles&lt;/li&gt;
&lt;li&gt;&lt;em&gt;@tile-border&lt;/em&gt; to define the border size&lt;/li&gt;
&lt;li&gt;&lt;em&gt;@tile-border-bg&lt;/em&gt; to define the border color&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;New sizes&lt;/h2&gt;
&lt;p&gt;Following the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/hh465403.aspx&quot;&gt;Microsoft Guidelines&lt;/a&gt; were implemented new classes and now it&#39;s possible define the following sizes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Small (70x70). Add the css class &lt;em&gt;tile-small&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Medium (150x150). Add the css class &lt;em&gt;tile-medium&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Wide (310x150). Add the css class &lt;em&gt;tile-wide&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Large (310x310). Add the css class &lt;em&gt;tile-large&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Tile title&lt;/h2&gt;
&lt;p&gt;Place a tile title on the lower left corner.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tile-label&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Tile 5&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;What&#39;s next&lt;/h2&gt;
&lt;p&gt;Well, since Bootstrap v3.2.0 has been released we&#39;ll be updating metro-bootstrap to be compatible with it soon.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Add documentation to your Web API in 5 steps</title>
      <link href="https://gsferreira.com/archive/2014/06/add-documentation-to-your-web-api-in-5-steps/"/>
      <updated>2014-06-27T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/06/add-documentation-to-your-web-api-in-5-steps/</id>
      <content type="html">&lt;p&gt;APIs are created to expose the system to other developers, so we need to provide documentation that explain how to use our API.&lt;/p&gt;
&lt;p&gt;So far, so good, but maintain documents manually is a kind of boring. What about auto-generate it?&lt;/p&gt;
&lt;p&gt;Well, if you are using ASP.NET Web API this is a piece of cake.&lt;/p&gt;
&lt;p&gt;How to add documentation to your ASP.NET Web API?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &amp;quot;&lt;em&gt;Microsoft.AspNet.WebApi.HelpPage&lt;/em&gt;&amp;quot; package from nuget. (If you are using VB.NET install &amp;quot;&lt;em&gt;Microsoft.AspNet.WebApi.HelpPage.VB&lt;/em&gt;&amp;quot;). This package will create an Area called &amp;quot;Help&amp;quot; in the API project.&lt;/li&gt;
&lt;li&gt;Make sure that you have the following code in the &amp;quot;&lt;em&gt;Application_Start&lt;/em&gt;&amp;quot; method at your Global.asax file: &lt;em&gt;AreaRegistration.RegisterAllAreas();&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Documentation will be available in the &lt;em&gt;/Help&lt;/em&gt; URI. So, just add a link to it in your application.&lt;/li&gt;
&lt;li&gt;To enable the XML Documentation comments, open the file &lt;em&gt;Areas/HelpPage/App_Start/HelpPageConfig.cs&lt;/em&gt; and uncomment the line &amp;quot;&lt;em&gt;config.SetDocumentationProvider(new XmlDocumentationProvider(HttpContext.Current.Server.MapPath(&amp;quot;~/App_Data/XmlDocument.xml&amp;quot;)));&lt;/em&gt;&amp;quot;&lt;/li&gt;
&lt;li&gt;In Solution Explorer, right-click the project, select Properties, then go to the &lt;em&gt;Build&lt;/em&gt; page. In the &lt;em&gt;Output&lt;/em&gt; section check the &lt;em&gt;XML documentation file&lt;/em&gt; property and set the text box with the value &amp;quot;App_Data/XmlDocument.xml&amp;quot;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now you are able to start adding comments to your Web API methods, as you can see in the following example:&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;/// &amp;lt;summary&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;/// Get text by ID&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;/// &amp;lt;/summary&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;/// &amp;lt;param name=&quot;id&quot;&gt;ID used to get the result text.&amp;lt;/param&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Build your application and you are done! Now, if you want to do some advanced stuff, I recommend that you take a look into the following posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.asp.net/web-api/overview/creating-web-apis/creating-api-help-pages&quot;&gt;Creating Help Pages for ASP.NET Web API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blogs.msdn.com/b/yaohuang1/archive/2012/12/10/asp-net-web-api-help-page-part-3-advanced-help-page-customizations.aspx&quot;&gt;Advanced Help Page customizations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blogs.msdn.com/b/yaohuang1/archive/2012/08/15/introducing-the-asp-net-web-api-help-page-preview.aspx&quot;&gt;Introducing the ASP.NET Web API Help Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Update GitHub Pages using a project subfolder</title>
      <link href="https://gsferreira.com/archive/2014/06/update-github-pages-using-a-project-subfolder/"/>
      <updated>2014-06-21T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/06/update-github-pages-using-a-project-subfolder/</id>
      <content type="html">&lt;p&gt;Do you have a project in GitHub and you are tired of manage the &lt;em&gt;gh-pages&lt;/em&gt; branch manually?! If so, stay tuned because that can be pretty simple.&lt;/p&gt;
&lt;p&gt;I used to make a full copy of the master repository into the &lt;em&gt;gh-pages&lt;/em&gt; using the &lt;em&gt;rebase&lt;/em&gt; command, but this brings a lack of organization because it&#39;s difficult don&#39;t mix the source code and the web pages files.&lt;/p&gt;
&lt;iframe src=&quot;https://giphy.com/embed/upvM3uYBjh6ww/mp4&quot; width=&quot;500&quot; height=&quot;378&quot; frameBorder=&quot;0&quot; webkitAllowFullScreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowFullScreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;This is the process that I used to update the full branch:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    git checkout gh-pages // go to the gh-pages branch
    git rebase master // bring gh-pages up to date with master
    git push origin gh-pages // commit the changes
    git checkout master // return to the master branch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Recently I re-organize my repository to have a &lt;em&gt;docs&lt;/em&gt; subdirectory, on the master branch, where I put the files required for web pages and with the following command I did some magic:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    git subtree push --prefix docs origin gh-pages // Replace &#39;docs&#39; by your folder name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, the &lt;em&gt;docs&lt;/em&gt; folder is the root directory of gh-pages branch.&lt;/p&gt;
&lt;p&gt;This seems pretty simple, but in the process I found some troubled waters. So, I leave the details here, in case you get the same problem.&lt;/p&gt;
&lt;p&gt;In my first tries I got the following error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    ! [rejected]        1835ac01fe63c030216c22d3d834366d5e2a854r -&amp;gt; gh-pages (non-f
    ast-forward)
    error: failed to push some refs to &#39;https://github.com/gsferreira/myrepository.
    git&#39;
    hint: Updates were rejected because a pushed branch tip is behind its remote
    hint: counterpart. Check out this branch and integrate the remote changes
    hint: (e.g. &#39;git pull ...&#39;) before pushing again.
    hint: See the &#39;Note about fast-forwards&#39; in &#39;git push --help&#39; for details.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to get rid of this error, I suggest that you delete your gh-pages branch and then recreate it before execute the &lt;em&gt;git subtree&lt;/em&gt; command.&lt;/p&gt;
&lt;p&gt;How to delete a branch?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    git push origin :gh-pages
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I hope this helps you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Bringing Grunt and Bower to metro-bootstrap</title>
      <link href="https://gsferreira.com/archive/2014/06/bringing-grunt-and-bower-to-metro-bootstrap/"/>
      <updated>2014-06-05T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/06/bringing-grunt-and-bower-to-metro-bootstrap/</id>
      <content type="html">&lt;p&gt;Since we publish &lt;a href=&quot;https://github.com/TalksLab/metro-bootstrap&quot;&gt;metro-bootstrap&lt;/a&gt; we saw an incredible acceptance to the project and we are really happy to have decided to delivery it as an open source project.&lt;/p&gt;
&lt;p&gt;This project has grown up with a lack of structure in my opinion, so, this week I&#39;ve been working to add Grunt and Bower to metro-bootstrap. To accomplish this task, I have the valuable help of &lt;a href=&quot;http://yeoman.io/&quot;&gt;Yeoman&lt;/a&gt;. If you&#39;re like me, and &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; or &lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; are crazy talk, you will find in Yeoman a great way to start.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://yeoman.io/&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/bringing-grunt-and-bower-to-metro-bootstrap-yeoman.jpg&quot; alt=&quot;Yeoman&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We have adopted bower for dependency management, so we can manage the dependencies in a declarative way. Now you can know the current dependencies looking at the bower.json file.&lt;/p&gt;
&lt;p&gt;Since the metro-bootstrap release, we always work on .less files, but we also release the css file and a minified version of it. To do this, we used some tools like &lt;a href=&quot;http://wearekiss.com/simpless&quot;&gt;SimpLESS&lt;/a&gt; or &lt;a href=&quot;http://winless.org/&quot;&gt;WinLess&lt;/a&gt;. This is over, now we leave this responsibility to Grunt. Grunt is the tool to compile the less files, minify the css files and release our page for GitHub Pages.&lt;/p&gt;
&lt;p&gt;What have changed? Take a look.&lt;/p&gt;
&lt;h2&gt;Repository structure&lt;/h2&gt;
&lt;p&gt;In the repository you will find the following directories:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;app/
‚îú‚îÄ‚îÄ fonts/
‚îÇ   ‚îî‚îÄ‚îÄ (FontAwesome files)
‚îî‚îÄ‚îÄ less/
    ‚îî‚îÄ‚îÄ (metro-bootstrap less files)
dist/
‚îú‚îÄ‚îÄ fonts/
‚îÇ   ‚îî‚îÄ‚îÄ font-awesome/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ (FontAwesome files)
‚îî‚îÄ‚îÄ css/
    ‚îú‚îÄ‚îÄ metro-bootstrap.css
    ‚îî‚îÄ‚îÄ metro-bootstrap.min.css
docs/
‚îî‚îÄ‚îÄ (metro-bootstrap GitHub Pages)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We provide compiled CSS (&lt;code&gt;metro-bootstrap.css&lt;/code&gt;) in the dist folder, as well as compiled and minified CSS (&lt;code&gt;metro-bootstrap.min.css&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;Instaling Dependencies&lt;/h2&gt;
&lt;p&gt;We manage dependencies using Bower.
Run &lt;code&gt;bower install&lt;/code&gt; to download the required dependencies.&lt;/p&gt;
&lt;p&gt;If don&#39;t have Grunt installed, execute the following steps from the command line:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure you have node.js installed.&lt;/li&gt;
&lt;li&gt;Install bower with &lt;code&gt;npm install -g bower&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Compiling CSS&lt;/h2&gt;
&lt;p&gt;We compile metro-bootstrap using &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt;.
Run &lt;code&gt;grunt build&lt;/code&gt; to compile the CSS into &lt;code&gt;/dist&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If don&#39;t have Grunt installed, execute the following steps from the command line:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure you have node.js installed.&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;grunt-cli&lt;/code&gt; globally with &lt;code&gt;npm install -g grunt-cli&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go to the &lt;code&gt;metro-bootstrap&lt;/code&gt; directory, then run &lt;code&gt;npm install&lt;/code&gt;. npm will look at package.json and automatically install the necessary dependencies.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, go fork it!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Reasons to blogging with GitHub Pages and Sandra.Snow</title>
      <link href="https://gsferreira.com/archive/2014/05/reasons-to-blogging-with-github-pages-and-sandra-snow/"/>
      <updated>2014-05-31T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/05/reasons-to-blogging-with-github-pages-and-sandra-snow/</id>
      <content type="html">&lt;p&gt;This is my second try to create a personal blog and the third blog where I&#39;m writing. The first two experiences were in WordPress.&lt;/p&gt;
&lt;p&gt;In the past, my attempts failed by my fault, lack of commitment... But during the process, I learned how hard is to maintain a self hosted blog.&lt;/p&gt;
&lt;p&gt;Create content to a blog is really time-consuming, so I don&#39;t need more work to maintain it. Maybe this is my Developer side telling me to stay away from maintenance tasks, like update packages and be sure that I&#39;m not hacked.&lt;/p&gt;
&lt;p&gt;let&#39;s be realistic, when we&#39;re a blogger &lt;strong&gt;the focus should be the content&lt;/strong&gt;, the other tasks are just a black hole for the precious free time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/reasons-to-blogging-using-github-pages-and-sandra-snow-my-precious-time.jpg&quot; alt=&quot;Gollum - My Precious Time&quot;&gt;&lt;/p&gt;
&lt;p&gt;So, what I was looking for when I started this page?!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write using markdown&lt;/li&gt;
&lt;li&gt;Comments using Disqus&lt;/li&gt;
&lt;li&gt;Easy customization&lt;/li&gt;
&lt;li&gt;Reduce the infrastructure costs&lt;/li&gt;
&lt;li&gt;A lightweight blog&lt;/li&gt;
&lt;li&gt;No database&lt;/li&gt;
&lt;li&gt;Version control/Hitory&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Based on these requirements, I found &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; hosted over &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;. It fits perfectly and the number of users active can attest it. The downside?! I need ruby to use it. Since I&#39;m a Windows guy and in my professional life I&#39;m mostly connected to .NET Developement I don&#39;t want to install ruby on my machines.&lt;/p&gt;
&lt;p&gt;A friend of mine (&lt;a href=&quot;https://twitter.com/NelsonReis&quot;&gt;@NelsonReis&lt;/a&gt;) suggested I look at &lt;a href=&quot;https://github.com/Sandra/Sandra.Snow&quot;&gt;Sandra.Snow&lt;/a&gt;, a system inspired by Jekyll, which is &lt;strong&gt;written in .NET and &lt;a href=&quot;http://nancyfx.org/&quot;&gt;Nancy&lt;/a&gt;&lt;/strong&gt;, by &lt;a href=&quot;https://twitter.com/philliphaydon&quot;&gt;Phillip Haydon&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/jchannon&quot;&gt;Jonathan Channon&lt;/a&gt;. So, I picked it! Now my website is generated using Sandra.Snow and hosted on GitHub pages.&lt;/p&gt;
&lt;p&gt;During the process, I created &lt;a href=&quot;https://github.com/gsferreira/letsnow&quot;&gt;&lt;em&gt;letsnow&lt;/em&gt;&lt;/a&gt;, a simple theme based on snowbyte theme. You can use it, fork it and contribute. I would love to hear your opinion.&lt;/p&gt;
&lt;p&gt;Well, I could describe here how I did it, but since there&#39;s already a lot of good articles of it, I leave you here some to guide you. You will see that it&#39;s a piece of cake.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.philliphaydon.com/2013/10/introducing-sandra-snow/&quot;&gt;&amp;quot;Introducing Sandra.Snow&amp;quot;&lt;/a&gt; by Phillip Haydon&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.macsdickinson.com/SandraSnow/hello-sandra-snow/#.U4j33_ldXN1&quot;&gt;&amp;quot;Hello Sandra Snow&amp;quot;&lt;/a&gt; by Macs Dickinson&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jonathanchannon.com/2013/10/01/blogging-with-markdown-and-git/&quot;&gt;&amp;quot;Blogging with Markdown &amp;amp; Deploying via Git - Introducing Sandra.Snow&amp;quot;&lt;/a&gt; by Jonathan Channon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/reasons-to-blogging-using-github-pages-and-sandra-snow-feel-like-superhero.png&quot; alt=&quot;Feel like a superhero&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What I hope to see in Sandra.Snow in a near future?!&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate RSS feeds for any category&lt;/li&gt;
&lt;li&gt;More configuration options, like Google Analytics ID or Disqus ID&lt;/li&gt;
&lt;li&gt;A &amp;quot;marketplace&amp;quot; for Sandra.Snow blog templates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&#39;s too early to say that Sandra.Snow is perfect for me, but I hope that it was a wise decision!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>AngularJS - Smart Float Directive</title>
      <link href="https://gsferreira.com/archive/2014/05/angularjs-smart-float-directive/"/>
      <updated>2014-05-24T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/05/angularjs-smart-float-directive/</id>
      <content type="html">&lt;p&gt;Recently I started looking for an AngluarJS directive to validate numbers and I found the &amp;quot;smart-float&amp;quot; directive &lt;a href=&quot;https://docs.angularjs.org/guide/forms&quot;&gt;here&lt;/a&gt;, in the AngularJS documentation. This amazing example solves the problem of convert my numbers that use a comma as decimal mark to a Javascript number.&lt;/p&gt;
&lt;p&gt;My problem is that this directive doesn&#39;t solve my two problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Display numbers with 2 fractional digits by default.&lt;/li&gt;
&lt;li&gt;Validate numbers with thousands separator.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, this is an improved directive based on Angular&#39;s &lt;em&gt;smart-float&lt;/em&gt; directive.
First, add the following directive to your application:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;myApp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;directive&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;smartFloat&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;$filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;FLOAT_REGEXP_1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token regex&quot;&gt;/^\$?\d+.(\d{3})*(\,\d*)$/&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//Numbers like: 1.123,56&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;FLOAT_REGEXP_2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token regex&quot;&gt;/^\$?\d+,(\d{3})*(\.\d*)$/&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//Numbers like: 1,123.56&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;FLOAT_REGEXP_3&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token regex&quot;&gt;/^\$?\d+(\.\d*)?$/&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//Numbers like: 1123.56&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;FLOAT_REGEXP_4&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token regex&quot;&gt;/^\$?\d+(\,\d*)?$/&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//Numbers like: 1123,56&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;    require&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;ngModel&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token function-variable function&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;scope&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; elm&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; attrs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ctrl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;      ctrl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;$parsers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;viewValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;FLOAT_REGEXP_1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;          ctrl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$setValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;float&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewValue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;FLOAT_REGEXP_2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;          ctrl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$setValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;float&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewValue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;FLOAT_REGEXP_3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;          ctrl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$setValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;float&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;FLOAT_REGEXP_4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;          ctrl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$setValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;float&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewValue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;          ctrl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$setValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;float&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;      ctrl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;$formatters&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;modelValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;$filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;number&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;modelValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, add the &lt;em&gt;smart-float&lt;/em&gt; directive to your input:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;inputAmount&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;inputAmount&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Amount&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;ng-model&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;amount&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token attr-name&quot;&gt;smart-float&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This gives you what you need. Now, you can improve it showing to your users that the value in the input is invalid. In the following example I used &lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; to demonstrate it:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myForm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;form-horizontal&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;form&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;novalidate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;form-group&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;ng-class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{&#39;has-error&#39;: myForm.inputAmount.$invalid}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;inputText3&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;col-sm-2 control-label&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Amount&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;col-sm-10&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;form-control&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;inputAmount&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;inputAmount&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token attr-name&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Amount&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token attr-name&quot;&gt;ng-model&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;amount&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;token attr-name&quot;&gt;smart-float&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;help-block&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;ng-show&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;myForm.inputAmount.$error.float&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;        Invalid Amount!&lt;br&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see the working demo on &lt;a href=&quot;http://jsfiddle.net/gsferreira/SCr6X/&quot;&gt;JSFiddle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope that this helps you.&lt;/p&gt;
&lt;h2&gt;UPDATE 2015-03-11&lt;/h2&gt;
&lt;p&gt;Post has been updated with a fix to a bug that &lt;a href=&quot;https://disqus.com/by/coopersellers/&quot;&gt;Cooper Sellers&lt;/a&gt; found (you can see the details at the comment feed below).&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Pomodoro Technique, the productivity sauce</title>
      <link href="https://gsferreira.com/archive/2014/05/pomodoro-technique-the-productivity-sauce/"/>
      <updated>2014-05-19T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/05/pomodoro-technique-the-productivity-sauce/</id>
      <content type="html">&lt;p&gt;You&#39;ve probably heard about the &lt;a href=&quot;http://pomodorotechnique.com/&quot;&gt;Pomodoro Technique&lt;/a&gt;. This is one of the most popular time management tools nowadays. This technique has been developed by &lt;em&gt;&lt;a href=&quot;http://francescocirillo.com/&quot;&gt;Francesco Cirillo&lt;/a&gt;&lt;/em&gt; in the late 1980s.&lt;/p&gt;
&lt;p&gt;In the modern days we keep fighting against the clock, trying to accomplish all the assignments. But in the other hand we have a lot of distractions, as the Facebook messages, new tweets or our phones. The Pomodoro Technique wants to teach you to use the time as your friend, being productive, eliminating the procrastination, the pressure and get free time for yourself. Pomodoro Technique also can be a great complement for other methodology&#39;s. I used it in my &lt;a href=&quot;http://gettingthingsdone.com/&quot;&gt;GTD (Getting Things Done)&lt;/a&gt; workflow for example.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/pomodoro-technique-the-productivity-sauce-modern-family-decisions-under-pressure.jpg&quot; alt=&quot;Modern Family - Decisions under pressure&quot;&gt;&lt;/p&gt;
&lt;p&gt;Pomodoro is the Italian word for tomato, and Francesco named it as pomodoro because he used a kitchen timer with a tomato shape as his personal timer.
The technique consists in for each 25 minute work period (this period is called a &amp;quot;Pomodoro&amp;quot;) take a five minutes break. In this break &lt;strong&gt;you shouldn&#39;t go to your social networks&lt;/strong&gt;... beware of shiny objects. Instead, you should rest your eyes, grab a cup of coffee or go take a walk. Every four pomodoros you should take a longer break of 20 minutes. Frequent breaks keep your mind fresh and focused. Your brain will retrieve you the favor.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/33593406@N03/7738254354/&quot;&gt;&lt;img src=&quot;https://gsferreira.com/images/pomodoro-technique-the-productivity-sauce-pomodoro-timer.jpg&quot; alt=&quot;Pomodoro timer&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!---*&quot;Photo by [Kate Bunker](http://www.flickr.com/photos/33593406@N03/7738254354/) licensed under [Creative Commons Attribution-NonCommercial License](http://creativecommons.org/licenses/by-nc/2.0/).&quot;*
--&gt;
&lt;p&gt;You should be asking &lt;strong&gt;why the 25 minutes&lt;/strong&gt;? I really don&#39;t know, and that is a question that I have made to myself. After some research, I believe that the 25 minutes is the &amp;quot;ideal&amp;quot; period to keep the focus on a single task, if you have longer periods your brain will get tired, but this is a personal conclusion.&lt;/p&gt;
&lt;p&gt;This isn&#39;t applicable for anyone, but if you usually seat down at a desk and you need to get things done, I believe that you can use it. I use it while I&#39;m programming because it helps me stay focused and &amp;quot;force&amp;quot; me to break large tasks into short steps. I also like to use it in teamwork, for example, in pair programming or in a &lt;a href=&quot;http://en.wikipedia.org/wiki/Stand-up_meeting&quot;&gt;Scrum stand-up meeting&lt;/a&gt;. The ticking clock will teach your team that time is running out and the task should completed. If you are questioning yourself if this is a good tool for you, go check this &lt;a href=&quot;http://pomodorotechnique.com/get-started/&quot;&gt;page&lt;/a&gt;, probably you will find your case.&lt;/p&gt;
&lt;p&gt;You could find some problems to apply it, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to concentrate without interruptions, specially if you are inside a team.&lt;/li&gt;
&lt;li&gt;The open-plan offices can be an enemy, so pick the perfect music and put your headphones.&lt;/li&gt;
&lt;li&gt;It&#39;s possible don&#39;t answer your phone during a pomodoro in your position?&lt;/li&gt;
&lt;li&gt;Keep the flow while dealing with interaction with the co-workers.&lt;/li&gt;
&lt;li&gt;Meetings... a necessary evil.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pomodoro Technique is free, you can spend some money to get a kitchen timer if you want‚Ä¶ or you can use any timer program on your computer or phone (I&#39;m using the &lt;a href=&quot;https://chrome.google.com/webstore/detail/simple-pomodoro%C2%AE/blidjjfbdbkcmegfnidmgndgdamhhelp&quot;&gt;&lt;em&gt;Simple Pomodoro&lt;/em&gt; extension for Chrome&lt;/a&gt;). The process isn&#39;t ideal for every person, but if you want to boost your productivity you can try it and let me know the results in the comments below.&lt;/p&gt;
&lt;p&gt;By the way, this post has been written in 4 pomodoros.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>The dark side of dynamic typing</title>
      <link href="https://gsferreira.com/archive/2014/05/the-dark-side-of-dynamic-typing/"/>
      <updated>2014-05-08T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/05/the-dark-side-of-dynamic-typing/</id>
      <content type="html">&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/dd264736.aspx&quot;&gt;Dynamic typing&lt;/a&gt; isn&#39;t anything new in the .NET Framework world, he is available since .NET 4.0 and I&#39;m sure that you have used it. If you didn&#39;t, you should take a spare of time for it. Dynamic typing is great because it let you get your work done faster and it may avoid some complicated reflection code, for example. I&#39;ve used it a lot, but recently I&#39;ve discovered his dark side... &lt;strong&gt;the performance side&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.quickmeme.com/img/e8/e8e8d6ebfd29823854295376337528dc9853a26b27f43c85dd8eb0ed0ab666dc.jpg&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;Why do I say it? If you measure the performance cost of a simple &amp;quot;Set&amp;quot; or &amp;quot;Get&amp;quot; operation you will see a great improvement simply changing it to typed code. You can use the following code to test it.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;//Typed Object performance - SET PERFORMANCE&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;MyClass&lt;/span&gt; myObject &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Reset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    myObject&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Str &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    Console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Typed Object - SET - Elapsed={0}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Elapsed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;//Typed Object performance - GET PERFORMANCE&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Reset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; myObject&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Str&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    Console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Typed Object - GET - Elapsed={0}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Elapsed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;//Dynamic Object performance - SET PERFORMANCE&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;dynamic&lt;/span&gt;&lt;/span&gt; myDynamicObject &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Reset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    myDynamicObject&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Str &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    Console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Dynamic Object - SET - Elapsed={0}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Elapsed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;token comment&quot;&gt;//Dynamic Object performance - GET PERFORMANCE&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Reset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; myDynamicObject&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Str&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    Console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Dynamic Object - GET - Elapsed={0}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Elapsed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this piece of code inside a loop I got the following results. You can see the time differences.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Typed Object - GET - Elapsed=00:00:00.0000022&lt;/li&gt;
&lt;li&gt;Typed Object - SET - Elapsed=00:00:00.0000008&lt;/li&gt;
&lt;li&gt;Dynamic Object - GET - Elapsed=00:00:00.0330937&lt;/li&gt;
&lt;li&gt;Dynamic Object - SET - Elapsed=00:00:00.0027800&lt;/li&gt;
&lt;li&gt;Typed Object - GET - Elapsed=00:00:00&lt;/li&gt;
&lt;li&gt;Typed Object - SET - Elapsed=00:00:00.0000004&lt;/li&gt;
&lt;li&gt;Dynamic Object - GET - Elapsed=00:00:00.0000031&lt;/li&gt;
&lt;li&gt;Dynamic Object - SET - Elapsed=00:00:00.0000026&lt;/li&gt;
&lt;li&gt;Typed Object - GET - Elapsed=00:00:00.0000004&lt;/li&gt;
&lt;li&gt;Typed Object - SET - Elapsed=00:00:00.0000004&lt;/li&gt;
&lt;li&gt;Dynamic Object - GET - Elapsed=00:00:00.0000022&lt;/li&gt;
&lt;li&gt;Dynamic Object - SET - Elapsed=00:00:00.0000026&lt;/li&gt;
&lt;li&gt;Typed Object - GET - Elapsed=00:00:00.0000004&lt;/li&gt;
&lt;li&gt;Typed Object - SET - Elapsed=00:00:00.0000004&lt;/li&gt;
&lt;li&gt;Dynamic Object - GET - Elapsed=00:00:00.0000022&lt;/li&gt;
&lt;li&gt;Dynamic Object - SET - Elapsed=00:00:00.0000022&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&#39;m not trying to tell you to keep a safety distance from dynamic typing, I&#39;m just saying that if you&#39;re building an application where the performance is a key factor, where you don&#39;t need dynamic typing and you really need to pay attention to any fraction of second... so you should keep an eye on it.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Move your database to new SQL Azure Service Tiers</title>
      <link href="https://gsferreira.com/archive/2014/05/move-database-new-sql-azure-service-tiers/"/>
      <updated>2014-05-03T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/05/move-database-new-sql-azure-service-tiers/</id>
      <content type="html">&lt;p&gt;In the last Build conference Scott Guthrie announced the new Basic and Standard tier option to the SQL Databases on Azure. Those tiers bring amazing features and you can find more about them in the &lt;a href=&quot;http://weblogs.asp.net/scottgu/archive/2014/04/29/azure-99-95-sql-database-sla-500-gb-db-size-improved-performance-self-service-restore-and-business-continuity.aspx&quot;&gt;Scott&#39;s post&lt;/a&gt;. If you want to try it, as I did, go ahead and take advantage of the 50% discount during the preview period.&lt;/p&gt;
&lt;p&gt;You can find here how to move your SQL Database currently in the Web or Business edition using the following tips.&lt;/p&gt;
&lt;p&gt;Before you start, make sure that you have a Windows Azure Storage Account and a container in it.&lt;/p&gt;
&lt;p&gt;First of all you should take your web site or any client of your database offline, just to ensure that no one updates the database during this operation.&lt;/p&gt;
&lt;p&gt;Open a connection to your SQL Server using SQL Management Studio. Right click on your database. Choose &lt;em&gt;&amp;quot;Tasks &amp;gt; Export Data-tier Application&amp;quot;&lt;/em&gt;. Make sure that you store the bacpac file in your Windows Azure Storage. You can find a good example &lt;a href=&quot;http://blogs.msdn.com/b/brunoterkaly/archive/2013/09/26/how-to-export-an-on-premises-sql-server-database-to-windows-azure-storage.aspx?Redirected=true&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Now you need to create a SQL Server before create the database&lt;/strong&gt;, by some reason (probably a &amp;quot;preview version bug&amp;quot;) if you try to import the database before create the server you will get an &lt;a href=&quot;http://social.technet.microsoft.com/Forums/en-US/54a073aa-b554-403b-87ca-53196a897c9c/cant-create-a-new-sql-azure-standard-tier-db?forum=ssdsgetstarted&quot;&gt;error&lt;/a&gt;. So, go to &lt;a href=&quot;http://manage.windowsazure.com/&quot;&gt;Azure Manage web site&lt;/a&gt; and create a new SQL Server. Make sure that you set the &amp;quot;Supported Database Editions&amp;quot; to &amp;quot;Basic, Standard, Premium&amp;quot;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/move-database-new-sql-azure-service-tiers-create-server.png&quot; alt=&quot;alt text&quot; title=&quot;Create a new server&quot;&gt;&lt;/p&gt;
&lt;p&gt;After that, add a new SQL Database (imported from the previous backup) to the server created in the last step.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gsferreira.com/images/move-database-new-sql-azure-service-tiers-import-database.png&quot; alt=&quot;alt text&quot; title=&quot;Create a new database menu&quot;&gt;&lt;/p&gt;
&lt;p&gt;Select the Backup that you made, choose one of the Preview Editions and the server created before.&lt;/p&gt;
&lt;p&gt;When the create database operation is completed, just update your connection string and you are ready to go.&lt;/p&gt;
&lt;p&gt;Just remember to delete the backup from storage and the old server if you want.&lt;/p&gt;
&lt;p&gt;Enjoy it!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
      <title>Let&#39;s blog</title>
      <link href="https://gsferreira.com/archive/2014/04/lets-blog/"/>
      <updated>2014-04-28T00:00:00-00:00</updated>
      <id>https://gsferreira.com/archive/2014/04/lets-blog/</id>
      <content type="html">&lt;p&gt;Hi! My name is Guilherme Ferreira. I&#39;m a &lt;a href=&quot;http://www.pinterest.com/igori/portugal/&quot;&gt;Portuguese&lt;/a&gt; software developer, mostly connected to the web development and to the .net Framework, living in the beautiful city of &lt;a href=&quot;http://www.pinterest.com/turismportugal/porto-portugal/&quot;&gt;Porto&lt;/a&gt;. Go check the pictures, I will be right here waiting for you.&lt;/p&gt;
&lt;p&gt;I&#39;m starting this blog with the intent to share the lessons that I learn,
write news about my work and to improve my English writing skills.&lt;/p&gt;
&lt;p&gt;Following this page you can expect to read cool stuff about software development, entrepreneurship, productivity tips and other living stuff.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.gravatar.com/avatar/93c1c26212f9eb3673538e6ad6ca7eb4.png?s=200&quot; alt=&quot;alt text&quot; title=&quot;This is me&quot;&gt;&lt;/p&gt;
&lt;p&gt;Go subscribe the &lt;a href=&quot;http://gsferreira.com/rss.xml&quot;&gt;RSS feed&lt;/a&gt;, visit the &lt;a href=&quot;http://gsferreira.com/about/&quot;&gt;about page&lt;/a&gt; to find my contacts and feel free to contact me.&lt;/p&gt;
&lt;p&gt;I&#39;ll see you soon... and now let&#39;s blog!&lt;/p&gt;
</content>
    </entry>
</feed>