<feed xmlns="http://www.w3.org/2005/Atom"><title type="text">Guilherme Ferreira blog</title><subtitle type="text">Guilherme Ferreira blog</subtitle><id>http://gsferreira.com/</id><updated>2017-09-12T22:13:14+01:00</updated><author><name>Guilherme Ferreira</name><uri>http://gsferreira.com</uri><email>me@gsferreira.com</email></author><generator>Sandra.Snow Atom Generator</generator><link rel="alternate" href="http://gsferreira.com/feed.xml" /><link rel="self" type="text/html" title="Guilherme Ferreira blog" href="http://gsferreira.com/feed.xml" /><entry><id>http://gsferreira.com/archive/2017/09/please-don-t-name-it-utils/</id><title type="text">Please don't name it "Utils"!</title><summary type="html">&lt;p&gt;Imagine that you are working on a code base that you are really proud of. Everything is building up together with great quality and you reach the moment where you need to send a mail. Simple task to you for sure.&lt;/p&gt;

&lt;p&gt;You know that eventually you will need to send emails in other points of your application and because you master the DRY principle you decide to write an &lt;em&gt;"Utils"&lt;/em&gt; class.&lt;/p&gt;

&lt;p&gt;Good idea, isn't it? &lt;strong&gt;NO!!!! Absolutely no!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Why not? What's wrong with an &lt;em&gt;"Utils"&lt;/em&gt; folder or an Utility class?&lt;/p&gt;

</summary><published>2017-09-11T23:00:00Z</published><updated>2017-09-11T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2017/09/please-don-t-name-it-utils/" /><content type="html">&lt;p&gt;Imagine that you are working on a code base that you are really proud of. Everything is building up together with great quality and you reach the moment where you need to send a mail. Simple task to you for sure.&lt;/p&gt;

&lt;p&gt;You know that eventually you will need to send emails in other points of your application and because you master the DRY principle you decide to write an &lt;em&gt;"Utils"&lt;/em&gt; class.&lt;/p&gt;

&lt;p&gt;Good idea, isn't it? &lt;strong&gt;NO!!!! Absolutely no!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Why not? What's wrong with an &lt;em&gt;"Utils"&lt;/em&gt; folder or an Utility class?&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Segregate responsibilities is an important thing, but naming is also important. Readability and discoverability are often underrated.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/please-don-t-name-it-utils-code-sample.png" alt="Utils code sample" /&gt;&lt;/p&gt;

&lt;p&gt;When you create an &lt;em&gt;"Utils"&lt;/em&gt; class you are creating a collection of random stuff. A place where anything can fit and that someone who doesn't know your project won't know what can be found inside the &lt;em&gt;"Utils"&lt;/em&gt;. For them, your &lt;em&gt;"Utils"&lt;/em&gt; it's a kind of magical place where treasures and dragons can be hidden.&lt;/p&gt;

&lt;p&gt;Please don't feel ashamed by doing that, I have done it in the past. 
Phil Karlton once said: &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There are only two hard things in Computer Science: cache invalidation and &lt;strong&gt;naming things&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I prefer a name that doesn't sounds catchy than a name that doesn't make sense.&lt;/p&gt;

&lt;p&gt;So if you are typing  &lt;em&gt;"Utils"&lt;/em&gt;, please stop and think what the hell will this code do? Then, name it according to that.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write to a Log file? Name it &lt;em&gt;"Logger"&lt;/em&gt;. &lt;/li&gt;
&lt;li&gt;Send a mail? Name it &lt;em&gt;"MailSender"&lt;/em&gt;. &lt;/li&gt;
&lt;li&gt;Generate a random message? Name it &lt;em&gt;"MessageGenerator"&lt;/em&gt;. &lt;/li&gt;
&lt;li&gt;Provide string extensions? Name it &lt;em&gt;"StringExtensions"&lt;/em&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get it.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2017/07/rebuilding-sql-database-indexes-using-azure-function/</id><title type="text">Rebuilding SQL Database indexes using Azure Function</title><summary type="html">&lt;p&gt;Do you know that index management is under your responsibility and you need to pay attention to how fragmented they are? If you are reading this post, probably you know that (I hope that you didn't find it in the hard way).&lt;/p&gt;

&lt;p&gt;Azure SQL Database takes care of a lot of maintenance tasks, but keeping your Indexes healthy isn't one of them. &lt;/p&gt;

&lt;p&gt;Indexes get fragmented and fragmented indexes is a performance killer. The good news is that I can help you dealing with that.&lt;/p&gt;

</summary><published>2017-07-19T23:00:00Z</published><updated>2017-07-19T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2017/07/rebuilding-sql-database-indexes-using-azure-function/" /><content type="html">&lt;p&gt;Do you know that index management is under your responsibility and you need to pay attention to how fragmented they are? If you are reading this post, probably you know that (I hope that you didn't find it in the hard way).&lt;/p&gt;

&lt;p&gt;Azure SQL Database takes care of a lot of maintenance tasks, but keeping your Indexes healthy isn't one of them. &lt;/p&gt;

&lt;p&gt;Indexes get fragmented and fragmented indexes is a performance killer. The good news is that I can help you dealing with that.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Do I have a problem?&lt;/h2&gt;

&lt;p&gt;First let's analyze your database. Read &lt;a href="https://blog.sqlauthority.com/2010/01/12/sql-server-fragmentation-detect-fragmentation-and-eliminate-fragmentation/"&gt;this article&lt;/a&gt; to undestand the fragmentation indexs and then execute the following query in your database.&lt;/p&gt;

&lt;script src="https://gist.github.com/gsferreira/fbb3419a367730f53922f0809991d264.js"&gt;&lt;/script&gt;

&lt;p&gt;Scared with the results? If so, keep reading. &lt;/p&gt;

&lt;h2&gt;Azure Function&lt;/h2&gt;

&lt;p&gt;You can find &lt;a href="https://github.com/gsferreira/AzureFunctionSQLDefrag"&gt;here&lt;/a&gt; the code of an Azure Function to automate the index maintenance of multiple databases.&lt;/p&gt;

&lt;p&gt;The function will run and execute a REBUILD and REORGANIZE for Database Indexs, with a given Threshold.&lt;/p&gt;

&lt;p&gt;By default, the Function is configured to Rebuild indexs with more than 30% of fragmentation and reorganize indexs with more than 3% but you can adjust those limits. &lt;/p&gt;

&lt;p&gt;You can add a Connection String to multiple databases at the Application Settings where the name has the prefix "Defrag.".&lt;/p&gt;

&lt;p&gt;You can find information of how to configure it in the project readme file.&lt;/p&gt;

&lt;h3&gt;Important Note!!!&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;The default timeout for functions on a Consumption plan is 5 minutes. The value can be increased to 10 minutes max.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you have a big database, the function can stop running during the index maintenance and don't finish the job.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In that case, you probably want to move to an App Service plan or decompose the function splitting the work by multiple functions. If you want some tips of how to accomplish that, please leave a comment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.sqlauthority.com/2010/01/12/sql-server-fragmentation-detect-fragmentation-and-eliminate-fragmentation/"&gt;https://blog.sqlauthority.com/2010/01/12/sql-server-fragmentation-detect-fragmentation-and-eliminate-fragmentation/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://geeks.ms/davidjrh/2015/10/08/rebuilding-sql-database-indexes-using-azure-automation/"&gt;https://geeks.ms/davidjrh/2015/10/08/rebuilding-sql-database-indexes-using-azure-automation/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexandrebrisebois.wordpress.com/2013/02/06/dont-forget-about-index-maintenance-on-windows-azure-sql-database/"&gt;https://alexandrebrisebois.wordpress.com/2013/02/06/dont-forget-about-index-maintenance-on-windows-azure-sql-database/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.red-gate.com/simple-talk/cloud/cloud-data/azure-sql-database-maintenance/"&gt;https://www.red-gate.com/simple-talk/cloud/cloud-data/azure-sql-database-maintenance/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2017/06/5-reasons-to-convince-your-boss-to-adopt-cake-csharp-make/</id><title type="text">5 reasons to convince your boss to adopt Cake (C# Make)</title><summary type="html">&lt;p&gt;Have you taken a look into &lt;a href="http://cakebuild.net/"&gt;Cake Build&lt;/a&gt;?! It's awesome, isn't it?&lt;/p&gt;

&lt;p&gt;Probably you are already convinced, but you are having trouble convincing your boss that it's worth to give him a chance.&lt;/p&gt;

&lt;p&gt;To help you I give you here five compelling reasons they can't argue with.&lt;/p&gt;

</summary><published>2017-06-25T23:00:00Z</published><updated>2017-06-25T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2017/06/5-reasons-to-convince-your-boss-to-adopt-cake-csharp-make/" /><content type="html">&lt;p&gt;Have you taken a look into &lt;a href="http://cakebuild.net/"&gt;Cake Build&lt;/a&gt;?! It's awesome, isn't it?&lt;/p&gt;

&lt;p&gt;Probably you are already convinced, but you are having trouble convincing your boss that it's worth to give him a chance.&lt;/p&gt;

&lt;p&gt;To help you I give you here five compelling reasons they can't argue with.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/cake-build-logo.png" alt="Cake Build" /&gt;&lt;/p&gt;

&lt;h1&gt;1. It's C# &amp;#10084;&lt;/h1&gt;

&lt;p&gt;If you are working in a .NET shop where C# is the common language, you already have the tools to do the Job and probably isn't a good idea to adopt a new language. &lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Bus_factor"&gt;BUS Factor&lt;/a&gt;&lt;/strong&gt; is a good metric to illustrate the risk of adopting a new language for a build system.&lt;/p&gt;

&lt;p&gt;Cake scripts are written in C# and you can use all the knowledge that you already have.&lt;/p&gt;

&lt;h1&gt;2. Living form of documentation&lt;/h1&gt;

&lt;p&gt;What is the best way to describe your system? With coded tests. So &lt;strong&gt;what is the best way to describe your build? With code&lt;/strong&gt; for sure!&lt;/p&gt;

&lt;p&gt;As we all know, keeping a word document up-to-date is a painful task that one day someone will forget to update it. So, if you know how to read C#, you can read a script that documents it.&lt;/p&gt;

&lt;p&gt;You also have the bonus of having a &lt;strong&gt;versioned build script&lt;/strong&gt; if you add it to your source control.&lt;/p&gt;

&lt;p&gt;Isn't powerful to know that in the future you can go back and see how your software was built in the past week?&lt;/p&gt;

&lt;p&gt;Nevertheless, doing this kind of tasks manually shouldn't be a manual process. &lt;strong&gt;“For loops” are for computers&lt;/strong&gt; and as programmers we know how to teach them to do it.&lt;/p&gt;

&lt;h1&gt;3. Cross platform&lt;/h1&gt;

&lt;p&gt;With Cake, you can start &lt;strong&gt;building&lt;/strong&gt; your software &lt;strong&gt;in multiple platforms&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If in your team, there are elements working with different operating systems, with Cake &lt;strong&gt;everyone can be working in the same build script&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;4. Agnostic from Build Server&lt;/h1&gt;

&lt;p&gt;With Cake you can easily &lt;strong&gt;move your scripts from one Build system to another&lt;/strong&gt;, without need to completely reconfigure the complete Build.&lt;/p&gt;

&lt;p&gt;The best proof of this: Cake is building Cake with Cake in multiple build servers (&lt;a href="https://github.com/cake-build/cake"&gt;see it in the Continuous integration section&lt;/a&gt;).&lt;/p&gt;

&lt;h1&gt;5. Healthy community&lt;/h1&gt;

&lt;p&gt;The Cake community is really active.&lt;/p&gt;

&lt;p&gt;Cake has a huge list of Addins delivered and maintained by the community.&lt;/p&gt;

&lt;p&gt;Also, since 2016 Cake is part of the .NET Foundation.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;I hope that this helps you (and convinced your boss).&lt;/em&gt;&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2017/05/tugait-build-automation-its-a-piece-of-cake/</id><title type="text">Tuga IT - Build Automation? It's a piece of Cake</title><summary type="html">&lt;p&gt;It was a huge privilege to share my experience with &lt;a href="http://cakebuild.net"&gt;Cake Build&lt;/a&gt; at &lt;a href="http://tugait.pt/2017/"&gt;Tuga IT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can find here the slides and demos that have been used, as well as some references related to the theme.&lt;/p&gt;

</summary><published>2017-05-22T23:00:00Z</published><updated>2017-05-22T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2017/05/tugait-build-automation-its-a-piece-of-cake/" /><content type="html">&lt;p&gt;It was a huge privilege to share my experience with &lt;a href="http://cakebuild.net"&gt;Cake Build&lt;/a&gt; at &lt;a href="http://tugait.pt/2017/"&gt;Tuga IT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can find here the slides and demos that have been used, as well as some references related to the theme.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;If you have any doubt please leave a comment below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Slides: &lt;a href="https://docs.com/gsferreira/7912/build-automation-its-a-piece-of-cake"&gt;docs.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Demos: &lt;a href="https://github.com/gsferreira/cakedemo"&gt;GitHub - CakeDemo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tugait.pt/2017/sessions/build-automation-its-a-piece-of-cake/"&gt;Session description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cakebuild.net/"&gt;Cake Build website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cake-build/cake"&gt;Cake Build Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hanselminutes.com/548/cake-build-a-c-make-cross-platform-build-automation-system-with-patrik-svensson"&gt;Hanselminutes Poadcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://radiotfs.com/Show/126/CakeByDevsForDevs"&gt;Radio TFS Poadcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dotnetrocks.com/?show=1321"&gt;.NET Rocks Poadcast - Understanding Cake with Gary Ewan Park&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cake-build/frosting"&gt;Cake Frosting Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2016/12/adding-custom-arguments-to-topshelf/</id><title type="text">Adding Custom Arguments to Topshelf</title><summary type="html">&lt;p&gt;&lt;a href="http://topshelf-project.com/"&gt;Topshelf&lt;/a&gt; is an amazing framework that let you easily host and build Windows services.&lt;/p&gt;

&lt;p&gt;Topshelf is really extensible, but recently I struggled to find how to configure a custom argument to the service.&lt;/p&gt;

&lt;p&gt;This post is simple tip to help you create custom arguments to a &lt;a href="http://topshelf-project.com/"&gt;Topshelf&lt;/a&gt; service and use it in the command line. &lt;/p&gt;

</summary><published>2016-12-07T00:00:00Z</published><updated>2016-12-07T00:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2016/12/adding-custom-arguments-to-topshelf/" /><content type="html">&lt;p&gt;&lt;a href="http://topshelf-project.com/"&gt;Topshelf&lt;/a&gt; is an amazing framework that let you easily host and build Windows services.&lt;/p&gt;

&lt;p&gt;Topshelf is really extensible, but recently I struggled to find how to configure a custom argument to the service.&lt;/p&gt;

&lt;p&gt;This post is simple tip to help you create custom arguments to a &lt;a href="http://topshelf-project.com/"&gt;Topshelf&lt;/a&gt; service and use it in the command line. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;This can be accomplished simply using the Host Configurations.&lt;/p&gt;

&lt;p&gt;If you use the method &lt;em&gt;"AddCommandLineDefinition"&lt;/em&gt; you will be able to specify the name of your argument (case sensitive) and how you want to use it.&lt;/p&gt;

&lt;p&gt;You can find here a simple example.&lt;/p&gt;

&lt;script src="https://gist.github.com/gsferreira/615526c3b10fbefcc49caaa4dafed57e.js"&gt;&lt;/script&gt;

&lt;p&gt;Then you can execute your service sending your argument as you can see in the following example (command line invoke).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.\TopShelfCustomArgs.exe run -path:"c:\temp" -frequency:2 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2016/11/create-a-web-deployment-package-with-cake-build/</id><title type="text">Create a Web Deployment Package with Cake Build</title><summary type="html">&lt;p&gt;This is simple tip to help you create Web Deployment Packages with &lt;a href="http://cakebuild.net/"&gt;Cake&lt;/a&gt;.&lt;/p&gt;

</summary><published>2016-11-04T00:00:00Z</published><updated>2016-11-04T00:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2016/11/create-a-web-deployment-package-with-cake-build/" /><content type="html">&lt;p&gt;This is simple tip to help you create Web Deployment Packages with &lt;a href="http://cakebuild.net/"&gt;Cake&lt;/a&gt;.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;If you have a ASP.NET project and you want to create a Web Deployment package using Cake, you just need to use the MSBUILD Command with the right arguments.&lt;/p&gt;

&lt;p&gt;Feel free to copy the following command and paste it in a Task from your Cake file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    MSBuild("PROJECT_NAME.csproj", settings =&amp;gt;
        settings.SetConfiguration(configuration)
        .UseToolVersion(MSBuildToolVersion.VS2015)
        .WithTarget("Package")
        .WithProperty("VisualStudioVersion", new string[]{"14.0"})
        .WithProperty("PackageLocation", new string[]{ packageDir.ToString()  })
        .WithProperty("PackageTempRootDir", new string[]{"root"})
        );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here an example of a complete script (&lt;em&gt;build.cake&lt;/em&gt;). &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var target = Argument("target", "Default");
var configuration = Argument("configuration", "Release");
var packageDir = MakeAbsolute(Directory("./package"));

Information("BUILD DIR:" + packageDir);

Task("Default")
.Does(() =&amp;gt;
{

    MSBuild("PROJECT_NAME.csproj", settings =&amp;gt;
        settings.SetConfiguration(configuration)
        .UseToolVersion(MSBuildToolVersion.VS2015)
        .WithTarget("Package")
        .WithProperty("VisualStudioVersion", new string[]{"14.0"})
        .WithProperty("PackageLocation", new string[]{ packageDir.ToString()  })
        .WithProperty("PackageTempRootDir", new string[]{"root"})
        );


});

RunTarget(target);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2016/09/pt-netponto-como-construir-software-altamente-eficiente-com-cqrs/</id><title type="text">NetPonto - Como construir software altamente eficiente com CQRS</title><summary type="html">&lt;p&gt;Esta semana tive a oportunidade de falar um pouco sobre a minha experiência com CQRS na Comunidade NetPonto.&lt;/p&gt;

&lt;p&gt;Se não tiveste a oportunidade de assistir, coloco aqui os slides, o vídeo da sessão, bem como algumas referências sobre o tema.&lt;/p&gt;

</summary><published>2016-09-18T23:00:00Z</published><updated>2016-09-18T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2016/09/pt-netponto-como-construir-software-altamente-eficiente-com-cqrs/" /><content type="html">&lt;p&gt;Esta semana tive a oportunidade de falar um pouco sobre a minha experiência com CQRS na Comunidade NetPonto.&lt;/p&gt;

&lt;p&gt;Se não tiveste a oportunidade de assistir, coloco aqui os slides, o vídeo da sessão, bem como algumas referências sobre o tema.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Alguma dúvida que tenhas, deixa um comentário.&lt;/p&gt;

&lt;p&gt;Video: &lt;a href="https://youtu.be/pM8GycDZji4?t=5614"&gt;Youtube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Slides: &lt;a href="http://www.slideshare.net/GuilhermeFerreira114/como-construir-software-altamente-eficiente-com-cqrs"&gt;SlideShare&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Referências:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://msdn.microsoft.com/en-us/library/jj554200.aspx"&gt;CQRS Journey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JHGkaShoyNs"&gt;Greg Young - CQRS and Event Sourcing - Code on the Beach 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dotnetrocks.com/?show=639"&gt;.NET Rocks - Udi Dahan Clarifies CQRS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dotnetrocks.com/?show=1044"&gt;.NET Rocks - CQRS Update with Udi Dahan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dotnetrocks.com/?show=820"&gt;.NET Rocks - Udi Dahan Talks CQRS, Agile and More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lostechies.com/jimmybogard/2012/06/26/eventual-consistency-cqrs-and-interaction-design/"&gt;Eventual consistency, CQRS and interaction design - LosTechies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lostechies.com/jimmybogard/2016/06/01/cqrs-and-rest-the-perfect-match"&gt;CQRS and REST: the perfect match - LosTechies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://martinfowler.com/bliki/CQRS.html"&gt;CQRS - Martin Fowler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cqrs.files.wordpress.com/2010/11/cqrs_documents.pdf"&gt;CQRS Documents by Greg Young&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/pt-netponto-como-construir-software-altamente-eficiente-com-cqrs.jpg" alt="netponto 20160919" /&gt;&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2016/08/azure-webjobs-dependency-injection-with-unity/</id><title type="text">Azure WebJobs dependency injection with Unity</title><summary type="html">&lt;p&gt;In the early days of &lt;strong&gt;Azure WebJobs&lt;/strong&gt; use &lt;strong&gt;Dependency Injection&lt;/strong&gt; was a little bit tricky because the Triggered methods were only static methods.&lt;/p&gt;

&lt;p&gt;Since the WebJobs SDK 1.0.1 you are no longer limited to static methods and that can change how you approach Dependency Injection on WebJobs.&lt;/p&gt;

&lt;p&gt;In this blog post I will show how you can use &lt;strong&gt;&lt;a href="https://github.com/unitycontainer/unity"&gt;Unity&lt;/a&gt;&lt;/strong&gt; to inject dependencies into your WebJobs.&lt;/p&gt;

</summary><published>2016-08-07T23:00:00Z</published><updated>2016-08-07T23:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2016/08/azure-webjobs-dependency-injection-with-unity/" /><content type="html">&lt;p&gt;In the early days of &lt;strong&gt;Azure WebJobs&lt;/strong&gt; use &lt;strong&gt;Dependency Injection&lt;/strong&gt; was a little bit tricky because the Triggered methods were only static methods.&lt;/p&gt;

&lt;p&gt;Since the WebJobs SDK 1.0.1 you are no longer limited to static methods and that can change how you approach Dependency Injection on WebJobs.&lt;/p&gt;

&lt;p&gt;In this blog post I will show how you can use &lt;strong&gt;&lt;a href="https://github.com/unitycontainer/unity"&gt;Unity&lt;/a&gt;&lt;/strong&gt; to inject dependencies into your WebJobs.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Setup dependency injection&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;In this post I'm assuming you already know how to set up a &lt;a href="https://azure.microsoft.com/en-gb/documentation/articles/websites-dotnet-webjobs-sdk-get-started/"&gt;WebJob&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The first step is to install the Unity Package in your project.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Install-Package Unity
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, we will need to implement the &lt;strong&gt;IJobActivator&lt;/strong&gt; Interface, that accepts a Unity container. Here, we will provide the capabilitie of resolve the Instances using the Unity container.&lt;/p&gt;

&lt;p&gt;Let's name the class as &lt;strong&gt;"UnityJobActivator"&lt;/strong&gt; and fill it with the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class UnityJobActivator : IJobActivator
{
    private readonly IUnityContainer _container;
    public UnityJobActivator(IUnityContainer container)
    {
        _container = container;
    }
    public T CreateInstance&amp;lt;T&amp;gt;()
    {
        return _container.Resolve&amp;lt;T&amp;gt;();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, the &lt;strong&gt;UnityJobActivator&lt;/strong&gt; receives in the constructor the Unity Container. Now let's setup the container.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I like to use a Unity Configuration Class to organize my Unity configurations.&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class UnityConfig
{
    private static Lazy&amp;lt;IUnityContainer&amp;gt; container = new Lazy&amp;lt;IUnityContainer&amp;gt;(() =&amp;gt;
    {
        var container = new UnityContainer();
        RegisterTypes(container);
        return container;
    });
    public static IUnityContainer GetConfiguredContainer()
    {
        return container.Value;
    }
    public static void RegisterTypes(IUnityContainer container)
    {
        container.RegisterType&amp;lt;IMailService, MailService&amp;gt;(new HierarchicalLifetimeManager());
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have the container defined, we can specify the &lt;strong&gt;JobActivator&lt;/strong&gt; that the WebJob should use. &lt;/p&gt;

&lt;p&gt;It can be accomplished using the Job Host Configuration (this is done in &lt;em&gt;Program.cs&lt;/em&gt; in the main method), as you can see in the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;JobHostConfiguration config = new JobHostConfiguration()
{
    JobActivator = new UnityJobActivator(UnityConfig.GetConfiguredContainer())
};
var host = new JobHost(config);
host.RunAndBlock();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, open your functions, transform them in non static methods and receive the parameter of the type you want in the constructor.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class Functions
{
    private readonly IMailService _mailService;
    public Functions(IMailService mailService)
    {
        _mailService = mailService;
    }

    public void ProcessQueueMessage([QueueTrigger("queue")] string message, TextWriter log)
    {
        _mailService.Send(message);

        log.WriteLine(message);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I hope that this helps you. &lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2016/02/the-shining-new-csharp-scripting-api/</id><title type="text">The shining new C# Scripting API</title><summary type="html">&lt;p&gt;&lt;strong&gt;Say hello to the new Scripting Language: C#!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since the first days the .NET platform lacks scripting capabilities compared to dynamic languages like JavaScript or Ruby, but those days are over.&lt;/p&gt;

&lt;p&gt;Why this is awesome?! If you are familiar with the capabilities that VBA brings the Office users and how many "Excel VBA Programming" books were sold to non developers, you will understand why.
And it's &lt;a href="https://github.com/dotnet/roslyn/tree/master/src/Scripting"&gt;open source&lt;/a&gt;!!!&lt;/p&gt;

</summary><published>2016-02-03T00:00:00Z</published><updated>2016-02-03T00:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2016/02/the-shining-new-csharp-scripting-api/" /><content type="html">&lt;p&gt;&lt;strong&gt;Say hello to the new Scripting Language: C#!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since the first days the .NET platform lacks scripting capabilities compared to dynamic languages like JavaScript or Ruby, but those days are over.&lt;/p&gt;

&lt;p&gt;Why this is awesome?! If you are familiar with the capabilities that VBA brings the Office users and how many "Excel VBA Programming" books were sold to non developers, you will understand why.
And it's &lt;a href="https://github.com/dotnet/roslyn/tree/master/src/Scripting"&gt;open source&lt;/a&gt;!!!&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;In the past few years we have been following the growing of the new .NET Compiler, commonly known as Roslyn. &lt;/p&gt;

&lt;p&gt;One of the great features of Roslyn is the Scripting API. The scripting API can enable applications to evaluate code at runtime providing the API to implement an excellent scripting experience.&lt;/p&gt;

&lt;p&gt;In December Microsoft finally released the Roslyn version 1.1.1 (stable version) in nuget that includes the Scripting API (that has been removed from Roslyn 1.0 release by the team). &lt;/p&gt;

&lt;p&gt;Here you can find some examples of how to use the scripting API and what you can do with it.&lt;/p&gt;

&lt;h2&gt;How to start&lt;/h2&gt;

&lt;p&gt;Install the nuget Scripting package (&lt;a href="http://www.nuget.org/packages/Microsoft.CodeAnalysis.CSharp.Scripting/"&gt;Microsoft.CodeAnalysis.CSharp.Scripting&lt;/a&gt;) in your project.&lt;/p&gt;

&lt;p&gt;In the following example I used the version 1.1.1.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Install-Package Microsoft.CodeAnalysis.CSharp.Scripting -Version 1.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Expression evaluation&lt;/h2&gt;

&lt;p&gt;Evaluate the result of an C# expression.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;object result = null;

CSharpScript.EvaluateAsync("System.DateTime.Today.Year")
    .ContinueWith(s =&amp;gt; result = s.Result).Wait();

Assert.AreEqual(DateTime.Today.Year, result);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Expression evaluation with strong type&lt;/h2&gt;

&lt;p&gt;Evaluate an expression with an expected result type. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int result = 0;

CSharpScript.EvaluateAsync&amp;lt;int&amp;gt;("100 * 2")
    .ContinueWith(s =&amp;gt; result = s.Result).Wait();

Assert.AreEqual(200, result);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Evaluation with parameters&lt;/h2&gt;

&lt;p&gt;Send parameters to the expression and use them in the script logic. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class Globals
{
    public int NumberOfStudents;
    public int StudentsPerClass;
}

var globals = new Globals { NumberOfStudents = 80, StudentsPerClass = 15 };

int result = 0;
CSharpScript.EvaluateAsync&amp;lt;int&amp;gt;("NumberOfStudents/StudentsPerClass", globals: globals)
    .ContinueWith(s =&amp;gt; result = s.Result).Wait();

Assert.AreEqual(globals.NumberOfStudents / globals.StudentsPerClass, result);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Build a script and run it multiple times&lt;/h2&gt;

&lt;p&gt;The scripting API enables you to create an expression and then use it multiple times, removing the compile time of the remaining evaluations.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var script = CSharpScript.Create&amp;lt;decimal&amp;gt;("NumberOfStudents/StudentsPerClass", globalsType: typeof(Globals));

script.Compile();

for (int i = 1; i &amp;lt; 10; i++)
{
    script.RunAsync(new Globals { NumberOfStudents = i, StudentsPerClass = 5 })
        .ContinueWith(s =&amp;gt; 
            Assert.AreEqual(i / 5, s.Result.ReturnValue))
        .Wait();
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;The script can use references to other assemblies with a simple instruction.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;string result = string.Empty;

CSharpScript.EvaluateAsync&amp;lt;string&amp;gt;("System.Configuration.ConfigurationManager.AppSettings[\"MyValue\"].ToString()", 
ScriptOptions.Default.WithReferences(typeof(System.Configuration.ConfigurationManager).Assembly))
    .ContinueWith(s =&amp;gt; result = s.Result).Wait();

Assert.AreEqual(ConfigurationManager.AppSettings["MyValue"].ToString(), result);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Imports&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;int result = 0;
CSharpScript.EvaluateAsync&amp;lt;int&amp;gt;("DateTime.Today.Year",
ScriptOptions.Default.WithImports("System"))
    .ContinueWith(s =&amp;gt; result = s.Result).Wait();

Assert.AreEqual(DateTime.Today.Year, result);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Dynamic Support&lt;/h2&gt;

&lt;p&gt;To use dynamic objects in scripts we need to add a reference to the &lt;em&gt;System.Code&lt;/em&gt;, &lt;em&gt;Microsoft.CSharp&lt;/em&gt; and &lt;em&gt;System.Dynamic&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int result = 0;

CSharpScript.EvaluateAsync&amp;lt;int&amp;gt;(@"
    dynamic value = 30;
    return value;",
ScriptOptions.Default.WithImports("System.Dynamic")
    .AddReferences(
        Assembly.GetAssembly(typeof(System.Dynamic.DynamicObject)),  // System.Code
        Assembly.GetAssembly(typeof(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo)),  // Microsoft.CSharp
        Assembly.GetAssembly(typeof(System.Dynamic.ExpandoObject))  // System.Dynamic
    ))
    .ContinueWith(s =&amp;gt; result = s.Result).Wait();

Assert.AreEqual(30, result);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Access to script variables&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;var globals = new Globals { NumberOfStudents = 80, StudentsPerClass = 10 };

ScriptState state = null;

CSharpScript.RunAsync(@"
    bool shouldOpenClass = NumberOfStudents &amp;gt;= StudentsPerClass;
    int numberOfClasses = NumberOfStudents/StudentsPerClass;
", globals: globals)
.ContinueWith(s =&amp;gt; state = s.Result).Wait();

Assert.AreEqual(true, state.GetVariable("shouldOpenClass").Value);
Assert.AreEqual(8, state.GetVariable("numberOfClasses").Value);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Those are just a few examples and I recommend you check out the &lt;a href="https://github.com/dotnet/roslyn"&gt;Roslyn Github Repository&lt;/a&gt;.&lt;/p&gt;
</content></entry><entry><id>http://gsferreira.com/archive/2015/11/is-cqrs-too-complicated-no/</id><title type="text">Is CQRS too complicated? No!</title><summary type="html">&lt;p&gt;How do you feel after reading a few articles about CQRS (Command Query Responsibility Segregation)? Confused?! &lt;/p&gt;

&lt;p&gt;The good news is that's not your problem.&lt;/p&gt;

&lt;p&gt;CQRS is a simple concept, but usually is presented side by side with other patterns creating the perception that CQRS requires a ton of elements to work. &lt;/p&gt;

&lt;p&gt;This post pretends to demonstrate that CQRS can be a simple concept that can evolve according to your needs.&lt;/p&gt;

</summary><published>2015-11-09T00:00:00Z</published><updated>2015-11-09T00:00:00Z</updated><link rel="alternate" href="http://gsferreira.com/archive/2015/11/is-cqrs-too-complicated-no/" /><content type="html">&lt;p&gt;How do you feel after reading a few articles about CQRS (Command Query Responsibility Segregation)? Confused?! &lt;/p&gt;

&lt;p&gt;The good news is that's not your problem.&lt;/p&gt;

&lt;p&gt;CQRS is a simple concept, but usually is presented side by side with other patterns creating the perception that CQRS requires a ton of elements to work. &lt;/p&gt;

&lt;p&gt;This post pretends to demonstrate that CQRS can be a simple concept that can evolve according to your needs.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h1&gt;So, what is CQRS?&lt;/h1&gt;

&lt;p&gt;The roots of CQRS are based on &lt;a href="https://en.wikipedia.org/wiki/Command%E2%80%93query_separation"&gt;Command-query separation (CQS)&lt;/a&gt; a principle created by &lt;a href="https://en.wikipedia.org/wiki/Bertrand_Meyer"&gt;Bertrand Meyer&lt;/a&gt; during the development of Eiffel programming language.&lt;/p&gt;

&lt;p&gt;Meyer states that &lt;em&gt;"Asking a question should not change the answer"&lt;/em&gt; and that's the foundation of CQRS.&lt;/p&gt;

&lt;p&gt;We can conclude from that statement that a command is any method that creates, update or delete data, and a query is any method that returns data.&lt;/p&gt;

&lt;p&gt;CQRS is an evolution of CQS, going further with the initial concept and stating that Read and Write models should be distinct.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CQRS is simply that&lt;/strong&gt;, is the segregation of two main responsibilities, the responsibility of read data and the responsibility of mutate data.&lt;/p&gt;

&lt;p&gt;Don't you recognize this principles? "Denormalization", cache systems, read-optimized databases and others, are proof that the industry is already thinking in the problems CQRS want's to solve. &lt;/p&gt;

&lt;p&gt;&lt;img src="http://gsferreira.com/images/is-cqrs-too-complicated-no-diagram.png" alt="Diagram CQRS" /&gt;&lt;/p&gt;

&lt;p&gt;It's important to say that there's nothing in CQRS saying that we should use Event Sourcing, Service Bus or another element to implement CQRS. 
Those patterns or technologies are usually presented with CQRS, adding a new layer of complexity to CQRS.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nothing about CQRS says “you shalt use NServiceBus”. It’s just not there. You’re merely separating infrastructure between handling commands and queries, but the how is quite varied.&lt;/p&gt;
  
  &lt;p&gt;&lt;em&gt;&lt;a href="https://lostechies.com/jimmybogard/2012/08/22/busting-some-cqrs-myths/"&gt;Jimmy Bogard&lt;/a&gt;&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;CQRS Benefits&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;All the following benefits are capabilities that CQRS gives you, but &lt;strong&gt;they aren't required to implement CQRS&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simple Queries&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Because the Read model is different from the Write model, it's possible to create simpler queries and with better performance. If the Read and the Write model are shared, you will constrain the Queries to the Write structure.&lt;/p&gt;

&lt;p&gt;The system will also benefit of a thinner Read layer.  &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Simple code is fast code&lt;/p&gt;
  
  &lt;p&gt;&lt;em&gt;&lt;a href="http://udidahan.com/2009/12/09/clarified-cqrs/"&gt;Udi Dahan&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Separate data store&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since the Read model is separate, you are able to segregate the database, querying a non relational database optimized for queries.&lt;/p&gt;

&lt;p&gt;That will lead us to concepts like Eventual Consistency or Event Sourcing, but it's important to say that CQRS doesn't require this, he just enables the capability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It's perfectly possible to implement CQRS using the same data store.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Event sourcing is a completely orthogonal concept to CQRS. While they fit well together, doing CQRS does not require event sourcing, and doing event sourcing does not automatically mean we’re doing CQRS.&lt;/p&gt;
  
  &lt;p&gt;&lt;em&gt;&lt;a href="https://lostechies.com/jimmybogard/2012/08/22/busting-some-cqrs-myths/"&gt;Jimmy Bogard&lt;/a&gt;&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Queued workload&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Commands can be processed using a queue, enabling an asynchronous command processing, what can be useful to deal with complex processing or manage the system load.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Segregate load&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Typically the number of queries in a system is much higher than the number of commands. So, why should both be based on the same technologies? &lt;/p&gt;

&lt;p&gt;CQRS enables the segregation of the Load, with the possibility of use a different host for each part of system.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The largest possible benefit though is that it recognizes that their are different architectural properties when dealing with commands and queries … for example it allows us to host the two services differently eg: we can host the read service on 25 servers and the write service on two&lt;/p&gt;
  
  &lt;p&gt;&lt;em&gt;&lt;a href="http://codebetter.com/gregyoung/2010/02/16/cqrs-task-based-uis-event-sourcing-agh/"&gt;Greg Young&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;Challenges&lt;/h1&gt;

&lt;p&gt;CQRS isn't just benefits. CQRS implies complexity and a new mindset when using it.&lt;/p&gt;

&lt;p&gt;Usually we are formatted to think in CRUD operations, but with CQRS we're led to a Task-based system. We need to rethink the UI to be based on tasks and to deal with the eventual consistency (if we need it).&lt;/p&gt;

&lt;p&gt;I can't say that CQRS fits all the cases or is a tool that you should use always. What I can say is that's an important tool to have in mind when dealing with some complex problems.&lt;/p&gt;

&lt;p&gt;It's important to remember that you should start simple and CQRS enables you to adjust and evolve if you need it. &lt;/p&gt;

&lt;p&gt;Don't try to do all upfront.&lt;/p&gt;
</content></entry></feed>